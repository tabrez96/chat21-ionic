{"version":3,"sources":["../../src/models/user.ts","../../src/providers/messaging-service.ts","../../src/providers/chat-conversations-handler.ts","../../src/providers/group/group.ts","../../src/utils/utils.ts","../../src/pages/archived-conversations/archived-conversations.ts","../../src/pages/popover-profile/popover-profile.ts","../../src/pages/update-image-profile/update-image-profile.ts","../../src/pages/conversation-list/conversation-list.ts","../../src/pages/users/users.ts","../../node_modules/@angular/core/esm5 lazy","../../src/providers/chat-manager/chat-manager.ts","../../src lazy","../../src/utils/constants.ts","../../src/providers/user/user.ts","../../src/pages/_DetailPage.ts","../../src/models/message.ts","../../src/models/upload.ts","../../src/providers/chat-contacts-synchronizer.ts","../../src/pages/authentication/login/login.ts","../../src/pages/authentication/register/register.ts","../../src/pages/authentication/resetpwd/resetpwd.ts","../../src/providers/chat-archived-conversations-handler.ts","../../src/pages/conversation-detail/conversation-detail.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/nav-proxy.ts","../../src/providers/upload-service/upload-service.ts","../../node_modules/moment/locale ^/.//.*$","../../src/providers/database/database.ts","../../src/pages/_MasterPage.ts","../../src/app/app.component.ts","../../src/pages/info-conversation/info-conversation.ts","../../src/models/group.ts","../../src/pages/info-message/info-message.ts","../../src/directives/autosize/autosize.ts","../../src/pages/placeholder/placeholder.ts","../../src/providers/chat-presence-handler.ts","../../src/providers/chat-conversation-handler.ts","../../src/providers/auth-service.ts","../../src/providers/tiledesk-conversation/tiledesk-conversation.ts","../../src/pages/profile/profile.ts","../../src/pages/popover/popover.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class UserModel {\n  constructor( \n    public uid: string,\n    public email: string,\n    public firstname: string,\n    public lastname: string,\n    public fullname: string,\n    public imageurl: string\n  ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport * as firebase from 'firebase';\n\nimport { Config } from 'ionic-angular';\nimport { CURR_VER_DEV, CURR_VER_PROD } from '../utils/constants';\n\n//import { AuthService } from './auth-service';\n\n/*\n  Generated class for the AuthService provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class MessagingService {\n    messaging: firebase.messaging.Messaging;\n    //private afAuth: AngularFireAuth;\n    private urlNodeFirebase: string;\n    private connectionsRefinstancesId: string;\n    private tenant: string;\n    //private deviceConnectionRef;\n    public token: string;\n    public BUILD_VERSION: string;\n \n    //public authService: AuthService;\n\n    constructor(\n        //private afAuth: AngularFireAuth \n        public config: Config\n    ) { \n        // recupero tenant\n        this.tenant = config.get(\"appConfig\").tenant;\n        this.urlNodeFirebase = '/apps/'+this.tenant;\n        this.BUILD_VERSION = 'v.' + CURR_VER_PROD + ' b.' + CURR_VER_DEV; // 'b.0.5';\n\n        // Callback fired if Instance ID token is updated.\n        // this.messaging.onTokenRefresh(function() {\n        //     this.messaging.getToken()\n        //     .then(function(refreshedToken) {\n        //         console.log('Token refreshed.');\n        //         // Indicate that the new Instance ID token has not yet been sent to the\n        //         // app server.\n        //         //this.setTokenSentToServer(false);\n        //         this.token = refreshedToken;\n        //         // Send Instance ID token to app server.\n        //         this.updateToken(refreshedToken);\n        //         // ...\n        //     })\n        //     .catch(function(err) {\n        //         console.log('Unable to retrieve refreshed token ', err);\n        //         this.showToken('Unable to retrieve refreshed token ', err);\n        //     });\n        // });\n    }\n\n    initMessage() {\n        this.messaging = firebase.messaging();\n        console.log('initMessage:::: ', this.messaging);\n        // //navigator.serviceworker.register('/XXXXX/sw.js', {scope: '/XXXX/non-existant-path/')\n        // navigator.serviceWorker.register(SERVICE_WORKER_DEV, {scope: \"firebase-cloud-messaging-push-scope\"})\n        // .then(function (registration) {\n        //     this.messaging = firebase.messaging();\n        //     this.messaging.useServiceWorker(registration);\n        //     console.log('initMessage:::: ', registration); \n        // }).catch(function (err) {\n        //     // registration failed :(\n        //     console.log('ServiceWorker registration failed: ', err);\n        // });\n    }\n\n    getPermission() {\n        console.log('Notification getPermission.');\n\n        // Request permission and get token.....\n        this.messaging.requestPermission()\n        .then(token => {\n            console.log('Notification permission granted.');\n            // TODO(developer): Retrieve an Instance ID token for use with FCM.\n            this.token = token;\n            console.log('NOTIFICA PERMESSO token.', token);\n            //this.updateToken(token);\n        })\n        .catch(function(err) {\n            console.log('Unable to get permission to notify.', err);\n        });\n\n        // navigator.serviceWorker.register('./firebase-messaging-sw.js')\n        // .then((registration) => {\n        //     this.messaging.useServiceWorker(registration);\n        //     console.log('useServiceWorker.', registration);\n        //     // Request permission and get token.....\n        //     this.messaging.requestPermission()\n        //     .then(token => {\n        //         console.log('Notification permission granted.');\n        //         // TODO(developer): Retrieve an Instance ID token for use with FCM.\n        //         this.token = token;\n        //         console.log('NOTIFICA PERMESSO token.', token);\n        //         //this.updateToken(token);\n        //     })\n        //     .catch(function(err) {\n        //         console.log('Unable to get permission to notify.', err);\n        //     });\n        // });\n        \n\n        // .then(() => {\n        //     console.log('Notification permission granted.');\n        //     firebase.auth().currentUser.getToken(/* forceRefresh */ true)\n        //     .then(function(idToken) {\n        //         // Send token to your backend via HTTPS\n        //         this.token = idToken;\n        //     })\n        //     .catch(function(error) {\n        //         // Handle error\n        //         console.log('NON POSSO RECUPERARE IL TOKEN.', error);\n        //     });\n        //     //return this.messaging.getToken();\n        // })\n        // .then(token => {\n        //     this.token = token;\n        //     console.log(token);\n        //     console.log('NOTIFICA PERMESSO token.', token);\n        //     //this.updateToken(token);\n        // })\n        // .catch((err) => {\n        //     console.log('NON DISPONIBILE IL PERMESSO DI NOTIFICA.', err);\n        // });\n    }\n  \n    getToken(user){\n        // Get Instance ID token. Initially this makes a network call, once retrieved\n        // subsequent calls to getToken will return from cache.\n        let that = this;\n        this.messaging.getToken()\n        .then(function(currentToken) {\n            if (currentToken) {\n                console.log('currentToken: ', currentToken);\n                //sendTokenToServer(currentToken);\n                that.token = currentToken;\n                //updateUIForPushEnabled(currentToken);\n                that.updateToken(user);\n            } else {\n                // Show permission request.\n                console.log('No Instance ID token available. Request permission to generate one.');\n                // Show permission UI.\n                //updateUIForPushPermissionRequired();\n                //setTokenSentToServer(false);\n            }\n        })\n        .catch(function(err) {\n            console.log('An error occurred while retrieving token. ', err);\n            //showToken('Error retrieving Instance ID token. ', err);\n            //setTokenSentToServer(false);\n        });\n    }\n\n    // returnToken(): string {\n    //     return this.token;\n    // }\n\n\n    updateToken(user) {\n        console.log(\"***********************\",this.token);\n        //this.afAuth.authState.take(1).subscribe(user => {\n        if (!user || !this.token) return;\n        console.log(\"aggiorno token nel db\");\n        // aggiorno token nel db\n        //let connectionsRef: firebase.database.Reference = this.referenceToUserListToken(user.uid);\n        let conection = this.token;\n        var updates = {};\n        \n        this.connectionsRefinstancesId = this.urlNodeFirebase+\"/users/\"+user.uid+\"/instances/\";\n        \n        let device_model = {\n            device_model: navigator.userAgent,\n            language: navigator.language,\n            platform: 'ionic',\n            platform_version: this.BUILD_VERSION\n        }\n        updates[this.connectionsRefinstancesId + conection] = device_model;\n        console.log(\"Aggiorno token ------------>\", updates);\n        // else{\n            // this.connectionsRefinstancesId = this.urlNodeFirebase+\"/users/\"+user.uid+\"/instanceId/\";\n            // updates[this.connectionsRefinstancesId] = conection;\n        //}\n        firebase.database().ref().update(updates);\n        //this.deviceConnectionRef = connectionsRef.push(conection);\n        //this.tokenId = conection;//this.deviceConnectionRef.key;\n        //console.log(\"--------->rimuovo token nel db\", this.deviceConnectionRef.key);\n        //!!! solo quando faccio logout devo rimuovere il token inserito\n        //this.deviceConnectionRef.onDisconnect().remove(); \n    }\n    \n    removeToken() {\n        console.log(\"rimuovo token nel db\", this.token);\n        let connectionsRefURL = \"\";\n        if(this.connectionsRefinstancesId){\n            connectionsRefURL = this.connectionsRefinstancesId;\n            const connectionsRef = firebase.database().ref().child(connectionsRefURL);\n            connectionsRef.remove();\n        }\n    }\n\n    referenceToUserListToken(userid){\n\n        this.connectionsRefinstancesId = this.urlNodeFirebase+\"/users/\"+userid+\"/instances/\";\n        // else{\n            //this.connectionsRefinstancesId = this.urlNodeFirebase+\"/users/\"+userid+\"/instanceId/\";\n        //}\n        const connectionsRef = firebase.database().ref().child(this.connectionsRefinstancesId);\n        console.log(\"referenceToUserListToken ------------>\", connectionsRef);\n        return connectionsRef;\n    }\n\n    receiveMessage() {\n        this.messaging.onMessage((payload) => {\n            console.log(\"OKKKK -------------> Message received. \", payload);\n            //this.currentMessage.next(payload)\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/messaging-service.ts","import { Injectable, NgZone } from '@angular/core';\n\nimport 'rxjs/add/operator/map';\nimport { Events } from 'ionic-angular';\n// firebase\nimport * as firebase from 'firebase/app';\n// models\nimport { UserModel } from '../models/user';\nimport { ConversationModel } from '../models/conversation';\n// services\nimport { ChatManager } from './chat-manager/chat-manager';\n// utils\nimport { TYPE_GROUP, URL_NO_IMAGE, TYPE_DIRECT } from '../utils/constants';\nimport { compareValues, getFromNow, contactsRef, conversationsPathForUserId, searchIndexInArrayForUid } from '../utils/utils';\nimport { TiledeskConversationProvider } from './tiledesk-conversation/tiledesk-conversation';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { avatarPlaceholder, getColorBck, urlExists } from '../utils/utils';\nimport { UploadService } from '../providers/upload-service/upload-service';\n\n@Injectable()\nexport class ChatConversationsHandler {\n\n    public conversations: ConversationModel[] = [];\n    public uidConvSelected: String = '';\n\n    private tenant: string;\n    private loggedUser: UserModel;\n    private userId: string;\n    private ref: firebase.database.Query;\n    public audio: any;\n\n    //public LABEL_TU: string;\n    constructor(\n        public events: Events,\n        public chatManager: ChatManager,\n        public translate: TranslateService,\n        private tiledeskConversationsProvider : TiledeskConversationProvider,\n        public upSvc: UploadService,\n        public zone: NgZone\n    ) {\n    }\n\n    /**\n     * ritorno istanza di conversations handler\n     */\n    getInstance() {\n        return this;\n    }\n    /**\n     * inizializzo conversations handler\n     * @param tenant \n     * @param user \n     */\n    initWithTenant(tenant, loggedUser):ChatConversationsHandler{\n        this.tenant = tenant;\n        this.loggedUser = loggedUser;\n        this.userId = loggedUser.uid;\n        //this.conversations = [];\n        return this;\n    }\n    /**\n     * mi connetto al nodo conversations\n     * creo la reference\n     * mi sottoscrivo a change, removed, added\n     */\n    connect() {\n        const that = this;\n        const urlNodeFirebase = conversationsPathForUserId(this.tenant, this.userId);\n        //const urlNodeFirebase = '/apps/'+tenant+'/users/'+this.loggedUser.uid+'/conversations';\n        this.ref = firebase.database().ref(urlNodeFirebase).orderByChild('timestamp').limitToLast(200);\n        this.ref.on(\"child_changed\", function(childSnapshot) {\n            that.changed(childSnapshot);\n            that.soundMessage();\n        });\n        this.ref.on(\"child_removed\", function(childSnapshot) {\n            that.removed(childSnapshot);\n        });\n        this.ref.on(\"child_added\", function(childSnapshot) {\n            that.added(childSnapshot);\n            that.soundMessage();\n        })\n    }\n\n\n   \n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n    /**\n     * 1 - aggiungo alla pos 0 la nuova conversazione all'array di conversazioni \n     * 2 - pubblico conversations:update\n     * @param childSnapshot \n     */\n    added(childSnapshot){\n        const childData:ConversationModel = childSnapshot.val();\n        childData.uid = childSnapshot.key;\n        const conversation = this.completeConversation(childData);\n        \n        if (this.isValidConversation(childSnapshot.key, conversation)) {\n            this.conversations.splice(0, 0, conversation);\n            console.log(\"child_added conversationS\",conversation);\n            //this.events.publish('conversations:added', conversation);\n\n            // add the conversation from the isConversationClosingMap\n            this.tiledeskConversationsProvider.setClosingConversation(childSnapshot.key, false);\n\n            this.conversations.sort(compareValues('timestamp', 'desc'));\n        } else {\n            console.error(\"ChatConversationsHandler::added::conversations with conversationId: \", childSnapshot.key, \"is not valid\");\n        }\n    }\n    /**\n     * 1 - cerco indice conversazione nell'array conversation\n     * 2 - sostituisco conversazione\n     * 3 - pubblico conversations:update\n     * @param childSnapshot \n     */\n    changed(childSnapshot){\n        const childData:ConversationModel = childSnapshot.val();\n        childData.uid = childSnapshot.key;\n        let conversation = this.completeConversation(childData); \n\n        if (this.isValidConversation(childSnapshot.key, conversation)) {\n            //conversation = this.isConversationSelected(conversation, '1');\n            const index = searchIndexInArrayForUid(this.conversations, conversation.uid);\n            this.conversations.splice(index, 1, conversation);\n            this.conversations.sort(compareValues('timestamp', 'desc'));\n            console.log(\"child_changed conversationS\",conversation);\n            \n            // this.events.publish('conversations:changed', this.conversations);\n\n        } else {\n            console.error(\"ChatConversationsHandler::changed::conversations with conversationId: \", childSnapshot.key, \"is not valid\");\n        }\n    }\n    /**\n     * 1 - cerco indice conversazione da eliminare\n     * 2 - elimino conversazione da array conversations\n     * 3 - pubblico conversations:update\n     * @param childSnapshot \n     */\n    removed(childSnapshot){\n        console.log(\"ChatConversationsHandler::onSnapshotRemoved::conversation:\", childSnapshot.key);\n\n        const index = searchIndexInArrayForUid(this.conversations, childSnapshot.key);\n        // controllo superfluo sarà sempre maggiore\n        if(index>-1){\n            // splice (<indice dell'elemento da eliminare>, <numero di elementi da eliminare>)\n            this.conversations.splice(index, 1);\n            //this.events.publish('conversations:update', this.conversations);\n\n            this.conversations.sort(compareValues('timestamp', 'desc'));\n        }\n\n        // remove the conversation from the isConversationClosingMap\n        this.tiledeskConversationsProvider.deleteClosingConversation(childSnapshot.key);\n       \n        // // sort the array without the removed item and update the conversations list\n        // this.conversations = this.sort(this.conversations); \n\n        // var sortedCopy = this.sort(this.conversations); \n        // for (var i = 0; i < sortedCopy.length; i++) {\n        //     var item: ConversationModel = sortedCopy[i];\n        //     console.log(i + \") ChatConversationsHandler::removed::item\", item, item.timestamp);\n        // }\n        // this.conversations = sortedCopy; \n\n        // this.events.publish('conversations:removed');\n    }\n\n    /**\n     * \n     * @param conv \n     */\n    // isConversationSelected(conv, status){\n    //     conv.status = status;\n    //     if(conv.uid == this.uidConvSelected){\n    //         conv.selected = true;\n    //         conv.status = '0';\n    //     }\n    //     return conv;\n    // }\n    /**\n     * Completo conversazione aggiungendo:\n     * 1 - imposto selected == true se è la conversazione selezionata\n     * 2 - imposto fullname del sender concatenando nome e cognome e\n     *   - aggiungo 'tu:' se il sender coincide con il loggedUser\n     * 3 - imposto il tempo trascorso dell'invio dell'ultimo messaggio\n     * @param conv \n     */\n    completeConversation(conv):ConversationModel{\n        //debugger;\n        var LABEL_TU = this.translate.get('LABEL_TU')['value'];\n        conv.selected = false;\n        if(!conv.sender_fullname || conv.sender_fullname === 'undefined' || conv.sender_fullname.trim() === ''){\n            conv.sender_fullname = conv.sender;\n        }\n        if(!conv.recipient_fullname || conv.recipient_fullname === 'undefined' || conv.recipient_fullname.trim() === ''){\n            conv.recipient_fullname = conv.recipient;\n        }\n\n        let conversation_with_fullname = conv.sender_fullname;\n        let conversation_with = conv.sender;\n        if(conv.sender === this.loggedUser.uid){\n            conversation_with = conv.recipient;\n            conversation_with_fullname = conv.recipient_fullname;\n            conv.last_message_text = LABEL_TU + conv.last_message_text;\n        } \n        else if (conv.channel_type === TYPE_GROUP) {\n            conversation_with = conv.recipient;\n            conversation_with_fullname = conv.recipient_fullname;\n            conv.last_message_text = conv.last_message_text;\n        }\n        \n        conv.conversation_with_fullname = conversation_with_fullname;\n\n        conv.status = this.setStatusConversation(conv.sender, conv.uid);\n        this.setImageConversation(conv, conversation_with);\n    \n        \n\n        const time_last_message = this.getTimeLastMessage(conv.timestamp);\n        conv.time_last_message = time_last_message;\n        conv.avatar = avatarPlaceholder(conversation_with_fullname);\n        conv.color = getColorBck(conversation_with_fullname);\n\n        return conv;\n    }\n\n    // set the remote conversation as read\n    setConversationRead(conversationUid) {\n        var conversationRef = this.ref.ref.child(conversationUid);\n        conversationRef.update ({\"is_new\" : false});\n    }\n\n\n    setStatusConversation(sender, uid): string {\n        let status = '0'; //letto\n        if(sender === this.loggedUser.uid || uid === this.uidConvSelected){\n            status = '0'; \n        } else {\n            status = '1'; // non letto\n        }\n        return status;\n    }\n\n    setImageConversation2(conv, conversation_with) {\n        let image = URL_NO_IMAGE;\n        conv.image = 'https://firebasestorage.googleapis.com/v0/b/chat-v2-dev.appspot.com/o/profiles%2F'+conversation_with+'%2Fthumb_photo.jpg?alt=media';\n        console.log(\"urlExists::: \",urlExists(conv.image));\n        /*\n        if(conv.channel_type === TYPE_DIRECT) {\n            const urlNodeConcacts = contactsRef(this.tenant) + conversation_with + '/imageurl/';\n            firebase.database().ref(urlNodeConcacts).once('value')\n            .then(function(snapshot) {\n                //console.log(\"urlNodeConcacts::: \", snapshot.val(), urlNodeConcacts);\n                //conv.image = snapshot.val();\n                if(snapshot.val().trim()){\n                    //return snapshot.val();\n                    conv.image = snapshot.val();\n                } else {\n                    conv.image = image;\n                }\n            })\n            .catch(function(err) {\n                conv.image = image;\n            })\n        } else {\n            conv.image = image;\n        }*/\n    }\n    \n\n     /**\n     * carico url immagine profilo passando id utente\n     */\n    setImageConversation(conv, conversation_with){\n        const that = this;\n        console.log(\"********** displayImage uidContact::: \", conversation_with);\n        if(conversation_with){\n            this.upSvc.display(conversation_with, 'thumb')\n            .then((url) => {\n                console.log(\"**********XX displayImage url::: \", url);\n                conv.image = url;\n                //return url;\n            }).catch((error) => {\n                console.log(\"**********XX  displayImage error::: \", error);\n                conv.image = null;\n                //return '';\n            });\n        }\n    }\n\n    /**\n     * calcolo il tempo trascorso da ora al timestamp passato\n     * @param timestamp \n     */\n    getTimeLastMessage(timestamp: string) {\n        let timestampNumber = parseInt(timestamp) / 1000;\n        let time = getFromNow(timestampNumber);\n        return time;\n    }\n    /**\n     * 1 - deseleziono tutte le conversazioni (setto tutti su on selected FALSE)\n     * 2 - evidezio la conversazione selezionata (setto selected TRUE)\n     * @param uid \n     */\n    // setConversationSelected(uid): ConversationModel[]{\n    //     this.conversations.forEach(function(element) {\n    //         element.selected = false;\n    //     });   \n    //     this.conversations.filter(function(item){\n    //         if(item.uid == uid){\n    //         item.selected = true;\n    //         return;\n    //         }\n    //     });\n    //     return this.conversations;\n    // }\n    /**\n     * dispose reference di conversations\n     */\n    dispose() {\n        this.conversations = [];\n        this.uidConvSelected = '';\n\n        this.ref.off();\n        this.ref.off(\"child_changed\");\n        this.ref.off(\"child_removed\");\n        this.ref.off(\"child_added\");\n    \n        console.log(\"DISPOSE::: \",this.ref);\n    }\n\n    // private clone(convs: ConversationModel[]): ConversationModel[] {\n    //     var copy = [];\n    //     for (var i = 0; i < convs.length; i++) {\n    //         var item: ConversationModel = convs[i];\n    //         copy.push(item);\n    //     }\n    //     return copy;\n    // }\n    // private sort(convs: ConversationModel[]): ConversationModel[] {\n    //     return this.clone(convs).sort(this.compare);\n    // }\n    // private compare(a: ConversationModel, b: ConversationModel) : number {\n    //     return (a.timestamp < b.timestamp) ? 1 : ((b.timestamp < a.timestamp) ? -1 : 0); \n    // }\n    // private existsInArray(convs: ConversationModel[], item: ConversationModel) : boolean{\n    //     return convs.some(function (el) { \n    //         return el.uid === item.uid \n    //     }); //true\n    // }\n\n    removeByUid(uid) {\n        const index = searchIndexInArrayForUid(this.conversations, uid);\n        if (index > -1) {\n            this.conversations.splice(index, 1);\n        }\n    }\n\n    addConversationListener(uidUser, conversationId) {\n        console.log(\"ChatConversationsHandler::addConversationListener::uidUser:\", uidUser, \"conversationId:\", conversationId);\n\n        var that = this;\n\n        const tenant = this.chatManager.getTenant();\n        const url = '/apps/' + tenant + '/users/' + uidUser + '/conversations/' + conversationId;\n        const reference = firebase.database().ref(url);\n        console.log(\"ChatConversationsHandler::addConversationListener::reference:\", reference.toString());\n\n        reference.on('value', function (snapshot) {\n            setTimeout(function () {\n                that.events.publish(conversationId + '-listener', snapshot);\n            }, 100);\n\n        });\n    }\n\n    // check if the conversations is valid or not\n    private isValidConversation(convToCheckId, convToCheck: ConversationModel) : boolean {\n\n        console.log(\"[BEGIN] ChatConversationsHandler:: convToCheck with uid: \", convToCheckId);\n\n        if (!this.isValidField(convToCheck.uid)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'uid is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.is_new)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'is_new is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.last_message_text)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'last_message_text is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.recipient)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'recipient is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.recipient_fullname)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'recipient_fullname is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.sender)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'sender is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.sender_fullname)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'sender_fullname is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.status)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'status is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.timestamp)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'timestamp is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.channel_type)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'channel_type is not valid' \");\n            return false;\n        }\n\n        console.log(\"[END] ChatConversationsHandler:: convToCheck with uid: \", convToCheckId);\n\n        // any other case\n        return true;\n    }\n\n    // checks if a conversation's field is valid or not\n    private isValidField(field) : boolean{\n        return (field === null || field === undefined) ? false : true;\n    }\n\n    // private getColorBck(str){\n    //     var arrayBckColor = ['#fba76f', '#80d066', '#73cdd0', '#ecd074', '#6fb1e4', '#f98bae'];\n    //     var num = 0;\n    //     if(str){\n    //         var code = str.charCodeAt((str.length-1));\n    //         num = Math.round(code%arrayBckColor.length);\n    //         console.log('************** code',str.length, code, arrayBckColor.length, num);\n    //     }\n    //     return arrayBckColor[num];\n    // }\n    // private avatarPlaceholder(conversation_with_fullname) {\n    //     var initials = '';\n    //     if(conversation_with_fullname){\n    //         var arrayName = conversation_with_fullname.split(\" \");\n    //         arrayName.forEach(member => {\n    //             if(member.trim().length > 1 && initials.length < 3){\n    //                 initials += member.substring(0,1).toUpperCase();\n    //             }\n    //         });\n    //     }\n    //     return initials;\n    // }\n  \n\n    soundMessage(){\n        console.log('****** soundMessage *****');\n        this.audio = new Audio();\n        this.audio.src = 'assets/pling.mp3';\n        this.audio.load();\n        this.audio.play();\n    }\n      \n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chat-conversations-handler.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Events } from 'ionic-angular';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n// import 'rxjs/add/observable/fromPromise';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n// models\nimport { GroupModel } from '../../models/group';\n// firebase\nimport * as firebase from 'firebase/app';\n// utils\nimport {isExistInArray, getFormatData } from '../../utils/utils';\nimport { TYPE_SUPPORT_GROUP } from '../../utils/constants';\n// services\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\nimport { UserService } from '../../providers/user/user';\n\n\n@Injectable()\nexport class GroupService {\n\n  private BASE_URL_LEAVE_GROUP: string;\n  public groupDetail: GroupModel;\n  observable: any;\n  public arrayMembers;\n\n  constructor(\n    public http: Http,\n    public events: Events,\n    public chatManager: ChatManager,\n    public userService: UserService\n  ) {\n    this.BASE_URL_LEAVE_GROUP = 'https://us-central1-chat-v2-dev.cloudfunctions.net/';\n    this.observable = new BehaviorSubject<boolean>(null);\n    console.log('Hello GroupProvider Provider');\n  }\n\n  initGroupDetails(uidUser, uidGroup) {\n    const tenant = this.chatManager.getTenant();\n    const urlNodeContacts = '/apps/'+tenant+'/users/'+uidUser+'/groups/'+uidGroup;\n    return firebase.database().ref(urlNodeContacts);\n  } \n\n  // loadGroupDetail(uidUser, uidGroup){\n  //   console.log(\"loadGroudDetail: \", uidGroup);\n  //   const userFirebase = this.initGroupDetails(uidUser, uidGroup);\n  //   return userFirebase.once('value');\n  //   // userFirebase.on(\"value\", function(snapshot) {\n  //   //     this.groupDetail = new GroupModel(snapshot.key, 0, '', [], '', '');        \n  //   //     if (snapshot.val()){\n  //   //       const group = snapshot.val();\n  //   //       console.log(\"group:: \", group);\n  //   //       this.groupDetail = new GroupModel(\n  //   //         snapshot.key, \n  //   //         getFormatData(group.createdOn), \n  //   //         group.iconURL,\n  //   //         that.getUidMembers(group.members), \n  //   //         group.name, \n  //   //         group.owner\n  //   //       );    \n  //   //     }\n  //   //     that.events.publish('loadGroupDetail:complete', groupDetail);\n  //   //   });\n  // }\n\n  loadGroupDetail(uidUser, uidGroup){\n    console.log(\"GroupService::loadGroudDetail::uidUser:\", uidUser, \"uidGroup:\", uidGroup);\n\n    var that = this;\n   \n    const reference = this.initGroupDetails(uidUser, uidGroup);\n    // console.log(\"GroupService::loadGroudDetail::reference:\", reference.toString());\n\n    reference.on('value', function (snapshot) {\n      console.log(\"GroupService::loadGroudDetail::snapshot:\", snapshot.val());\n      // setTimeout(function () {\n        that.events.publish(uidGroup + '-details', snapshot);\n      // }, 100);\n     \n    });\n  }\n\n  leaveAGroup(uidGroup, uidUser): Observable<string> {\n    const appId = this.chatManager.getTenant();\n    const token = this.userService.returnToken();\n    const headers = new Headers();\n    headers.append('Accept', 'application/json');\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', 'Bearer '+token);\n\n    const options = new RequestOptions({ headers: headers });\n    const url = this.BASE_URL_LEAVE_GROUP + 'api/' + appId + '/groups/' + uidGroup + '/members/' + uidUser;\n    console.log('url: ', url);\n    const body = {\n      'app_id': appId\n    };\n    console.log('------------------> options: ', options);\n    console.log('------------------> body: ', JSON.stringify(body));\n    return this.http\n    .delete(url, options)\n    .map(res => (res.json()));\n   }\n\n   closeGroup(uidGroup, callback) {\n    const appId = this.chatManager.getTenant();\n    // const token = this.userService.returnToken();\n    var that = this;\n    firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\n    .then(function(token) {\n        console.log('idToken.', token);\n        const headers = new Headers();\n        headers.append('Accept', 'application/json');\n        headers.append('Content-Type', 'application/json');\n        headers.append('Authorization', 'Bearer '+token);\n\n        const options = new RequestOptions({ headers: headers });\n        const url = that.BASE_URL_LEAVE_GROUP +'supportapi/' + appId + '/groups/' + uidGroup;\n        const body = {};\n        console.log('---------------> 1 - url: ', url);\n        console.log('---------------> 2 - options: ', options);\n        console.log('------------------> that.http: ', that.http);\n        that.http\n          .put(url, body, options)\n          .map((res) => {\n            callback(res, null);\n          }).subscribe();\n    }).catch(function(error) {\n      // Handle error\n      console.log('idToken error: ', error);\n      callback(null, error);\n    });\n  }\n\n  \n  getUidMembers(members): string[]{\n    this.arrayMembers = [];\n    const memberStr = JSON.stringify(members);\n    JSON.parse(memberStr, (key, value) => {\n      this.arrayMembers.push(key);\n    });\n    return this.arrayMembers;\n  }\n\n\n  isSupportGroup(uid){\n    if(uid.indexOf(TYPE_SUPPORT_GROUP) === 0 ){\n      return true;\n    }\n    return false;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/group/group.ts","\nimport * as moment from 'moment/moment';\nimport 'moment/locale/it.js';\n\n//import { LABEL_ANNULLA, LABEL_OK, ARRAY_DAYS, LABEL_TODAY, LABEL_TOMORROW, LABEL_LAST_ACCESS, LABEL_TO } from './constants';\n\n//import { TranslateService } from '@ngx-translate/core';\n//import { CustomTranslateService } from './translate-service';\n\n/**\n * Shortest description  for phone and tablet\n * Nota: eseguendo un test su desktop in realtà lo switch avviene a 921px 767px*/\nexport function windowsMatchMedia(){\n  var mq = window.matchMedia(\"(max-width: 767px)\");\n  if (mq.matches) {\n    console.log('window width is less than 767px ')\n    return false;\n  } else {\n    console.log('window width is at least 767px')\n    return true;\n  }\n}\n/**\n * chiamata da ChatConversationsHandler\n * restituisce url '/conversations'\n * @param tenant \n */\nexport function conversationsPathForUserId(tenant, userId){\n  const urlNodeConversations = '/apps/'+tenant+'/users/'+userId+'/conversations';\n  return urlNodeConversations;\n}\n/**\n * chiamata da ChatConversationHandler\n * restituisce url '/messages'\n */\nexport function conversationMessagesRef(tenant, userId){\n  const urlNodeMessages = '/apps/'+tenant+'/users/'+userId+'/messages/';\n  return urlNodeMessages;\n}\n/**\n * chiamata da ChatContactsSynchronizer\n * restituisce url '/contacts'\n */\nexport function contactsRef(tenant){\n  const urlNodeContacts = '/apps/'+tenant+'/contacts/';\n  return urlNodeContacts;\n}\n\n\n/**\n * restituiso indice item nell'array con uid == key \n * @param items \n * @param key \n */\nexport function searchIndexInArrayForUid(items, key){\n  return items.findIndex(i => i.uid === key);   \n}\n/**\n * trasforma url contenuti nel testo passato in tag <a>\n */\nexport function urlify(text?, name?) {\n  if(!text) return name;\n  var regex = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi\n  return text.replace(regex, function (url) {\n    if (url.match(/^[/]/))\n    {\n      return;\n    } \n    // else if (!url.match(/^[a-zA-Z]+:\\/\\//)){\n    //   url = 'http://' + url;\n    // }\n    var label = url;\n    if(name){\n      label = name;\n    }\n    return '<a href=\\\"' + url + '\\\" target=\\\"_blank\\\">' + label + '</a>';\n  })\n}\n\n// export function setUrlString(text, name) {\n//   var urlRegex = /((?:(http|https|Http|Https|rtsp|Rtsp):\\/\\/(?:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,64}(?:\\:(?:[a-zA-Z0-9\\$\\-\\_\\.\\+\\!\\*\\'\\(\\)\\,\\;\\?\\&\\=]|(?:\\%[a-fA-F0-9]{2})){1,25})?\\@)?)?((?:(?:[a-zA-Z0-9][a-zA-Z0-9\\-]{0,64}\\.)+(?:(?:aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(?:biz|b[abdefghijmnorstvwyz])|(?:cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(?:edu|e[cegrstu])|f[ijkmor]|(?:gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(?:info|int|i[delmnoqrst])|(?:jobs|j[emop])|k[eghimnrwyz]|l[abcikrstuvy]|(?:mil|mobi|museum|m[acdghklmnopqrstuvwxyz])|(?:name|net|n[acefgilopruz])|(?:org|om)|(?:pro|p[aefghklmnrstwy])|qa|r[eouw]|s[abcdeghijklmnortuvyz]|(?:tel|travel|t[cdfghjklmnoprtvwz])|u[agkmsyz]|v[aceginu]|w[fs]|y[etu]|z[amw]))|(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[0-9])))(?:\\:\\d{1,5})?)(\\/(?:(?:[a-zA-Z0-9\\;\\/\\?\\:\\@\\&\\=\\#\\~\\-\\.\\+\\!\\*\\'\\(\\)\\,\\_])|(?:\\%[a-fA-F0-9]{2}))*)?(?:\\b|$)/gi;\n//   return text.replace(urlRegex, function (url) {\n//     if (!url.match(/^[a-zA-Z]+:\\/\\//))\n//     {\n//       url = 'http://' + url;\n//     }\n//     return '<a href=\\\"' + url + '\\\" target=\\\"_blank\\\">' + name + '</a>';\n//   })\n// }\n/**\n * rimuove il tag html dal testo\n * ATTUALMENTE NON USATA\n */\nexport function removeHtmlTags(text) {\n  return text.replace(/(<([^>]+)>)/ig,\"\");\n}\n/**\n * calcolo il tempo trascorso tra due date \n * e lo formatto come segue:\n * gg/mm/aaaa; \n * oggi; \n * ieri; \n * giorno della settimana (lunedì, martedì, ecc)\n */\nexport function setHeaderDate(translate, timestamp, lastDate?): string {\n\n\n    var date = new Date(timestamp);\n    let now: Date = new Date();\n\n    var LABEL_TODAY = translate.get('LABEL_TODAY')['value'];\n    var LABEL_TOMORROW = translate.get('LABEL_TOMORROW')['value'];\n\n    var labelDays:string = LABEL_TODAY;\n    var _MS_PER_DAY = 1000 * 60 * 60 * 24;\n    // Esclude l'ora ed il fuso orario\n    var utc1 = Date.UTC(date.getFullYear(), date.getMonth(), date.getDate());\n    var utc2 = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate());\n    const days =  Math.floor((utc2 - utc1) / _MS_PER_DAY);\n    // console.log('setHeaderDate days: ********************',days);\n    if(days > 6){\n      labelDays = date.toLocaleDateString();//date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear();\n    }\n    else if( days == 0 ){\n      labelDays = LABEL_TODAY;\n    } else if( days == 1 ){\n      labelDays = LABEL_TOMORROW;\n    } else {\n      labelDays = convertDayToString(translate, date.getDay());\n    }\n    // console.log('setHeaderDate labelDays: ********************',labelDays);\n    // se le date sono diverse o la data di riferimento non è impostata\n    // ritorna la data calcolata\n    // altrimenti torna null \n    if (lastDate != labelDays || lastDate == null || lastDate == ''){\n      return labelDays;\n    } else {\n      return null;\n    }\n  }\n\n\n  \n  /**\n   * calcolo il tempo trascorso tra la data passata e adesso\n   * utilizzata per calcolare data ultimo accesso utente\n   * @param timestamp \n   */\n  export function setLastDate(translate, timestamp): string {\n\n      var LABEL_TODAY = translate.get('LABEL_TODAY')['value'];\n      var LABEL_TOMORROW = translate.get('LABEL_TOMORROW')['value'];\n      var LABEL_TO = translate.get('LABEL_TO')['value'];\n      var LABEL_LAST_ACCESS = translate.get('LABEL_LAST_ACCESS')['value'];\n\n      var date = new Date(timestamp);\n      let now: Date = new Date();\n      var labelDays:string = \"\";\n      if (now.getFullYear() != date.getFullYear()){\n        labelDays = date.getDay()+\"/\"+date.getMonth()+\"/\"+date.getFullYear();\n      } else if (now.getMonth() != date.getMonth()){\n        labelDays = date.getDay()+\"/\"+date.getMonth()+\"/\"+date.getFullYear();\n      } else if (now.getDay() == date.getDay()){\n        labelDays = LABEL_TODAY;\n      } else if (now.getDay() - date.getDay() == 1){\n        labelDays = LABEL_TOMORROW;\n      } else {\n        labelDays = convertDayToString(translate, date.getDay());\n      }\n      // aggiungo orario\n      const orario = date.getHours() +\":\"+ date.getMinutes();\n      return LABEL_LAST_ACCESS + ' ' + labelDays + ' ' + LABEL_TO + ' ' + orario;\n  }\n\n\nexport function convertDayToString(translate, day){\n  //['Lunedì', 'Martedì', 'Mercoledì','Giovedì', 'Venerdì', 'Sabato', 'Domenica'];\n  var ARRAY_DAYS = translate.get('ARRAY_DAYS')['value'];\n  return ARRAY_DAYS[day];\n}\n\n// function for dynamic sorting\nexport function compareValues(key, order='asc') {\n  return function(a, b) {\n    if(!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0; \n    }\n    const varA = (typeof a[key] === 'string') ? \n      a[key].toUpperCase() : a[key];\n    const varB = (typeof b[key] === 'string') ? \n      b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return (\n      (order == 'desc') ? (comparison * -1) : comparison\n    );\n  };\n}\n\nexport function getNowTimestamp(){\n  //console.log(\"timestamp:\", moment().valueOf());\n  return moment().valueOf();\n}\n\nexport function getFormatData(timestamp): string {\n\n  var dateString = moment.unix(timestamp / 1000).format('L');\n\n  // const date = new Date(timestamp);\n  // const labelDays = date.getDay()+\"/\"+date.getMonth()+\"/\"+date.getFullYear();\n\n  return dateString;\n}\n\n\nexport function getFromNow(timestamp): string {\n    // var fullDate = new Date(this.news.date.$date)\n    // console.log('FULL DATE: ', fullDate);\n    // var month = '' + (fullDate.getMonth() + 1)\n    // var day = '' + fullDate.getDate()\n    // var year = fullDate.getFullYear()\n    // var hour = '' + fullDate.getHours()\n    // var min = fullDate.getMinutes()\n    // var sec = fullDate.getSeconds()\n    // if (month.length < 2) month = '0' + month;\n    // if (day.length < 2) day = '0' + day;\n    // if (hour.length < 2) hour = '0' + hour;\n    // console.log('Giorno ', day)\n    // console.log('Mese ', month)\n    // console.log('Anno ', year)\n    // console.log('Ora ', hour)\n    // console.log('Min ', min)\n    // console.log('Sec', sec)\n    \n    // this.dateFromNow = moment(year + month + day, \"YYYYMMDD\").fromNow()\n    // let date_as_string = moment(year + month + day, \"YYYYMMDD\").fromNow()\n    \n    // let date_as_string = moment(year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + min + \":\" + sec).fromNow()\n    // let date_as_string = moment(\"2017-07-03 08:33:37\").fromNow()\n    //var day = new Date(2017, 8, 16);\n    //let date_as_string = moment(day);\n    \n    // var dateString = moment.unix(timestamp).format(\"MM/DD/YYYY\");\n    // console.log(moment(dateString).fromNow(), dateString);\n    // var date = \"Thu Aug 19 2017 19:58:03 GMT+0000 (GMT)\";\n    // console.log(moment(date).fromNow()); // 1 hour ago\n    // console.log(moment.unix(1483228800).fromNow());\n    // console.log(moment.unix(1501545600).fromNow());\n    //console.log(\"timestamp: \",timestamp, \" - 1483228800 - \", moment.unix(1483228800).fromNow());\n    // console.log();\n    \n    //console.log(\"window.navigator.language: \", window.navigator.language);\n   \n    moment.locale(window.navigator.language);\n    let date_as_string = moment.unix(timestamp).fromNow();\n    return date_as_string;\n}\n\nexport function getSizeImg(message, MAX_WIDTH_IMAGES): any {\n    const metadata = message.metadata;\n    const sizeImage = {\n      width: metadata.width,\n      height: metadata.height\n    }\n    if(metadata.width && metadata.width>MAX_WIDTH_IMAGES){\n      const rapporto = (metadata['width'] / metadata['height']);\n      sizeImage.width = MAX_WIDTH_IMAGES;\n      sizeImage.height = MAX_WIDTH_IMAGES / rapporto;\n    }\n    return sizeImage;\n}\n\nexport function popupUrl(html,title) {\n    const url = this.strip_tags(html);\n    const w = 600;\n    const h = screen.height - 40;\n    const left = (screen.width/2)-(w/2);\n    const top = (screen.height/2)-(h/2);\n\n    const newWindow = window.open(url,'_blank', 'fullscreen=1, titlebar=0, toolbar=no, location=0, status=0, menubar=0, scrollbars=0, resizable=0, width='+w+', height='+h+', top='+top+', left='+left);\n    if (window.focus) {\n      newWindow.focus()\n    }\n}\n\nexport function isPopupUrl(url){\n    let TEMP = url.split('popup=')[1];\n    // può essere seguito da & oppure \"\n    if (TEMP) { \n      if(TEMP.startsWith('true')) {\n        //console.log('isPopupUrl::::: ', TEMP.startsWith('true'));\n        return true;\n      }\n      else {\n        return false;\n      } \n    }\n    else {\n      return false;\n    }\n}\n\nexport function strip_tags(html){\n    return (html.replace( /<.*?>/g, '' )).trim();\n}\n\nexport function isExistInArray(members, currentUid){\n  console.log(\"isExistInArray -- ::: \", members, currentUid);\n  // let resp = false;\n  // members.forEach(function(element) {\n  //   console.log(\"element::: \", element['uid'], element);\n  //   if (element['uid'] === currentUid) {\n  //     resp = true;\n  //     return;\n  //   }\n  // });   \n  // return resp;\n  return members.includes(currentUid);\n}\n\nexport function createConfirm(translate, alertCtrl, events, title, message, action, onlyOkButton) {\n\n  var LABEL_ANNULLA = translate.get('CLOSE_ALERT_CANCEL_LABEL')['value'];\n  var LABEL_OK = translate.get('CLOSE_ALERT_CONFIRM_LABEL')['value'];\n\n  var buttons;\n  if (onlyOkButton) {\n    buttons = [\n      {\n        text: LABEL_OK,\n        handler: () => {\n          events.publish('PopupConfirmation', LABEL_OK, action);\n          console.log('Agree clicked');\n        }\n      }\n    ]\n  } else {\n    buttons = [\n      {\n        text: LABEL_ANNULLA,\n        handler: () => {\n          events.publish('PopupConfirmation', LABEL_ANNULLA, action);\n          console.log('Disagree clicked');\n        }\n      },\n      {\n        text: LABEL_OK,\n        handler: () => {\n          events.publish('PopupConfirmation', LABEL_OK, action);\n          console.log('Agree clicked');\n        }\n      }\n    ]\n  }\n\n  let confirm = alertCtrl.create({\n    title: title,\n    message: message,\n    buttons,\n  });\n  // confirm.present();\n  return confirm;\n}\n\nexport function createLoading(loadinController, message) {\n  let loading = loadinController.create({\n    spinner: 'circles',\n    content: message,\n  });\n  // this.loading.present();\n  return loading;\n}\n\n\nexport function convertMessageAndUrlify(messageText){\n  messageText = convert(messageText);\n  messageText = urlify(messageText);\n  return messageText;\n}\n\nexport function convertMessage(messageText) {\n  messageText = convert(messageText);\n  return messageText;\n}\n\nfunction convert(str) {\n  //str = str.replace(/&/g, '&amp;');\n  str = str.replace(/>/g, '&gt;');\n  str = str.replace(/</g, '&lt;');\n  str = str.replace(/\"/g, '&quot;');\n  str = str.replace(/'/g, '&#039;');\n  return str;\n}\n\nexport function getColorBck(str){\n  var arrayBckColor = ['#fba76f', '#80d066', '#73cdd0', '#ecd074', '#6fb1e4', '#f98bae'];\n  var num = 0;\n  if(str){\n      var code = str.charCodeAt((str.length-1));\n      num = Math.round(code%arrayBckColor.length);\n      console.log('************** code',str.length, code, arrayBckColor.length, num);\n  }\n  return arrayBckColor[num];\n}\n\nexport function avatarPlaceholder(conversation_with_fullname) {\n  var initials = '';\n  if(conversation_with_fullname){\n      var arrayName = conversation_with_fullname.split(\" \");\n      arrayName.forEach(member => {\n          if(member.trim().length > 1 && initials.length < 3){\n              initials += member.substring(0,1).toUpperCase();\n          }\n      });\n  }\n  return initials;\n}\n\n\nexport function urlExists(url) {\n  console.log(\"imageExists::::::\"+url);\n  url = \"https://firebasestorage.googleapis.com/v0/b/chat-v2-dev.appspot.com/o/profiles%2F5ad5bd40c975820014ba9009%2Fthumb_photo.jpg?alt=media\";\n  return false;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Events } from 'ionic-angular';\nimport { ConversationModel } from '../../models/conversation';\nimport { convertMessage } from '../../utils/utils';\nimport { DettaglioConversazionePage } from '../dettaglio-conversazione/dettaglio-conversazione';\nimport { NavProxyService } from '../../providers/nav-proxy';\nimport { DatabaseProvider } from '../../providers/database/database';\n\n@IonicPage()\n@Component({\n  selector: 'page-archived-conversations',\n  templateUrl: 'archived-conversations.html',\n})\nexport class ArchivedConversationsPage {\n\n  // the list of th archived conversations\n  private archivedConversations : ConversationModel[];\n\n  // used within the html template\n  convertMessage = convertMessage;\n\n  private areArchivedConversationsAvailable : boolean;\n\n  private uidConvSelected : string;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    private navProxy: NavProxyService,\n    private databaseProvider: DatabaseProvider,\n    private events: Events,\n  ) {\n    this.areArchivedConversationsAvailable = false; // default value\n  }\n\n  ionViewDidLoad() {\n   \n    // get the list of archived conversations from the navigation and preload the archived conversations list\n    this.archivedConversations = this.navParams.get('archivedConversations');\n    // console.log(\"ArchivedConversationsPage::ionViewDidLoad::archivedConversations:\", archivedConversations);\n\n    // update the archvied conversations availability\n    this.areArchivedConversationsAvailable = this.archivedConversations && this.archivedConversations.length > 0;\n    // console.log(\"ArchivedConversationsPage::ionViewDidLoad::areArchivedConversationsAvailable:\", this.areArchivedConversationsAvailable);\n  }\n\n  ionViewWillUnload() {\n    this.archivedConversations = []; // clear the archived conversations list\n  }\n\n  // click on a single conversation\n  private onArchivedConversationClicked(archivedConversation) {\n    console.log(\"ArchivedConversationsPage::onArchivedConversationClicked::archivedConversation:\", archivedConversation);\n\n    var that = this;\n\n    // set the current conversation selected within the ui\n    this.uidConvSelected = archivedConversation.uid;\n\n    // // popping the current page\n    // this.navCtrl.pop().then(() => {\n\n      // open the new page\n      that.openMessageList(archivedConversation);\n\n    // }, (err) => {\n    //   // something didn't work\n    //   console.error(err);\n    // });\n  }\n  \n\n  /**\n   * SE E' DIVERSO DA this.uidConvSelected\n   * 1 - cerco conv con id == this.uidConvSelected e imposto select a FALSE\n   * 2 - cerco conv con id == nw uidConvSelected se esiste:  \n   * 2.1 - imposto status a 0 come letto\n   * 2.2 - seleziono conv selected == TRUE\n   * 2.3 - imposto nw uidConvSelected come this.uidConvSelected\n   * 2.4 - apro conv\n   * 3 salvo id conv nello storage\n   * @param uidConvSelected  \n   */\n  openMessageList(archivedConversation) {\n    const that = this;\n    // setTimeout(function () {\n      if (archivedConversation) {\n\n        archivedConversation.is_new = false;\n\n        archivedConversation.status = '0';\n        archivedConversation.selected = true;\n        that.navProxy.pushDetail(DettaglioConversazionePage, {\n          conversationWith: archivedConversation.uid,\n          conversationWithFullname: archivedConversation.conversation_with_fullname,\n          channel_type: archivedConversation.channel_type\n        });\n        that.databaseProvider.setUidLastOpenConversation(archivedConversation.uid);\n        that.events.publish('uidConvSelected:changed', archivedConversation.uid);\n      }\n    // }, 1000);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/archived-conversations/archived-conversations.ts","import { Component } from '@angular/core';\nimport { ModalController, ViewController, IonicPage, NavParams } from 'ionic-angular';\nimport { UpdateImageProfilePage } from '../update-image-profile/update-image-profile';\n\n@IonicPage()\n@Component({\n  selector: 'page-popover-profile',\n  templateUrl: 'popover-profile.html',\n})\nexport class PopoverProfilePage {\n\n  private uidContact:string;\n\n  constructor(\n    public viewCtrl: ViewController,  \n    public modalCtrl: ModalController,\n    public navParams: NavParams\n  ) {\n    this.uidContact = navParams.get('uidContact');\n    // controllo piattaforma per il caricamento img da mobile o browser\n  }\n  /**\n   * \n   * @param event \n   */\n  detectFiles(event) {\n    console.log('event: ',event);\n    let profileModal = this.modalCtrl.create(UpdateImageProfilePage, {event: event}, { enableBackdropDismiss: false });\n    profileModal.present();\n    this.viewCtrl.dismiss();\n  }\n  /**\n   * \n   */\n  goToProfilePage(){\n    let profileModal = this.modalCtrl.create(UpdateImageProfilePage, {uidContact: this.uidContact}, { enableBackdropDismiss: true });\n    profileModal.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/popover-profile/popover-profile.ts","import { Component, NgZone } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport * as firebase from 'firebase';\n\nimport { UploadModel } from '../../models/upload';\nimport { UploadService } from '../../providers/upload-service/upload-service';\n\nimport { contactsRef } from '../../utils/utils';\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\n\n@IonicPage()\n@Component({\n  selector: 'page-update-image-profile',\n  templateUrl: 'update-image-profile.html',\n})\nexport class UpdateImageProfilePage {\n\n  private event: any;\n  private uidContact: string;\n  private currentUpload: UploadModel;\n  private image: any;\n  //private imageurl: string;\n  private selectedFiles: FileList;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    private upSvc: UploadService,\n    public zone: NgZone,\n    public chatManager: ChatManager,\n    //private events: Events\n  ) {\n    // recupero event\n    this.event = navParams.get('event');\n    this.uidContact = navParams.get('uidContact');\n   \n    // imposto immagine per anteprima\n    if(this.event){\n      this.selectedFiles = this.event.target.files;\n      this.fileChange(event);\n    }\n    else{\n      this.displayImage(this.uidContact);\n    }\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad UpdateImageProfilePage');\n  }\n  \n  displayImage(uidContact){\n    this.upSvc.display(uidContact, '')\n    .then((url) => {\n      this.zone.run(() => {\n        this.image = url;\n      });\n    })\n    .catch((error)=>{\n      console.log(\"error::: \",error);\n    });\n  }\n\n  fileChange(event){\n    if(event.target.files && event.target.files[0]){\n      let reader = new FileReader();\n      reader.onload = (event:any) => {\n        this.image = event.target.result;\n      }\n      reader.readAsDataURL(event.target.files[0]);\n    }\n    //let fileList: FileList = event.target.files;  \n    //let file: File = fileList[0];\n  }\n\n  uploadSingle() {\n    const tenant = this.chatManager.getTenant();\n    const uidContact = this.chatManager.getLoggedUser().uid;\n    var send_order_btn = <HTMLInputElement>document.getElementById(\"start-upload\");\n    send_order_btn.disabled = true;\n    let file = this.selectedFiles.item(0)\n    this.currentUpload = new UploadModel(file);\n    const uploadTask = this.upSvc.pushUploadImage(this.currentUpload)\n    uploadTask.on('state_changed', function(snapshot){\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      console.log('Upload is ' + progress + '% done');\n      switch (snapshot.state) {\n        case firebase.storage.TaskState.PAUSED: // or 'paused'\n          console.log('Upload is paused');\n          break;\n        case firebase.storage.TaskState.RUNNING: // or 'running'\n          console.log('Upload is running');\n          break;\n      }\n    }, function(error) {\n      // Handle unsuccessful uploads\n    }, function() {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      var downloadURL = uploadTask.snapshot.downloadURL;\n      const urlNodeConcacts = contactsRef(tenant) + uidContact + '/imageurl/';\n      console.log('Uploaded a blob or file! ', urlNodeConcacts);\n      firebase.database().ref(urlNodeConcacts).set(downloadURL);\n    });\n    // .then(function(snapshot) {\n    //   const urlNodeConcacts = contactsRef(tenant) + uidContact + '/imageurl/';\n    //   console.log('Uploaded a blob or file! ', urlNodeConcacts);\n    //   firebase.database().ref(urlNodeConcacts).set(snapshot.downloadURL);\n    // })\n    // .catch(function(error) {\n    //   // Handle Errors here.\n    //   const errorCode = error.code;\n    //   const errorMessage = error.message;\n    //   console.log('error: ', errorCode, errorMessage);\n    // });\n\n    //this.upSvc.pushUpload(this.currentUpload)\n  }\n\n  goBack(){\n    this.navCtrl.pop({animate: true, duration: 0.3});    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/update-image-profile/update-image-profile.ts","import { Component, NgZone } from '@angular/core';\nimport { Events, PopoverController, IonicPage, NavController, NavParams, ModalController, Modal, AlertController } from 'ionic-angular';\n// models\nimport { ConversationModel } from '../../models/conversation';\n// pages\nimport { LoginPage } from '../authentication/login/login';\nimport { PlaceholderPage } from '../placeholder/placeholder';\nimport { DettaglioConversazionePage } from '../dettaglio-conversazione/dettaglio-conversazione';\nimport { UsersPage } from '../users/users';\nimport { _MasterPage } from '../_MasterPage';\nimport { PopoverPage } from '../popover/popover';\nimport { ProfilePage } from '../profile/profile';\n// utils\nimport { convertMessage, windowsMatchMedia } from '../../utils/utils';\nimport { CURR_VER_PROD, CURR_VER_DEV, TYPE_POPUP_LIST_CONVERSATIONS } from '../../utils/constants';\n// services\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\nimport { NavProxyService } from '../../providers/nav-proxy';\nimport { UserService } from '../../providers/user/user';\nimport { ChatConversationsHandler } from '../../providers/chat-conversations-handler';\nimport { ChatConversationHandler } from '../../providers/chat-conversation-handler';\nimport { DatabaseProvider } from '../../providers/database/database';\nimport { GroupService } from '../../providers/group/group';\n\nimport { TiledeskConversationProvider } from '../../providers/tiledesk-conversation/tiledesk-conversation';\n\nimport { TranslateService } from '@ngx-translate/core';\nimport { ArchivedConversationsPage } from '../archived-conversations/archived-conversations';\nimport { ChatArchivedConversationsHandler } from '../../providers/chat-archived-conversations-handler';\n\n@IonicPage()\n@Component({\n  selector: 'page-conversation-list',\n  templateUrl: 'conversation-list.html',\n})\nexport class ListaConversazioniPage extends _MasterPage {\n  private conversations: Array<ConversationModel> = [];\n  private archivedConversations: ConversationModel[];\n\n  private uidReciverFromUrl: string;\n  private conversationsHandler: ChatConversationsHandler;\n  private uidConvSelected: string;\n  private profileModal: Modal;\n  private BUILD_VERSION: string;\n\n  convertMessage = convertMessage;\n\n  constructor(\n    public popoverCtrl: PopoverController,\n    public modalCtrl: ModalController,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public navProxy: NavProxyService,\n    public userService: UserService,\n    public chatConversationsHandler: ChatConversationsHandler,\n    public conversationHandler: ChatConversationHandler,\n    public events: Events,\n    public chatManager: ChatManager,\n    public databaseProvider: DatabaseProvider,\n    private groupService: GroupService,\n    private tiledeskConversationProvider: TiledeskConversationProvider,\n    private alertCtrl: AlertController,\n    private translate: TranslateService,\n    private chatArchivedConversationsHandler: ChatArchivedConversationsHandler\n  ) {\n    super();\n    this.BUILD_VERSION = 'v.' + CURR_VER_PROD + ' b.' + CURR_VER_DEV; // 'b.0.5';\n\n    /** RECUPERO ID CONVERSAZIONE\n    * se vengo da dettaglio conversazione\n    * o da users con conversazione attiva recupero conversationWith\n    * //this.conversationWith = navParams.get('conversationWith');\n    */\n    this.uidConvSelected = navParams.get('conversationWith');\n\n    /** RECUPERO IL RECIPIENTID \n    * nel caso in cui viene pasato nell'url della pagina\n    * per aprire una conversazione\n    * \n    * USARE getParameterByName(name) del widget\n    */\n    let TEMP = location.search.split('recipient=')[1];\n    if (TEMP) { this.uidReciverFromUrl = TEMP.split('&')[0]; }\n\n\n    /** SUBSCRIBE USER LOGGED\n     * sul LOGIN:\n     * 1 - dismetto modale login se è visibile\n     * 2 - carico elenco conversazioni\n     * sul LOGOUT\n     * 1 - aggiungo placeholder alla pg delle conversazioni\n     * 2 - resetto array conversazioni \n     * 3 - visualizzo la pg di login\n     * 4 - resetto conversationWith\n    */\n    this.profileModal = this.modalCtrl.create(LoginPage, null, { enableBackdropDismiss: false });\n    this.initSubscriptions();\n  }\n\n  //// SUBSCRIBTIONS ////\n  /** */\n  initSubscriptions() {\n    this.events.subscribe('loggedUser:login', this.subscribeLoggedUserLogin);\n    this.events.subscribe('loggedUser:logout', this.subscribeLoggedUserLogout);\n    this.events.subscribe('uidConvSelected:changed', this.subscribeUidConvSelectedChanged);\n    // this.events.subscribe('conversations:changed', this.subscribeConversationsChanged);\n  }\n\n  /** subscribeUidConvSelectedChanged\n   * quando si clicca su una conversazione (si seleziona) \n   * apro elenco conversazione maessaggi \n  */\n  subscribeUidConvSelectedChanged: any = uidConvSelected => {\n    console.log('************** subscribeUidConvSelectedChanged', uidConvSelected);\n    this.checkMessageListIsOpen(uidConvSelected);\n  }\n\n  /** subscribeLoggedUserLogin\n   * effettuato il login: \n   * 1 - dismetto modale\n   * 2 - carico lista conversazioni\n   * 3 - se non ci sono conversazioni carico placeholder\n  */\n  subscribeLoggedUserLogin: any = (user) => {\n    console.log('************** subscribeLoggedUserLogin', user);\n    this.profileModal.dismiss({ animate: false, duration: 0 });\n    this.loadListConversations();\n  }\n\n  /** subscribeLoggedUserLogout\n   * effettuato il logout:\n   * 1 - mostro placeholder\n   * 2 - resetto array conversazioni\n   * 3 - mostro modale login\n   * 4 - resetto conversationWith\n  */\n  subscribeLoggedUserLogout: any = (user) => {\n    console.log('************** subscribeLoggedUserLogout', user);\n    this.conversations = [];\n    this.profileModal.present();\n    //this.conversationWith = null;\n    this.uidConvSelected = null;\n  }\n\n  // private subscribeConversationsChanged: any = (conversations : ConversationModel[]) => {\n  //   console.log('ListaConversazioniPage::subscribeConversationsChanged::conversationsconversations:', conversations);\n  //   this.conversations = conversations;\n  // }\n\n  //// END SUBSCRIBTIONS LIST ////\n\n\n\n  /**\n  * START GESTIONE CONVERSAZIONI\n  * se esiste recupero uidReciverFromUrl passato nell'url\n  * init ConversationsHandler e carico elenco conversazioni\n  * altrimenti recupero id ultima conversazione aperta salvato nello storage\n  * init ConversationsHandler e carico elenco conversazioni\n  */\n  loadListConversations() {\n    //debugger;\n    if (this.uidReciverFromUrl) {\n      this.uidConvSelected = this.uidReciverFromUrl;\n      this.uidReciverFromUrl = null;\n      this.initConversationsHandler();\n    } else {\n      const that = this;\n      this.databaseProvider.getUidLastOpenConversation()\n        .then(function (uid) {\n          console.log('getUidLastOpenConversation:: ' + uid + 'that.uidReciverFromUrl:: ' + that.uidReciverFromUrl);\n          that.uidConvSelected = uid;\n          that.initConversationsHandler();\n        })\n        .catch((error) => {\n          console.log(\"error::: \", error);\n        });\n    }\n  }\n\n  /**\n   * SE E' DIVERSO DA this.uidConvSelected\n   * 1 - cerco conv con id == this.uidConvSelected e imposto select a FALSE\n   * 2 - cerco conv con id == nw uidConvSelected se esiste:  \n   * 2.1 - imposto status a 0 come letto\n   * 2.2 - seleziono conv selected == TRUE\n   * 2.3 - imposto nw uidConvSelected come this.uidConvSelected\n   * 2.4 - apro conv\n   * 3 salvo id conv nello storage\n   * @param uidConvSelected  \n   */\n  openMessageList(uidConvSelected) {\n\n    // if the conversation from the isConversationClosingMap is waiting to be closed \n    // deny the click on the conversation\n    if (this.tiledeskConversationProvider.getClosingConversation(uidConvSelected)) return;\n\n    //debugger;\n    console.log('ListaConversazioniPage::openMessageList::uidConvSelected:', uidConvSelected);\n    this.uidConvSelected = uidConvSelected;\n    const that = this;\n    setTimeout(function () {\n      var conversationSelected = that.conversations.find(item => item.uid === uidConvSelected);\n      if (conversationSelected) {\n        conversationSelected.is_new = false;\n        that.conversationsHandler.setConversationRead(conversationSelected.uid);\n        conversationSelected.status = '0';\n        conversationSelected.selected = true;\n        that.navProxy.pushDetail(DettaglioConversazionePage, {\n          conversationWith: uidConvSelected,\n          conversationWithFullname: conversationSelected.conversation_with_fullname,\n          channel_type: conversationSelected.channel_type\n        });\n        that.databaseProvider.setUidLastOpenConversation(uidConvSelected);\n      }\n      //that.conversationWith = uidConvSelected;\n    }, 0);\n  }\n\n  /**\n   * \n   * @param uidConvSelected \n   */\n  checkMessageListIsOpen(uidConvSelected) {\n    console.log('-------------> checkMessageListIsOpen ', uidConvSelected);\n    if (uidConvSelected === this.uidConvSelected && windowsMatchMedia()) {\n      console.log(\"ListaConversazioniPage::checkMessageListIsOpen::if::uidConvSelected\", uidConvSelected, \"this_uidConvSelected\", this.uidConvSelected);\n      return;\n    } else {\n      console.log(\"ListaConversazioniPage::checkMessageListIsOpen::else::uidConvSelected\", uidConvSelected);\n      this.openMessageList(uidConvSelected)\n    }\n  }\n\n\n\n  /**\n   * se non esiste un handler delle conversazioni ne creo uno nuovo\n   * lo salvo in chatmanager\n   * e mi sottoscrivo al nodo (connect)\n   * inizializzo la pagina\n   */\n  initConversationsHandler() {\n\n    console.log('-------------> initConversationsHandler');\n    const tenant = this.chatManager.getTenant();\n    const loggedUser = this.chatManager.getLoggedUser();\n    let handler = this.chatManager.conversationsHandler;\n    let tempArchviedConversationsHandler = this.chatManager.archivedConversationsHandler;;\n    if (!handler) {\n      console.log('handler NON ESISTE ::');\n      handler = this.chatConversationsHandler.initWithTenant(tenant, loggedUser);\n      tempArchviedConversationsHandler = this.chatArchivedConversationsHandler.initWithTenant(tenant, loggedUser);\n      this.chatManager.setConversationsHandler(handler);\n      handler.connect();\n      tempArchviedConversationsHandler.connect();\n      handler.uidConvSelected = this.uidConvSelected\n      this.conversationsHandler = handler;\n      this.chatArchivedConversationsHandler = tempArchviedConversationsHandler;\n      console.log('handler.conversations ::'+handler.conversations);\n      this.conversations = handler.conversations;\n      this.archivedConversations = tempArchviedConversationsHandler.conversations;\n\n      // // attach the archived conversations provider\n      // this.archivedConversationsProvider.getInstance().init(tenant, loggedUser);\n      // this.archivedConversationsProvider.getInstance().connect();\n      // this.archivedConversations = this.archivedConversationsProvider.getArchviedConversations();\n    } else {\n      console.log('handler ESISTE ::', handler);\n      this.conversationsHandler = handler;\n      this.chatArchivedConversationsHandler = tempArchviedConversationsHandler;\n    }\n\n\n    //console.log('plt::', windowsMatchMedia());\n    if (this.uidConvSelected) {\n      // se visualizzazione è desktop\n      if (windowsMatchMedia()) {\n        this.openMessageList(this.uidConvSelected);\n      }\n    } else if (this.conversations.length > 0) {\n      this.uidConvSelected = this.conversations[0].uid;\n      // se visualizzazione è desktop\n      if (windowsMatchMedia()) {\n        this.openMessageList(this.uidConvSelected);\n      }\n    }\n    else {\n      // se visualizzazione è desktop\n      if (windowsMatchMedia()) {\n        this.navProxy.pushDetail(PlaceholderPage, {});\n      }\n    }\n    //this.navProxy.isOn = true;\n    //\n\n\n    // if(this.conversations.length <= 0){\n    //   this.navProxy.pushDetail(PlaceholderPage,{});\n    // }\n\n  }\n\n  /**\n  * apro pagina elenco users \n  * metodo richiamato da html \n  */\n  openUsersList(event) {\n    //this.navCtrl.setRoot(UsersPage);\n    this.navCtrl.push(UsersPage, {\n      contacts: \"\"\n    });\n  }\n\n  /**\n   * Open the archived conversations page\n   */\n  private openArchivedConversationsPage() {\n    // console.log(\"ListaConversazioniPage::openArchivedConversationsPage::archivedConversations:\", this.archivedConversations)\n    this.navCtrl.push(ArchivedConversationsPage,\n      {\n        \"archivedConversations\" :  this.archivedConversations\n      }\n    );\n  }\n\n  /**\n  * apro il menu delle opzioni \n  * (metodo richiamato da html) \n  * alla chiusura controllo su quale opzione ho premuto e attivo l'azione corrispondete\n  */\n  presentPopover(event) {\n    let popover = this.popoverCtrl.create(PopoverPage, { typePopup: TYPE_POPUP_LIST_CONVERSATIONS });\n    popover.present({\n      ev: event\n    });\n    popover.onDidDismiss((data: string) => {\n      console.log(\" ********* data::: \", data);\n      if (data == 'logOut') {\n        this.logOut();\n      } else if (data == 'ProfilePage') {\n        if (this.chatManager.getLoggedUser()) {\n          this.navCtrl.push(ProfilePage);\n        }\n      } else if (data == \"ArchivedConversationsPage\") {\n        this.openArchivedConversationsPage();\n      }\n    });\n  }\n\n  /**\n   * modulo richiamato se premo su logout\n   * 1 - aggiungo placeholderPage \n   * 2 - richiamo il logout di firebase\n   */\n  logOut() {\n    //this.navProxy.pushDetail(PlaceholderPage,{});\n    this.userService.logoutUser();\n  }\n\n\n  loadingIsActive() {\n    // if(this.conversations && this.conversations.length>0){\n    //   return true;\n    // } else {\n    //   return false;\n    // }\n\n    var conv = JSON.stringify(this.conversations);\n    // console.log(\"ListaConversazioniPage::loadingIsActive::conversations\", conv);\n\n    return conv && conv.length > 0;\n  }\n\n  private closeConversation(conversation) {\n    console.log(\"ListaConversazioniPage::closeConversation::conversation\", conversation);\n\n    var conversationId = conversation.uid;\n    // console.log(\"ListaConversazioniPage::closeConversation::conversationId\", conversationId);\n\n    var isSupportConversation = conversationId.startsWith(\"support-group\");\n    // console.log(\"ListaConversazioniPage::closeConversation::isSupportConversation\", isSupportConversation);\n\n    if (!isSupportConversation) {\n      console.log(\"ListaConversazioniPage::closeConversation:: is not a support group\");\n\n      this.deleteConversation(conversationId, function (result, data) {\n        if (result === 'success') {\n          console.log(\"ListaConversazioniPage::closeConversation::deleteConversation::response\", data);\n          // console.log(\"ListaConversazioniPage::closeConversation::deleteConversation::response::conversation::\", conversation);\n        } else if (result === 'error') {\n          console.error(\"ListaConversazioniPage::closeConversation::deleteConversation::error\", data);\n          // console.error(\"ListaConversazioniPage::closeConversation::deleteConversation::error::conversation::\", conversation);\n        }\n      });\n\n      // https://github.com/chat21/chat21-cloud-functions/blob/master/docs/api.md#delete-a-conversation\n    } else {\n      console.log(\"ListaConversazioniPage::closeConversation::closeConversation:: is a support group\");\n\n      // the conversationId is:\n      // - the recipientId if it is a direct conversation;\n      // - the groupId if it is a group conversation;\n      // the groupId can reference:\n      // - a normal group;\n      // - a support  group if it starts with \"support-group\"\n      this.closeSupportGroup(conversationId, function (result, data) {\n        if (result === 'success') {\n          console.log(\"ListaConversazioniPage::closeConversation::closeSupportGroup::response\", data);\n          // console.log(\"ListaConversazioniPage::closeConversation::closeSupportGroup::response::conversation::\", conversation);\n\n        } else if (result === 'error') {\n          console.error(\"ListaConversazioniPage::closeConversation::closeSupportGroup::error\", data);\n          // console.error(\"ListaConversazioniPage::closeConversation::closeSupportGroup::error::conversation::\", conversation);\n        }\n      });\n    }\n  }\n\n  // close the support group\n  // more details availables at \n  // https://github.com/chat21/chat21-cloud-functions/blob/master/docs/api.md#close-support-group\n  private closeSupportGroup(groupId, callback) {\n\n    var that = this;\n\n    // BEGIN -  REMOVE FROM LOCAL MEMORY \n    // console.log(\"performClosingConversation::conversations::BEFORE\", JSON.stringify(this.conversationsHandler.conversations) )\n    this.conversationsHandler.removeByUid(groupId); // remove the item \n    this.conversations = this.conversationsHandler.conversations; // update conversations\n    // console.log(\"performClosingConversation::conversations::AFTER\", JSON.stringify(this.conversationsHandler.conversations))\n    // END -  REMOVE FROM LOCAL MEMORY \n\n    // BEGIN - REMOVE FROM REMOTE \n    //set the conversation from the isConversationClosingMap that is waiting to be closed\n    this.tiledeskConversationProvider.setClosingConversation(groupId, true);\n\n    this.groupService.closeGroup(groupId, function(response, error) {\n      if (error) {\n        // the conversation closing failed: restore the conversation with \n        // conversationId status to false within the isConversationClosingMap\n        that.tiledeskConversationProvider.setClosingConversation(groupId, false);\n        callback('error', error);\n      }\n      else {\n        callback('success', response);\n      }\n    });\n      // .subscribe(response => {\n      //   callback('success', response);\n      // }, errMsg => {\n      //   // the conversation closing failed: restore the conversation with\n      //   // conversationId status to false within the isConversationClosingMap\n      //   that.tiledeskConversationProvider.setClosingConversation(groupId, false);\n      //   callback('error', errMsg);\n      // }, () => {\n      //   console.log(\"ListaConversazioniPage::closeSupportGroup::completition\");\n      // });\n    // END - REMOVE FROM REMOTE \n\n    // when a conversations is closed shows a placeholder background\n    if (groupId === that.uidConvSelected) {\n      that.navProxy.pushDetail(PlaceholderPage, {});\n    }\n  }\n\n  // delete a conversation form the personal timeline\n  // more details availables at \n  // https://github.com/chat21/chat21-cloud-functions/blob/master/docs/api.md#delete-a-conversation\n  private deleteConversation(conversationId, callback) {\n    // console.log(\"ListaConversazioniPage::deleteConversation::conversationId\", conversationId);\n\n    var that = this;\n\n    // END - REMOVE FROM LOCAL MEMORY \n    // console.log(\"deleteConversation::conversations::BEFORE\", JSON.stringify(this.conversationsHandler.conversations))\n    this.conversationsHandler.removeByUid(conversationId); // remove the item \n    this.conversations = this.conversationsHandler.conversations; // update conversations\n    // console.log(\"deleteConversation::conversations::AFTER\", JSON.stringify(this.conversationsHandler.conversations))\n    // END - REMOVE FROM LOCAL MEMORY \n\n    // BEGIN - REMOVE FROM REMOTE \n    //set the conversation from the isConversationClosingMap that is waiting to be closed\n    this.tiledeskConversationProvider.setClosingConversation(conversationId, true);\n\n    this.tiledeskConversationProvider.deleteConversation(conversationId, function(response, error) {\n      if (error) {\n        that.tiledeskConversationProvider.setClosingConversation(conversationId, false);\n        callback('error', error);\n      }\n      else {\n        callback('success', response);\n      }\n    });\n    //   .subscribe(response => {\n    //     callback('success', response);\n    //   }, errMsg => {\n    //     // the conversation closing failed: restore the conversation with\n    //     // conversationId status to false within the isConversationClosingMap\n    //     that.tiledeskConversationProvider.setClosingConversation(conversationId, false);\n    //     callback('error', errMsg);\n    //   }, () => {\n    //     console.log(\"ListaConversazioniPage::deleteConversation::completition\");\n    //   });\n    // // END - REMOVE FROM REMOTE \n\n    // when a conversations is closed shows a placeholder background\n    if (conversationId === that.uidConvSelected) {\n      that.navProxy.pushDetail(PlaceholderPage, {});\n    }\n  }\n\n  // avatarPlaceholder(conversation_with_fullname) {\n  //   var arrayName = conversation_with_fullname.split(\" \");\n  //   var initials = '';\n  //   arrayName.forEach(member => {\n  //     if(member.trim().length > 1 && initials.length < 3){\n  //       initials += member.substring(0,1).toUpperCase();\n  //     }\n  //   });\n  //   return initials;\n  // }\n\n  // getColorBck(){\n  //   var arrayBckColor = ['#fba76f', '#80d066', '#73cdd0', '#ecd074', '#6fb1e4', '#f98bae'];\n  //   var num = Math.floor(Math.random() * 6);\n  //   return arrayBckColor[num];\n  // }\n\n\n  \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversation-list/conversation-list.ts","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ViewController, Events, IonicPage, NavController } from 'ionic-angular';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/map';\n// pages\nimport { DettaglioConversazionePage } from '../dettaglio-conversazione/dettaglio-conversazione';\n//import { ListaConversazioniPage } from '../conversation-list/conversation-list';\n// services\nimport { DatabaseProvider } from './../../providers/database/database';\nimport { NavProxyService } from '../../providers/nav-proxy';\n// utils\nimport { compareValues } from '../../utils/utils';\n//import { PARENT_PAGE_DETAIL_CONVERSATION } from '../../utils/constants';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-users',\n  templateUrl: 'users.html',\n})\nexport class UsersPage {\n  // private tenant: string;\n  // private conversationWith: string;\n  // private users;//: AngularFireList<any>;\n  private contacts: any; //Array<UserModel> = [];\n  private contactsOfSearch: any; //Array<UserModel>;\n  //private db: AngularFireDatabase;\n\n  private searchTerm: string = '';\n  private searchControl: FormControl;\n  private searching: any = false;\n  // private currentUser: firebase.User;\n  // private myUser: UserModel;\n  // private parentPage: string;\n\n  constructor(\n    public navCtrl: NavController,\n    public viewCtrl: ViewController,\n    //public navParams: NavParams,\n    //public afAuth: AngularFireAuth,\n    //db: AngularFireDatabase,\n    //config: Config,\n    public events: Events,\n    public navProxy: NavProxyService,\n    public databaseprovider: DatabaseProvider\n    //private platform: Platform\n  ) \n  {}\n  /**\n   * \n   */\n  ngOnInit() {\n    this.initialize();\n  }\n  /**\n   * quando la pagina è visualizzata\n   */\n  // ionViewDidLoad() {\n  //   console.log('ionViewDidLoad Users', this.contacts, this.searchControl);\n  //   //https://www.joshmorony.com/high-performance-list-filtering-in-ionic-2/\n  //   //this.setFilteredItems();\n  // }\n  /**\n   * inizializzo search control\n   * controllo se esiste array contatti\n   * recupero dallo storage locale elenco contatti\n   * ordino elenco per fullname\n   * mi sincronizzo al campo input con un ritardo di 2 sec\n   * se cambia il contenuto del campo input, fitro e ordino array \n   */\n  initialize(){\n    var that = this;\n    this.searchControl = new FormControl();\n    if (!this.contacts || this.contacts.lenght == 0){\n      // console.log('ngOnInit contacts', this.contacts);\n      // apro db locale e recupero tutti gli users ordinati per fullname dalla query firebase\n      this.databaseprovider.getContactsLimit()\n      .then(function(data) { \n        //console.log(\"contacts:\", data); \n        that.contacts = data;\n        that.contacts.sort(compareValues('fullname', 'asc'));\n        that.contactsOfSearch = that.contacts;\n      });\n    }\n    this.searchControl.valueChanges.debounceTime(2).subscribe(search => {\n      if (that.contacts){\n        console.log(\"this.contacts lenght:: \", that.contacts.length);\n        that.contactsOfSearch = that.filterItems(that.contacts, that.searchTerm);\n        that.contactsOfSearch.sort(compareValues('fullname', 'asc'));\n        that.searching = false;\n      }\n    });\n  }\n  /**\n   * metodo invocato dalla pagina html alla selezione dell'utente\n   * imposta conversazione attiva nella pagina elenco conversazioni\n   * carica elenco messaggi conversazione nella pagina conversazione\n   * @param conversationWith \n   */\n  goToChat(conversationWith: string, conversationWithFullname: string) {\n    console.log('**************** goToChat conversationWith:: ',conversationWith);\n    // this.navCtrl.setRoot(ListaConversazioniPage, {\n    //   conversationWith:conversationWith\n    // });\n    //pubblico id conv attiva e chiudo pagina \n    this.events.publish('uidConvSelected:changed', conversationWith);\n    this.viewCtrl.dismiss();\n    this.navProxy.pushDetail(DettaglioConversazionePage,{ \n      conversationWith:conversationWith,\n      conversationWithFullname:conversationWithFullname \n    });\n  }\n  /**\n   * chiamato dall'html quando ho il focus sul campo input\n   */\n  onSearchInput(){\n    console.log(\"onSearchInput::: \",this.searching);\n    this.searching = true;\n  }\n  /**\n   * filtro array contatti per parola passata \n   * filtro sul campo fullname\n   * @param items \n   * @param searchTerm \n   */\n  filterItems(items,searchTerm){\n    //console.log(\"filterItems::: \",searchTerm);\n    return items.filter((item) => {\n      //console.log(\"filterItems::: \", item.fullname.toString().toLowerCase());\n      return item.fullname.toString().toLowerCase().indexOf(searchTerm.toString().toLowerCase()) > -1;\n    });     \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/users/users.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 150;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 150\n// module chunks = 9","import { Injectable } from '@angular/core';\nimport { Events } from 'ionic-angular';\nimport 'rxjs/add/operator/map';\n\n// models\nimport { UserModel } from '../../models/user';\n\n// handlers\nimport { ChatConversationHandler } from '../chat-conversation-handler';\nimport { ChatConversationsHandler } from '../chat-conversations-handler';\nimport { ChatArchivedConversationsHandler } from '../chat-archived-conversations-handler';\nimport { ChatContactsSynchronizer } from '../chat-contacts-synchronizer';\n\n// providers\nimport { DatabaseProvider } from '../database/database';\n\n\n\n/*\n  Generated class for the ChatManagerProvider provider.\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\n/**\n * CHAT MANAGER ...\n */\nexport class ChatManager {\n  private tenant: string;\n  public handlers: ChatConversationHandler[];\n  private loggedUser: UserModel;\n\n  public conversationsHandler: ChatConversationsHandler;\n  public archivedConversationsHandler: ChatArchivedConversationsHandler;\n  public contactsSynchronizer: ChatContactsSynchronizer;\n  public openInfoConversation: boolean;\n\n  constructor(\n    public events: Events,\n    //public chatConversationsHandler: ChatConversationsHandler,\n    public chatContactsSynchronizer: ChatContactsSynchronizer,\n    public databaseProvider:DatabaseProvider\n  ) {\n    this.init();\n  }\n  /**\n   * inizializza chatmanager\n   */\n  init(){\n    this.handlers = [];\n    this.openInfoConversation = true;\n    console.log('************* init  ***', this.handlers);\n  }\n  /**\n   * ritorna istanza di chatmanager\n   */\n  getInstance() {\n    return this;\n  }\n  /**\n   * configura App: chiamato da app.component\n   * setto tenant\n   * setto loggedUser\n   * @param app_id \n   */\n  configureWithAppId(app_id) {\n    this.tenant = app_id;\n    this.loggedUser = null;\n    this.databaseProvider.initialize(app_id);\n    this.handlers = [];\n  }\n\n  onOpenCloseInfoConversation(){\n    this.openInfoConversation = !this.openInfoConversation;\n  }\n  /**\n   * return tenant\n   */\n  getTenant(): string {\n    return this.tenant;\n  }\n  /**\n   * return current user detail\n   */\n  getLoggedUser(): UserModel {\n    return this.loggedUser;\n  }\n\n  /**\n   * \n   */\n  getOpenInfoConversation(): boolean {\n    return this.openInfoConversation;\n  }\n  /**\n   * dispose all references\n   * dispose refereces messaggi di ogni conversazione\n   * dispose reference conversazioni\n   * dispose reference sincronizzazione contatti\n   */\n  dispose(){\n    console.log(\" 1 - setOffAllReferences\");\n    this.setOffAllReferences();\n    console.log(\" 2 - disposeConversationsHandler\");\n    if(this.conversationsHandler){this.disposeConversationsHandler();}\n    console.log(\" 3 - disposeArchivedConversationsHandler\");\n    if (this.archivedConversationsHandler) { this.disposeConversationsHandler(); }\n    console.log(\" 4 - disposeContactsSynchronizer\");\n    if(this.contactsSynchronizer){this.disposeContactsSynchronizer();}\n    console.log(\" OKK \");\n    this.conversationsHandler = null;\n    this.contactsSynchronizer = null;\n  }\n\n  /**\n   * invocato da user.ts al LOGIN:\n   * LOGIN:\n   * 1 - imposto lo stato di connessione utente\n   * 2 - aggiungo il token\n   * 3 - pubblico stato loggedUser come login\n   */\n  goOnLine(user){\n    this.loggedUser = user;\n    // console.log(\" 1 - IMPOSTO STATO CONNESSO UTENTE \");\n    // //this.chatPresenceHandler.setupMyPresence(user.uid);\n    // console.log(\" 2 - AGGIORNO IL TOKEN ::: \", user);\n    // //this.msgService.getToken(user);\n    //console.log(\" 3 - PUBBLICO STATO LOGGEDUSER: LOGIN\");\n    //this.conversationsHandler = this.chatConversationsHandler.initWithTenant(this.tenant, this.loggedUser);\n    this.initContactsSynchronizer();\n    this.events.publish('loggedUser:login', this.loggedUser);\n  }\n\n  /**\n   * invocato da user.ts al LOGOUT:\n   * 1 - cancello tutte le references\n   * 2 - pubblico stato loggedUser come logout\n   */\n  goOffLine(){\n    this.loggedUser = null;\n    console.log(\" 1 - CANCELLO TUTTE LE REFERENCES DI FIREBASE\");\n    //console.log(\" 2 - CANCELLO L'UTENTE DAL NODO PRESENZE\");\n    //this.chatPresenceHandler.goOffline();\n    //console.log(\" 3 - RIMUOVO IL TOKEN\");\n    //this.msgService.removeToken();\n    this.dispose();\n    console.log(\" 4 - PUBBLICO STATO LOGGEDUSER: LOGOUT\");\n    this.events.publish('loggedUser:logout', null);\n  }\n\n  /// START metodi gestione messaggi conversazione ////\n  /**\n   * aggiungo la conversazione all'array delle conversazioni\n   * chiamato dall'inizialize di dettaglio-conversazione.ts\n   * @param handler \n   */\n  addConversationHandler(handler) {\n    console.log(\" -----> addConversationHandler\",handler);\n    this.handlers.push(handler);\n  }\n  /**\n   * rimuovo dall'array degli handlers delle conversazioni una conversazione\n   * al momento non è utilizzato!!!\n   * @param conversationId \n   */\n  removeConversationHandler(conversationId) {\n    console.log(\" -----> removeConversationHandler: \",conversationId);\n    const index = this.handlers.findIndex(i => i.conversationWith === conversationId); \n    this.handlers.splice(index, 1);\n  }\n  /**\n   * cerco e ritorno una conversazione dall'array delle conversazioni\n   * con conversationId coincidente con conversationId passato\n   * chiamato dall'inizialize di dettaglio-conversazione.ts\n   * @param conversationId \n   */\n  getConversationHandlerByConversationId(conversationId):any {\n    \n    const resultArray =  this.handlers.filter(function(handler) {\n      console.log('FILTRO::: ***', conversationId, handler.conversationWith);\n      return handler.conversationWith == conversationId;\n    });\n    console.log('getConversationHandlerByConversationId ***', conversationId, resultArray, this.handlers);\n    if (resultArray.length == 0){\n      return null;\n    }\n    return resultArray[0];\n    //return this.handlers.find(item => item.conversationWith == conversationId);\n  }\n  /**\n   * elimino tutti gli hendler presenti nell'array handlers\n   * dopo aver cancellato la reference per ogni handlers\n   */\n  setOffAllReferences(){\n    this.handlers.forEach(function(data) {\n      let item = data.messagesRef;\n      item.ref.off();\n    });\n    this.handlers = [];\n  }\n  /// END metodi gestione messaggi conversazione ////\n\n  /// START metodi gestione conversazioni ////\n  /**\n   * Salvo il CONVERSATIONS handler dopo averlo creato nella lista conversazioni\n   * @param handler \n   */\n  setConversationsHandler(handler){\n    this.conversationsHandler = handler;\n  }\n  /**\n   * elimino la reference dell'handler delle conversazioni\n   */\n  disposeConversationsHandler(){\n    console.log(\" 2 - this.conversationsHandler:: \", this.conversationsHandler);\n    this.conversationsHandler.dispose();\n  }\n  /// END metodi gestione conversazioni ////\n\n  /// START metodi sincronizzazione contatti ////\n  /**\n   * creo handler sincronizzazione contatti se ancora nn esiste\n   * inizio la sincronizzazione\n   */\n  initContactsSynchronizer() {\n    if (!this.contactsSynchronizer) {\n      this.contactsSynchronizer = this.chatContactsSynchronizer.initWithTenant(this.tenant, this.loggedUser);\n      //this.contactsSynchronizer = this.createContactsSynchronizerForUser();\n        this.contactsSynchronizer.startSynchro();\n    } else {\n        this.contactsSynchronizer.startSynchro();\n    }\n  }\n  /**\n   * elimino la reference dell'handler della sincronizzazione contatti\n   */\n  disposeContactsSynchronizer(){\n    this.contactsSynchronizer.dispose();\n  }\n  /// END metodi sincronizzazione contatti ////\n\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chat-manager/chat-manager.ts","var map = {\n\t\"../pages/archived-conversations/archived-conversations.module\": [\n\t\t501,\n\t\t8\n\t],\n\t\"../pages/conversation-detail/conversation-detail.module\": [\n\t\t502,\n\t\t7\n\t],\n\t\"../pages/conversation-list/conversation-list.module\": [\n\t\t503,\n\t\t6\n\t],\n\t\"../pages/placeholder/placeholder.module\": [\n\t\t504,\n\t\t5\n\t],\n\t\"../pages/popover-profile/popover-profile.module\": [\n\t\t505,\n\t\t4\n\t],\n\t\"../pages/popover/popover.module\": [\n\t\t509,\n\t\t3\n\t],\n\t\"../pages/profile/profile.module\": [\n\t\t506,\n\t\t2\n\t],\n\t\"../pages/update-image-profile/update-image-profile.module\": [\n\t\t507,\n\t\t1\n\t],\n\t\"../pages/users/users.module\": [\n\t\t508,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 192;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 192\n// module chunks = 9","//TIMES\n// BUILD\nexport const CURR_VER_DEV = '49';\nexport const CURR_VER_PROD = '0.102';\n\n//export const SERVICE_WORKER_DEV = '/chat/';\n//export const SERVICE_WORKER_PROD = './chat/';\n\n\n// MESSAGES STATUS\nexport const MSG_STATUS_FAILED = -100;\nexport const MSG_STATUS_SENDING = 0;\nexport const MSG_STATUS_SENT = 100;\nexport const MSG_STATUS_SENT_SERVER = 150;\nexport const MSG_STATUS_RECEIVED = 200;\nexport const MSG_STATUS_RETURN_RECEIPT = 250; \nexport const MSG_STATUS_SEEN = 300;\n\n// constans messages detail \nexport const MIN_HEIGHT_TEXTAREA: number = 24;\nexport const MAX_HEIGHT_TEXTAREA: number = 180;\n\n// pagine\nexport const PARENT_PAGE_USERS: string = \"users\";\nexport const PARENT_PAGE_DETAIL_CONVERSATION: string = \"dettaglio-conversazione\";\n\n// css\nexport const BCK_COLOR_CONVERSATION_SELECTED: string = \"#EEEEEE\";\nexport const BCK_COLOR_CONVERSATION_UNSELECTED: string = \"#FFFFFF\";\n\n// LABELS\n// export const LABEL_IMAGE = \"immagine\";\n// export const LABEL_TU = \"tu: \";\n// export const LABEL_MSG_PUSH_START_CHAT = \"Premi qui per chattare con qualcuno\";\n// export const LABEL_MSG_START_CHAT = \"inizia a chattare\";\n// export const LABEL_ACTIVE_NOW = \"attivo/a ora\";\n// export const LABEL_NO_MSG_HERE = \"Ancora nessun messaggio qui...\";\n// export const LABEL_TODAY = \"Oggi\";\n// export const LABEL_TOMORROW = \"Ieri\";\n// export const LABEL_LAST_ACCESS = \"ultimo accesso\";\n// export const LABEL_TO = \"alle\";\n// export const ARRAY_DAYS = [\"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\", \"Domenica\"];\n// export const LABEL_ANNULLA = \"ANNULLA\";\n// export const LABEL_OK = \"OK\";\n\nexport const TYPE_SUPPORT_GROUP: string = 'support-group';\n\n\n// TYPES MESSAGES\nexport const TYPE_MSG_TEXT: string = 'text';\nexport const TYPE_MSG_IMAGE: string = 'image';\nexport const MAX_WIDTH_IMAGES: number = 300;\nexport const TYPE_DIRECT: string = 'direct';\nexport const TYPE_GROUP: string = 'group';\nexport const SYSTEM: string = 'system';\nexport const URL_NO_IMAGE: string = '';//assets/img/no_image.png';\nexport const LABEL_NOICON: string = 'NOICON';\nexport const CLIENT_BROWSER: string = 'browser';\nexport const TYPE_POPUP_LIST_CONVERSATIONS: string = 'LIST_CONVERSATIONS';\nexport const TYPE_POPUP_DETAIL_MESSAGE: string = 'DETAIL_MESSAGE';\n\n// URLS\nexport const URL_SEND_BY_EMAIL: string = \"mailto:?subject=Transcript Chat Conversation&body=Salve,%0D%0A%0D%0Adi seguito potrà scaricare il transcript della conversazione intercorsa con il nostro servizio di Supporto:%0D%0A%0D%0Ahttps://api.tiledesk.com/v1/public/requests/\";\nexport const URL_VIDEO_CHAT: string = 'https://videochat.tiledesk.com/add-user-group.html';\nexport const URL_TICKET_CHAT: string = 'https://chat21sdk.atlassian.net/secure/CreateIssue!default.jspa';\n//'https://videochat.tiledesk.com/videochat/videochat.html';\n//'https://www.chat21.org/videochat/'; \n//'https://support.chat21.org/videochat/videochat.php';\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/constants.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Events, Platform } from 'ionic-angular';\n\n// models\nimport { UserModel } from '../../models/user';\n//import { GroupModel } from '../../models/group';\n// firebase\nimport * as firebase from 'firebase/app';\n// utils\nimport { getNowTimestamp, contactsRef } from '../../utils/utils';\nimport { SYSTEM, URL_NO_IMAGE, LABEL_NOICON } from '../../utils/constants';\n\n// services\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\nimport { ChatPresenceHandler} from '../../providers/chat-presence-handler';\nimport { MessagingService } from '../../providers/messaging-service';\n\n/**\n * DESC PROVIDER\n */\n@Injectable()\nexport class UserService {\n  public currentUserDetails: UserModel;\n  public urlNodeContacts: string;\n  public uidLastOpenConversation: string;\n  public token: string;\n\n\n  constructor(\n    public platform: Platform,\n    public events: Events,\n    public chatManager: ChatManager,\n    public chatPresenceHandler: ChatPresenceHandler,\n    public msgService: MessagingService\n  ) {\n    /**\n     * 1 - controllo se l'utente è autenticato e rimango in ascolto\n     * 2 - recupero tenant e impoto url contatti \n     */\n    platform.ready().then(() => {\n      this.onAuthStateChanged();\n      const tenant = this.chatManager.getTenant();\n      this.urlNodeContacts = '/apps/'+tenant+'/contacts/';\n    });\n  }\n\n  // setUserDetail(uid): any {\n  //   // controllo se il nodo esiste prima di restituire il risultato\n  //   //// DA FARE ////\n  //   const urlNodeFirebase = this.urlNodeContacts+uid;\n  //   const userFirebase = firebase.database().ref(urlNodeFirebase);\n  //   return userFirebase;\n  // }\n\n  saveCurrentUserDetail(uid: string, email: string, firstname: string, lastname: string){\n    let timestamp = getNowTimestamp();\n    console.log(\"saveCurrentUserDetail: \",this.urlNodeContacts, uid, firstname, lastname);\n    debugger;\n    return firebase.database().ref(this.urlNodeContacts)\n    .child(uid).set({uid:uid, email:email, firstname:firstname, lastname:lastname, timestamp:timestamp, imageurl:''})\n  }\n\n  // setCurrentUserDetails(uid, email) {\n  //   const urlNodeFirebase = this.urlNodeContacts+uid;\n  //   let that = this;\n  //   const userFirebase = firebase.database().ref(urlNodeFirebase);\n  //   userFirebase.on('value', function(snapshot) {\n  //     if (snapshot.val()){\n  //       const user = snapshot.val();\n  //       const fullname = user.firstname+\" \"+user.lastname;\n  //       that.currentUserDetails = new UserModel(user.uid, user.email, user.firstname, user.lastname, fullname, '');\n  //     }\n  //     else {\n  //       that.currentUserDetails = new UserModel(uid, email, '', '', uid, '');\n  //       // aggiorno user nel nodo firebase contacts\n  //       that.saveCurrentUserDetail(uid, email, '', '');\n  //     }\n  //     // salvo dettaglio currentUser nel singlelton\n  //     that.applicationContext.setCurrentUserDetail(that.currentUserDetails);\n  //   });\n  //   // salvo reference e dettaglio currentUser nel singlelton\n  //   this.applicationContext.setRef(userFirebase, 'contact');\n  // }\n\n  // getCurrentUserDetails(){\n  //   console.log(\"getCurrentUserDetails: \", this.currentUserDetails);\n  //   if (this.currentUserDetails){\n  //     return this.currentUserDetails;\n  //   }\n  //   return;\n  // }\n\n\n  /**\n   * RECUPERO DETTAGLIO UTENTE \n   * @param uid \n   * 1 - leggo nodo contacts con uid passato\n   * 2 - creo un model userDetails vouto e rimango in attesa\n   * 3 - recupero il dettaglio utente se esiste\n   * 4 - pubblico dettaglio utente (subscribe in profile.ts)\n   */\n  loadUserDetail(uid){\n    console.log(\"loadUserDetail: \", uid);\n    const userFirebase = this.initUserDetails(uid);\n    return userFirebase.once('value');\n    // let that = this;\n    // userFirebase.on(\"value\", function(snapshot) {\n    //     let userDetail = new UserModel(snapshot.key, '', '', snapshot.key, '', '');        \n    //     if (snapshot.val()){\n    //       const user = snapshot.val();\n    //       const fullname = user.firstname+\" \"+user.lastname;  \n    //       userDetail = new UserModel(\n    //         snapshot.key, \n    //         user.email, \n    //         user.firstname, \n    //         user.lastname, \n    //         fullname.trim(), \n    //         user.imageurl\n    //       );        \n    //     }\n    //     console.log(\"loadUserDetail: \", userDetail);\n    //     that.events.publish('loadUserDetail:complete', userDetail);\n    //   });\n    }\n\n    getUserDetail(uid): any {\n      const tenant = this.chatManager.getTenant();\n      const urlNodeConcacts = contactsRef(tenant) + uid;\n      var ref =  firebase.database().ref(urlNodeConcacts).once('value');\n      console.log(\"UserService::getUserDetail::ref:\", ref.toString());\n      return ref;\n    }\n\n    getListMembers(members): UserModel[]{ \n      let arrayMembers = [];\n      members.forEach(member => {\n        console.log(\"loadUserDetail: \", member);\n        let userDetail = new UserModel(member, '', '', member, '', URL_NO_IMAGE);\n        if (member.trim() !== '' && member.trim() !== SYSTEM) {\n          this.getUserDetail(member)\n          .then(function(snapshot) { \n            if (snapshot.val()){\n              const user = snapshot.val();\n              const fullname = user.firstname+\" \"+user.lastname;  \n              let imageUrl =  URL_NO_IMAGE;\n              if(user.imageurl && user.imageurl !== LABEL_NOICON){\n                imageUrl = user.imageurl;\n              }\n              userDetail = new UserModel(\n                snapshot.key, \n                user.email, \n                user.firstname, \n                user.lastname, \n                fullname.trim(), \n                imageUrl\n              );  \n              console.log(\"userDetail: \", userDetail)\n            }\n            console.log(\"---------------> : \", member);\n            arrayMembers.push(userDetail);\n          })\n          .catch(function(err) {\n            console.log('Unable to get permission to notify.', err);\n          });\n        }\n      });\n      return arrayMembers;\n    }\n\n\n    \n\n    // loadGroupDetail(uidUser, uidGroup){\n    //   console.log(\"loadGroudDetail: \", uidGroup);\n    //   const userFirebase = this.initGroupDetails(uidUser, uidGroup);\n    //   let that = this;\n    //   userFirebase.on(\"value\", function(snapshot) {\n    //       let groupDetail = new GroupModel(snapshot.key, 0, '', [], '', '');        \n    //       if (snapshot.val()){\n    //         const group = snapshot.val();\n    //         groupDetail = new GroupModel(\n    //           snapshot.key, \n    //           group.createdOn, \n    //           group.iconURL,\n    //           group.members, \n    //           group.name, \n    //           group.owner\n    //         );    \n    //       }\n    //       console.log(\"loadGroupDetail: \", groupDetail);\n    //       that.events.publish('loadGroupDetail:complete', groupDetail);\n    //     });\n    // }\n\n  /**\n   * CONTROLLO SE L'UTENTE E' AUTENTICATO\n   * rimango in ascolto sul login logout\n   * LOGOUT:\n   * 1 - cancello utente dal nodo presenze\n   * 2 - rimuovo il token\n   * 3 - passo lo stato offline al chatmanager\n   * LOGIN:\n   * 1 - imposto stato di connessione utente\n   * 2 - aggiorno il token\n   * 3 - carico il dettaglio utente (o ne creo uno nuovo)\n   * 4 - passo lo stato online al chatmanager\n   */\n  onAuthStateChanged(){\n    console.log(\"UserService::onAuthStateChanged\");\n\n    firebase.auth().onAuthStateChanged(user => {\n      console.log(\"UserService::onAuthStateChanged::user:\", user);\n\n      if (!user) {\n        console.log(\" 3 - PASSO OFFLINE AL CHAT MANAGER\");\n        this.chatManager.goOffLine();\n      }\n      else{\n        console.log(\" 1 - IMPOSTO STATO CONNESSO UTENTE \");\n        this.chatPresenceHandler.setupMyPresence(user.uid);\n        console.log(\" 2 - AGGIORNO IL TOKEN ::: \", user);\n        this.msgService.getToken(user);\n        this.getToken();\n        console.log(\" 3 - CARICO IL DETTAGLIO UTENTE ::: \");\n        let that = this;\n        const userFirebase = this.initUserDetails(user.uid);\n        userFirebase.on('value', function(snapshot) {\n          if (snapshot.val()){\n            const user = snapshot.val();\n            const fullname = user.firstname+\" \"+user.lastname;\n            that.currentUserDetails = new UserModel(user.uid, user.email, user.firstname, user.lastname, fullname, user.imageurl);\n          }\n          else {\n            that.currentUserDetails = new UserModel(user.uid, user.email, '', '', user.uid, '');\n            that.saveCurrentUserDetail(user.uid, user.email, '', '');\n          }\n          console.log(\" 4 - PASSO ONLINE AL CHAT MANAGER\");\n          that.chatManager.goOnLine(that.currentUserDetails);\n        });\n      }\n    });\n  }\n\n\n  getToken(){\n    const that = this;\n    console.log('Notification permission granted.');\n    firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\n    .then(function(idToken) {\n        that.token = idToken;\n        console.log('idToken.', idToken);\n    }).catch(function(error) {\n      // Handle error\n      console.log('idToken.', error);\n    });\n  }\n\n  returnToken():string{\n    return this.token;\n  }\n\n  /**\n   * IMPOSTO FIREBASE REFERENCE\n   * imposto la reference al nodo di firebase dettaglio utente uid\n   * @param uid \n   */\n  initUserDetails(uid) {\n    const urlNodeFirebase = this.urlNodeContacts+uid;\n    return firebase.database().ref(urlNodeFirebase);\n  } \n\n  initGroupDetails(uidUser, uidGroup) {\n    const tenant = this.chatManager.getTenant();\n    const urlNodeContacts = '/apps/'+tenant+'/users/'+uidUser+'/groups/'+uidGroup;\n    return firebase.database().ref(urlNodeContacts);\n  } \n\n  getUidLastOpenConversation(): string {\n    return this.uidLastOpenConversation;\n  }\n\n  /**\n   * LOGUOT FIREBASE\n   * al logout vado in automatico su onAuthStateChanged\n   */\n  logoutUser() {\n    console.log(\"UserService::logoutUser\");\n\n    console.log(\" 1 - CANCELLO L'UTENTE DAL NODO PRESENZE\");\n    this.chatPresenceHandler.goOffline();\n    console.log(\" 2 - RIMUOVO IL TOKEN\");\n    this.msgService.removeToken();\n    return firebase.auth().signOut();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","export abstract class _DetailPage { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/_DetailPage.ts","export class MessageModel{\n    constructor(\n        public uid: string,\n        public language: string,\n        public recipient: string,\n        public recipient_fullname: string,\n        public sender: string, \n        public sender_fullname: string,\n        public status: string, \n        public metadata: any,\n        public text: string,\n        public timestamp: number,\n        public headerDate: string,\n        public type: string,\n        public attributes: any,\n        public channel_type: string\n        //public projectid: string\n    ){ }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/message.ts","export class UploadModel {\n  $key: string;\n  file:File;\n  name:string;\n  url:string;\n  progress:number;\n  createdAt: Date = new Date();\n  constructor(file:File) {\n    this.file = file;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/upload.ts","import { Injectable } from '@angular/core';\nimport { Config } from 'ionic-angular';\n// providers\nimport { DatabaseProvider } from './database/database';\n// models\nimport { UserModel } from '../models/user';\n// firebase\nimport * as firebase from 'firebase/app';\n// utils\nimport { contactsRef } from '../utils/utils';\n\n@Injectable()\nexport class ChatContactsSynchronizer {\n    private tenant: string;\n    private loggeduser: UserModel;\n    private ref: firebase.database.Query;\n\n    constructor(\n        private config: Config,\n        private databaseprovider: DatabaseProvider\n    ) { \n    }\n    /**\n     * inizializzo contacts synchronizer\n     * @param tenant \n     * @param user \n     */\n    initWithTenant(tenant, user) {\n        this.tenant = tenant;\n        this.loggeduser = user;\n        return this;\n    }\n    /**\n     * recupero dal db locale la data dell'ultimo aggiornamento\n     * sincronizzo i contatti dal nodo firebase 'contacts'\n     */\n    startSynchro(){\n        let that = this;\n        this.databaseprovider.getTimestamp()\n        .then(function(lastUpdate) { \n            that.loadFirebaseContactsData(lastUpdate);\n        });\n    }\n    /**\n     * creo una reference al nodo contacts\n     * filtro per data successiva a ultimo aggiornamento\n     * mi sottoscrivo a change, removed, added\n     * ref: https://firebase.google.com/docs/reference/js/firebase.database.Query\n     * https://stackoverflow.com/questions/41721134/firebase-angularfire2-listening-on-queried-list-child-added\n     * https://firebase.google.com/docs/database/web/lists-of-data\n     */\n    loadFirebaseContactsData(lastUpdate){\n        let that = this;\n        console.log(\"lastUpdate:\"+lastUpdate, that.tenant);\n        const urlNodeConcacts = contactsRef(that.tenant);\n        this.ref = firebase.database().ref(urlNodeConcacts);\n        this.ref.orderByChild(\"timestamp\").startAt(lastUpdate)\n        this.ref.on(\"child_changed\", function(childSnapshot) {\n            var childData = childSnapshot.val();\n            that.addContact(childData);\n        });\n        this.ref.on(\"child_removed\", function(childSnapshot) {\n            var childData = childSnapshot.val();\n            that.removeContact(childData);\n        });\n        this.ref.on(\"child_added\", function(childSnapshot) {\n            var childData = childSnapshot.val();\n            that.addContact(childData);\n        })\n    }\n    /**\n     * completo profilo user con fullname\n     * salvo data ultimo aggiornamento nel DB\n     * aggiungo oppure aggiorno (sovrascrivo) un utente al DB\n     * @param child \n     */\n    addContact(child) {\n        // console.log(\"child_added\", child);\n        let user:UserModel = child;\n        let fullname = '';\n        if(user['firstname'] && user['firstname'] != undefined){\n            fullname += user['firstname']+' '\n        }\n        if(user['lastname'] && user['lastname'] != undefined){\n            fullname += user['lastname']\n        }\n        user.fullname = fullname;\n        // console.log(\"fullname:\",fullname);\n        this.databaseprovider.setTimestamp();\n        this.databaseprovider.addContact(user.uid, user.email, user.firstname, user.lastname, user.fullname, user.imageurl);  \n    }\n    /**\n     * salvo data ultimo aggiornamento nel DB\n     * elimino utente dal DB\n     * @param child \n     */\n    removeContact(child) {\n        this.databaseprovider.setTimestamp();\n        let user = child;\n        this.databaseprovider.removeContact(user.uid);\n    }\n    /**\n     * dispose reference di contacts synchronizer\n     */\n    dispose() {\n        this.ref.off();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chat-contacts-synchronizer.ts","import { Component } from '@angular/core';\nimport { AlertController, LoadingController, ModalController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\n// pages\nimport { RegisterPage } from '../../authentication/register/register';\nimport { ResetpwdPage } from '../../authentication/resetpwd/resetpwd';\n// services\nimport { AuthService } from '../../../providers/auth-service';\n//import { UserService } from '../../../providers/user/user';\n\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\n\nexport class LoginPage {\n  private loginForm;\n  private submitAttempt: boolean = false;\n  private loading: any;\n  private showPage: boolean;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private authService: AuthService, \n    private formBuilder: FormBuilder,\n    private alertCtrl: AlertController, \n    private loadingCtrl: LoadingController\n    //private userService: UserService\n  ) {\n    //console.log(\"LOGIN PAGE\");\n  }\n\n  /**\n   * imposto espressione regolare per verifica email\n   * imposto il form della pagina con i campi da validare (email e psw)\n   */\n  ngOnInit() {\n    //console.log('ngOnInit');\n    let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(EMAIL_REGEXP)])],\n      password: ['', Validators.compose([Validators.minLength(6), Validators.required])]\n    });\n  }\n  /**\n   * quando entro nella pagina imposto showPage a true \n   * e visualizzo il div della pagina \n   * controllo se sono già loggato e dismetto la view\n   * utile quando vengo dalla registrazione utente\n   * show view\n   */\n  ionViewWillEnter() {\n    this.showPage = true;\n    // if (this.authService.getUser()){\n    //   this.viewCtrl.dismiss({animation:'none'})\n    // }\n  }\n  /**\n   * quando esco dalla pagina imposto showPage a false\n   * che nasconde il div del login\n   */\n  ionViewWillLeave(){\n    this.showPage = false;\n  }\n  /**\n   * quando scrivo nel campo email o psw\n   * richiamo questo metodo che  ???? booohhhh\n   * @param input \n   */\n  elementChanged(input){\n    // let field = input.inputControl.firstname;\n    // this[field + \"Changed\"] = true;\n  }\n  /**\n   * quando premo sul pulsante registrati \n   * richiamo questa func che carica la pagina RegisterPage\n   */\n  register(){\n    let profileModal = this.modalCtrl.create(RegisterPage, null, { enableBackdropDismiss: false });\n    profileModal.present({animate: false, duration: 0});\n    //this.navCtrl.push(RegisterPage);\n  }\n  /**\n   * quando premo sul pulsante reset psw \n   * richiamo questa func che carica la pagina ResetpwdPage\n   */\n  resetPwd(){\n    let profileModal = this.modalCtrl.create(ResetpwdPage, null, { enableBackdropDismiss: false });\n    profileModal.present({animate: false, duration: 0});\n    //this.navCtrl.push(ResetpwdPage);\n  }\n  /**\n   * quando premo sul pulsante login richiamo questa func che:\n   * effettuo il login e se riesce chiudo tutte le pg aperte\n   * altrimenti apro un alert di errore\n   */\n  loginUserFirebase(){\n    this.submitAttempt = true;\n    console.log(\"LOGIN\", this.loginForm.value);\n    if (!this.loginForm.valid){\n      console.log(\"ERRORE LOGIN:: \",this.loginForm.value);\n    } else {\n      this.authService.doLoginFirebase(this.loginForm.value.email, this.loginForm.value.password)\n      .then( user => {\n        //console.log(\"register\",user.uid, this.userService);\n        //this.userService.setCurrentUserDetails(user.uid, user.email);\n        //dismetto la modale ricarico lista conversazioni passando user\n        this.loading.dismiss();\n      })\n      .catch(error => {\n          console.log(error,'ERROR LOGIN FIREBASE');\n          this.loading.dismiss().then( () => {\n            let alert = this.alertCtrl.create({\n              message: error.message,\n              buttons: [\n                {\n                  text: \"Ok\",\n                  role: 'cancel'\n                }\n              ]\n            });\n            alert.present();\n          });\n      });\n      this.loading = this.loadingCtrl.create({\n        dismissOnPageChange: true,\n      });\n      this.loading.present();\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/authentication/login/login.ts","import { Component } from '@angular/core';\nimport { ViewController, NavController, AlertController, LoadingController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n// services\nimport { AuthService } from '../../../providers/auth-service';\nimport { UserService } from '../../../providers/user/user';\n\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html'\n})\nexport class RegisterPage {\n\n  public registerForm;\n  public usernameChanged: boolean = false;\n  public emailChanged: boolean = false;\n  public passwordChanged: boolean = false;\n  public fullnameChanged: boolean = false;\n  public submitAttempt: boolean = false;\n  public loading: any;\n\n  constructor(\n    public viewCtrl: ViewController, \n    public navCtrl: NavController, \n    public authService: AuthService,  \n    public formBuilder: FormBuilder,\n    public alertCtrl: AlertController, \n    public loadingCtrl: LoadingController,\n    public userService: UserService\n  ) {\n  }\n\n  /**\n   * imposto espressione regolare per verifica email\n   * imposto il form della pagina con i campi da validare (email, psw, firstname, lastname)\n   */\n  ngOnInit() {\n    let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    this.registerForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(EMAIL_REGEXP)])],\n      password: ['', Validators.compose([Validators.minLength(6), Validators.required])],\n      firstname: ['', Validators.compose([Validators.minLength(2), Validators.required])],\n      lastname: ['', Validators.compose([Validators.minLength(2), Validators.required])]\n    });\n  }\n  /**\n   * chiamato ogni volta che cambio il valore di un campo input\n   * NON ricordo a cosa serve!!!!\n   * @param input \n   */\n  elementChanged(input){\n    let field = input.ngControl.name;\n    this[field + \"Changed\"] = true;\n  }\n  /**\n   * metodo chiamato dalla pagina html alla pressione del tasto 'registrati'\n   * verifico se i campi inseriti sono corretti e procedo alla registrazione dell'utente\n   * al termine dismetto loading e dismetto view\n   */\n  createAccount(){\n    this.submitAttempt = true;\n    if (!this.registerForm.valid){\n      // console.log(this.registerForm.value);\n      // non faccio nulla perchè gli errori sono evidenziati in rosso nella pg html\n    } else {\n      this.authService.register(this.registerForm.value.email, this.registerForm.value.password, this.registerForm.value.firstname, this.registerForm.value.lastname)\n      .then((newUser) => {\n        // creo current user detail\n        debugger;\n        console.log(\"register\",newUser.uid, this.userService);\n        this.userService.saveCurrentUserDetail(newUser.uid, this.registerForm.value.email, this.registerForm.value.firstname, this.registerForm.value.lastname)\n        .then(_ => {\n          console.log('success saveCurrentUserDetail');\n          this.loading.dismiss().then( () => {\n            //dismetto la modale ricarico lista conversazioni passando user\n            //this.loading.dismiss();\n            this.viewCtrl.dismiss({animate: false, duration: 0});\n          });\n        }) \n        .catch(err => {\n          console.log(err,'ERROR saveCurrentUserDetail');\n          this.authService.delete();\n        });\n      })\n      .catch(error => {\n        console.log(error, 'Registrazione authentication fallita');\n        this.loading.dismiss().then( () => {\n          console.log(\"dismetto con errore\");\n          let alert = this.alertCtrl.create({\n            message: error.message,\n            buttons: [\n              {\n                text: \"Ok\",\n                role: 'cancel'\n              }\n            ]\n          });\n          alert.present();\n        });\n      });  \n      // attivo il loading\n      this.loading = this.loadingCtrl.create({\n        dismissOnPageChange: true,\n      });\n      this.loading.present();\n    }\n  }\n  /**\n   * chiudo il popup di registrazione\n   */\n  goBack(){\n    this.navCtrl.pop({animate: false, duration: 0});    \n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/authentication/register/register.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController, LoadingController, ViewController } from 'ionic-angular';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n//provider\nimport { AuthService } from '../../../providers/auth-service';\n\n@Component({\n  selector: 'page-resetpwd',\n  templateUrl: 'resetpwd.html'\n})\nexport class ResetpwdPage {\n  public resetpwdForm;\n  public emailChanged: boolean = false;\n  public submitAttempt: boolean = false;\n  public loading: any;\n\n  constructor(public navCtrl: NavController, \n    public authService: AuthService, \n    public formBuilder: FormBuilder, \n    public alertCtrl: AlertController, \n    public loadingCtrl: LoadingController,\n    public viewCtrl: ViewController\n  ) {\n  }\n  /**\n   * imposto espressione regolare per verifica email\n   * imposto il form della pagina con i campi da validare (email)\n   */\n  ngOnInit() {\n    console.log(\"ResetpwdPage PAGE\");\n    let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    this.resetpwdForm = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(EMAIL_REGEXP)])]\n    });\n  }\n\n  /**\n   * chiamato ogni volta che cambio il valore di un campo input\n   * NON ricordo a cosa serve!!!!\n   * @param input \n   */\n  elementChanged(input){\n    let field = input.inputControl.firstname;\n    this[field + \"Changed\"] = true;\n  }\n  /**\n   * metodo chiamato dalla pagina html alla pressione del tasto 'recupera password'\n   * verifico se i campi inseriti sono corretti e procedo al recupero psw\n   * al termine dismetto loading e dismetto view\n   */\n  resetPwd() {\n    if (!this.resetpwdForm.valid){\n      console.log(this.resetpwdForm.value);\n    } else {\n      this.authService.resetPassword(this.resetpwdForm.value.email)\n      .then( authService => {\n        //this.navCtrl.setRoot(ListaConversazioniPage);\n        this.loading.dismiss().then( () => {\n          //dismetto la modale ricarico lista conversazioni passando user\n          //this.loading.dismiss();\n          this.viewCtrl.dismiss({animate: false, duration: 0});\n        });\n      }, error => {\n        this.loading.dismiss().then( () => {\n          let alert = this.alertCtrl.create({\n            message: error.message,\n            buttons: [\n              {\n                text: \"Ok\",\n                role: 'cancel'\n              }\n            ]\n          });\n          alert.present();\n        });\n      });\n      this.loading = this.loadingCtrl.create({\n        dismissOnPageChange: true,\n      });\n      this.loading.present();\n    }\n  }\n  /**\n   * chiudo il popup di recupero password\n   */\n  goBack(){\n    this.navCtrl.pop({animate: false, duration: 0});    \n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/authentication/resetpwd/resetpwd.ts","import { Injectable, NgZone } from '@angular/core';\n\nimport 'rxjs/add/operator/map';\nimport * as firebase from 'firebase/app';\nimport { UserModel } from '../models/user';\nimport { ConversationModel } from '../models/conversation';\nimport { ChatManager } from './chat-manager/chat-manager';\nimport { TYPE_GROUP, URL_NO_IMAGE, TYPE_DIRECT } from '../utils/constants';\nimport { compareValues, getFromNow, contactsRef, searchIndexInArrayForUid } from '../utils/utils';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { UploadService } from '../providers/upload-service/upload-service';\n\n@Injectable()\nexport class ChatArchivedConversationsHandler {\n\n    private tenant: string;\n    private loggedUser: UserModel;\n    private userId: string;\n    private ref: firebase.database.Query;\n    public conversations: ConversationModel[] = [];\n    public uidConvSelected: String = '';\n\n    constructor(\n        public chatManager: ChatManager,\n        public translate: TranslateService,\n        public upSvc: UploadService,\n        public zone: NgZone\n    ) {\n    }\n\n    /**\n     * ritorno istanza di conversations handler\n     */\n    getInstance() {\n        return this;\n    }\n\n    /**\n     * inizializzo conversations handler\n     * @param tenant \n     * @param user \n     */\n    initWithTenant(tenant, loggedUser): ChatArchivedConversationsHandler {\n        this.tenant = tenant;\n        this.loggedUser = loggedUser;\n        this.userId = loggedUser.uid;\n        //this.conversations = [];\n        return this;\n    }\n\n    /**\n     * mi connetto al nodo conversations\n     * creo la reference\n     * mi sottoscrivo a change, removed, added\n     */\n    connect() {\n        const that = this;\n        const urlNodeFirebase = '/apps/' + this.tenant + '/users/' + this.loggedUser.uid + '/archived_conversations';\n        this.ref = firebase.database().ref(urlNodeFirebase).orderByChild('timestamp').limitToLast(400);\n\n        this.ref.on(\"child_added\", function (childSnapshot) {\n            that.onSnapshotAdded(childSnapshot);\n        })\n\n        this.ref.on(\"child_changed\", function (childSnapshot) {\n            that.onSnapshotChanged(childSnapshot);\n        });\n\n        this.ref.on(\"child_removed\", function (childSnapshot) {\n            that.onSnapshotRemoved(childSnapshot);\n        });\n\n    }\n\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n    /**\n     * 1 - aggiungo alla pos 0 la nuova conversazione all'array di conversazioni \n     * 2 - pubblico conversations:update\n     * @param snapshot\n     */\n    private onSnapshotAdded(snapshot) {\n        // console.log(\"ChatArchivedConversationsHandler::onSnapshotAdded::snapshot:\", snapshot)\n        const childData: ConversationModel = snapshot.val();\n        childData.uid = snapshot.key;\n        const conversation = this.completeConversation(childData);\n      \n        if (this.isValidConversation(snapshot.key, conversation)) {\n            this.conversations.splice(0, 0, conversation);\n            console.log(\"child_added conversationS\", conversation);\n            //this.events.publish('conversations:added', conversation);\n\n            this.conversations.sort(compareValues('timestamp', 'desc'));\n        } else {\n            console.error(\"ChatArchivedConversationsHandler::added::conversations with conversationId: \", snapshot.key, \"is not valid\");\n        }\n    }\n\n    /**\n     * 1 - cerco indice conversazione nell'array conversation\n     * 2 - sostituisco conversazione\n     * 3 - pubblico conversations:update\n     * @param snapshot\n     */\n    private onSnapshotChanged(snapshot) {\n        // console.log(\"ChatArchivedConversationsHandler::onSnapshotChanged::snapshot:\", snapshot)\n\n        const childData: ConversationModel = snapshot.val();\n        childData.uid = snapshot.key;\n\n        let conversation = this.completeConversation(childData);\n        if (this.isValidConversation(snapshot.key, conversation)) {\n            //conversation = this.isConversationSelected(conversation, '1');\n            const index = searchIndexInArrayForUid(this.conversations, conversation.uid);\n            this.conversations.splice(index, 1, conversation);\n            this.conversations.sort(compareValues('timestamp', 'desc'));\n            console.log(\"child_changed conversationS\", conversation);\n\n            // this.events.publish('conversations:changed', this.conversations);\n\n        } else {\n            console.error(\"ChatArchivedConversationsHandler::changed::conversations with conversationId: \", snapshot.key, \"is not valid\");\n        }\n    }\n\n    /**\n     * 1 - cerco indice conversazione da eliminare\n     * 2 - elimino conversazione da array conversations\n     * 3 - pubblico conversations:update\n     * @param childSnapshot \n     */\n    private onSnapshotRemoved(childSnapshot) {\n        // console.log(\"ChatArchivedConversationsHandler::onSnapshotRemoved::childSnapshot:\", childSnapshot)\n        console.log(\"ChatArchivedConversationsHandler::onSnapshotRemoved::conversation:\", childSnapshot.key);\n\n        const index = searchIndexInArrayForUid(this.conversations, childSnapshot.key);\n        // controllo superfluo sarà sempre maggiore\n        if (index > -1) {\n            // splice (<indice dell'elemento da eliminare>, <numero di elementi da eliminare>)\n            this.conversations.splice(index, 1);\n\n            this.conversations.sort(compareValues('timestamp', 'desc'));\n        }\n    }\n\n    /**\n     * Completo conversazione aggiungendo:\n     * 1 - imposto selected == true se è la conversazione selezionata\n     * 2 - imposto fullname del sender concatenando nome e cognome e\n     *   - aggiungo 'tu:' se il sender coincide con il loggedUser\n     * 3 - imposto il tempo trascorso dell'invio dell'ultimo messaggio\n     * @param conv \n     */\n    private completeConversation(conv): ConversationModel {\n        //debugger;\n        var LABEL_TU = this.translate.get('LABEL_TU')['value'];\n        conv.selected = false;\n        if (!conv.sender_fullname || conv.sender_fullname === 'undefined' || conv.sender_fullname.trim() === '') {\n            conv.sender_fullname = conv.sender;\n        }\n        if (!conv.recipient_fullname || conv.recipient_fullname === 'undefined' || conv.recipient_fullname.trim() === '') {\n            conv.recipient_fullname = conv.recipient;\n        }\n\n        let conversation_with_fullname = conv.sender_fullname;\n        let conversation_with = conv.sender;\n        if (conv.sender === this.loggedUser.uid) {\n            conversation_with = conv.recipient;\n            conversation_with_fullname = conv.recipient_fullname;\n            conv.last_message_text = LABEL_TU + conv.last_message_text;\n        }\n        else if (conv.channel_type === TYPE_GROUP) {\n            conversation_with = conv.recipient;\n            conversation_with_fullname = conv.recipient_fullname;\n            conv.last_message_text = conv.last_message_text;\n        }\n        conv.conversation_with_fullname = conversation_with_fullname;\n\n        conv.status = this.setStatusConversation(conv.sender, conv.uid);\n        this.setImageConversation(conv, conversation_with);\n\n        const time_last_message = this.getTimeLastMessage(conv.timestamp);\n        conv.time_last_message = time_last_message;\n\n        return conv;\n    }\n\n    private setStatusConversation(sender, uid): string {\n        let status = '0'; //letto\n        if (sender === this.loggedUser.uid || uid === this.uidConvSelected) {\n            status = '0';\n        } else {\n            status = '1'; // non letto\n        }\n        return status;\n    }\n\n    private setImageConversation(conv, conversation_with) {\n\n        let image = URL_NO_IMAGE;\n        if (conv.channel_type === TYPE_DIRECT) {\n            const urlNodeConcacts = contactsRef(this.tenant) + conversation_with + '/imageurl/';\n            firebase.database().ref(urlNodeConcacts).once('value')\n                .then(function (snapshot) {\n                    //console.log(\"urlNodeConcacts::: \", snapshot.val(), urlNodeConcacts);\n                    //conv.image = snapshot.val();\n                    if (snapshot.val().trim()) {\n                        //return snapshot.val();\n                        conv.image = snapshot.val();\n                    } else {\n                        conv.image = image;\n                    }\n                })\n                .catch(function (err) {\n                    conv.image = image;\n                })\n        } else {\n            conv.image = image;\n        }\n    }\n\n    /**\n     * calcolo il tempo trascorso da ora al timestamp passato\n     * @param timestamp \n     */\n    private getTimeLastMessage(timestamp: string) {\n        let timestampNumber = parseInt(timestamp) / 1000;\n        let time = getFromNow(timestampNumber);\n        return time;\n    }\n\n    /**\n     * dispose reference di conversations\n     */\n    dispose() {\n        this.ref.off();\n    }\n\n    // check if the conversations is valid or not\n    private isValidConversation(convToCheckId, convToCheck: ConversationModel): boolean {\n\n        console.log(\"[BEGIN] ChatConversationsHandler:: convToCheck with uid: \", convToCheckId);\n\n        if (!this.isValidField(convToCheck.uid)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'uid is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.is_new)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'is_new is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.last_message_text)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'last_message_text is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.recipient)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'recipient is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.recipient_fullname)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'recipient_fullname is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.sender)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'sender is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.sender_fullname)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'sender_fullname is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.status)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'status is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.timestamp)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'timestamp is not valid' \");\n            return false;\n        }\n\n        if (!this.isValidField(convToCheck.channel_type)) {\n            console.error(\"ChatConversationsHandler::isValidConversation:: 'channel_type is not valid' \");\n            return false;\n        }\n\n        console.log(\"[END] ChatConversationsHandler:: convToCheck with uid: \", convToCheckId);\n\n        // any other case\n        return true;\n    }\n\n    // checks if a conversation's field is valid or not\n    private isValidField(field): boolean {\n        return (field === null || field === undefined) ? false : true;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chat-archived-conversations-handler.ts","import { Component, ViewChild, ElementRef, HostListener } from '@angular/core';\nimport { PopoverController, Platform, ActionSheetController, IonicPage, NavParams, Content, Events, NavController } from 'ionic-angular';\n// models\nimport { UserModel } from '../../models/user';\nimport { MessageModel } from '../../models/message';\nimport { UploadModel } from '../../models/upload';\n// providers services \nimport { UserService } from '../../providers/user/user';\nimport { NavProxyService } from '../../providers/nav-proxy';\nimport { ChatPresenceHandler } from '../../providers/chat-presence-handler';\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\nimport { UploadService } from '../../providers/upload-service/upload-service';\nimport { ChatConversationHandler } from '../../providers/chat-conversation-handler';\n// pages\nimport { _DetailPage } from '../_DetailPage';\nimport { ProfilePage } from '../profile/profile';\n// import { InfoConversationPage } from '../info-conversation/info-conversation';\n// import { InfoMessagePage } from '../info-message/info-message';\nimport { PopoverPage } from '../popover/popover';\n// utils\nimport { TYPE_POPUP_DETAIL_MESSAGE, TYPE_DIRECT, MAX_WIDTH_IMAGES, TYPE_MSG_TEXT, TYPE_MSG_IMAGE, MIN_HEIGHT_TEXTAREA,MSG_STATUS_SENDING, MSG_STATUS_SENT, MSG_STATUS_RETURN_RECEIPT } from '../../utils/constants';\nimport { isPopupUrl, popupUrl, strip_tags, getSizeImg, urlify, convertMessageAndUrlify } from '../../utils/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-dettaglio-conversazione',\n  templateUrl: 'dettaglio-conversazione.html',\n})\nexport class DettaglioConversazionePage extends _DetailPage{\n  @ViewChild(Content) content: Content;\n  @ViewChild('messageTextArea') messageTextArea: ElementRef; \n\n  @ViewChild('scrollMe') private scrollMe: ElementRef;\n  showButtonToBottom = false;\n  contentScroll: any;\n  NUM_BADGES = 0;\n\n  private tenant: string;\n  private conversationHandler: ChatConversationHandler;\n  private scrollDirection: any = 'bottom';\n  private messages: Array<MessageModel> = [];\n  private arrayLocalImmages:  Array<any> = [];\n\n  private conversationWith: string;\n  private currentUserDetail: UserModel;\n  private conversationWithFullname: string;\n  private channel_type: string;\n  private online: boolean;\n  private lastConnectionDate: string;\n  private messageString: string;\n  private style_message_welcome: boolean;\n\n  private selectedFiles: FileList;\n  private isFileSelected: boolean;\n  private openInfoConversation: boolean;\n  private openInfoMessage: boolean;\n  private conversationEnabled: boolean = true;\n  private isMobile: boolean = true;\n  \n  MSG_STATUS_SENDING = MSG_STATUS_SENDING;\n  MSG_STATUS_SENT = MSG_STATUS_SENT;\n  MSG_STATUS_RETURN_RECEIPT = MSG_STATUS_RETURN_RECEIPT;\n  urlify = urlify;\n  isPopupUrl = isPopupUrl;\n  popupUrl = popupUrl;\n  strip_tags = strip_tags;\n  \n  convertMessageAndUrlify = convertMessageAndUrlify;\n  \n  constructor(\n    public popoverCtrl: PopoverController,\n    public navParams: NavParams,\n    public navCtrl: NavController,\n    public chatPresenceHandler: ChatPresenceHandler,\n    public navProxy: NavProxyService,\n    public userService: UserService,\n    public events: Events,\n    public chatManager: ChatManager,\n    public actionSheetCtrl: ActionSheetController,\n    public platform: Platform,\n    private upSvc: UploadService,\n    private translateService : TranslateService\n  ) {\n    super();\n    //// recupero id utente e fullname con cui si conversa\n    //// uid utente con cui si conversa\n    this.conversationWith = navParams.get('conversationWith');\n    //// nome utente con cui si conversa\n    this.conversationWithFullname = navParams.get('conversationWithFullname');\n    //// tipo di canale della chat: direct/group\n    this.channel_type = navParams.get('channel_type');\n    (!this.channel_type || this.channel_type == 'undefined')?this.channel_type=TYPE_DIRECT:this.channel_type;\n    this.messages = []; // list messages of conversation\n    this.isFileSelected = false; // indica se è stato selezionato un file (image da uplodare)\n    this.openInfoConversation = this.chatManager.openInfoConversation; // indica se è aperto il box info conversation\n    this.openInfoMessage = false; // indica se è aperto il box info message\n    //// init variables\n    this.initSubscriptions();\n    // DESTROY INFO CONVERSATION \n    console.log('1 - DESTROY INFO CONVERSATION',this.events);\n    this.events.publish('closeDetailConversation', true);\n    console.log(\">>>>>>>>>>>> \", this.navProxy.onSplitPaneChanged);\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    const newInnerWidth = event.target.innerWidth\n    console.log(\"newInnerWidth \", newInnerWidth);\n    if (newInnerWidth < 991) {\n      console.log(\"sparisci!!!!!\")\n      this.openInfoMessage = false;\n      this.openInfoConversation = false;\n    }\n  }\n\n  //// SUBSCRIBTIONS ////\n  /** \n   * subscriptions list \n  */\n  initSubscriptions(){\n    // subscribe stato utente con cui si conversa ONLINE\n    this.events.subscribe('statusUser:online-'+this.conversationWith, this.statusUserOnline);\n    // subscribe stato utente con cui si conversa ONLINE\n    this.events.subscribe('statusUser:offline-'+this.conversationWith, this.statusUserOffline);\n    // subscribe data ultima connessione utente con cui si conversa\n    this.events.subscribe('lastConnectionDate-'+this.conversationWith, this.updateLastConnectionDate);\n    // subscribe elenco messaggi\n    this.events.subscribe('doScroll', this.goToBottom);\n    // subscribe dettaglio messaggio\n    this.events.subscribe('openInfoMessage', this.onOpenInfoMessage);\n    // subscribe message videochat\n    this.events.subscribe('openVideoChat', this.onOpenVideoChat);\n  }\n\n  /**\n    *\n    */\n  // LISTEN TO SCROLL POSITION\n  onScroll(event: any): void {\n    if (this.scrollMe) {\n      const divScrollMe = this.scrollMe.nativeElement;\n      const checkContentScrollPosition = this.isContentScrollEnd(divScrollMe);\n      if (checkContentScrollPosition) {\n        this.showButtonToBottom = false;\n        this.NUM_BADGES = 0;\n      } else {\n        this.showButtonToBottom = true;\n        // this.scrollToBottom();\n      }\n    }\n  }\n\n  private isContentScrollEnd(divScrollMe): boolean {\n    // console.log('checkContentScrollPosition ::', divScrollMe);\n    // console.log('divScrollMe.diff ::', divScrollMe.scrollHeight - divScrollMe.scrollTop);\n    // console.log('divScrollMe.clientHeight ::', divScrollMe.clientHeight);\n    if (divScrollMe.scrollTop === (divScrollMe.scrollHeight - divScrollMe.offsetHeight)) {\n      // console.log('SONO ALLA FINE ::');\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //// CALLBACK SUBSCRIBTIONS ////\n  onConversationEnabled: any = (status) => {\n    console.log('onConversationEnabled');\n    this.conversationEnabled = status;\n  }\n\n  onOpenVideoChat: any = (message) => {\n    this.messageString = message;\n    const text_area = this.messageTextArea['_elementRef'].nativeElement.getElementsByTagName('textarea')[0];\n    text_area.value = message; //<HTMLInputElement>document.getElementById('chat21-main-message-context');\n    text_area.focus();\n  }\n  /**\n   * callback sottoscrizione openInfoMessage\n   * apre il box di dx del info messaggio\n   */\n  onOpenInfoMessage: any = (message) => {\n    this.openInfoMessage = true;\n    //console.log('OPEN MESSAGE **************', message);\n  }\n  /**\n   * on subscribe stato utente con cui si conversa ONLINE\n   */\n  statusUserOnline: any = (uid) => {\n    if(uid !== this.conversationWith){return;}\n    this.online = true;\n    this.events.publish('changeStatusUserSelected', (this.online, this.lastConnectionDate));\n    console.log('************** ONLINE');\n  }\n  /**\n   * on subscribe stato utente con cui si conversa OFFLINE\n   */\n  statusUserOffline: any = (uid) => {\n    if(uid !== this.conversationWith){return;}\n    this.online = false;\n    this.events.publish('changeStatusUserSelected', (this.online, this.lastConnectionDate));\n    console.log('************** OFFLINE');\n  }\n  /**\n   * on subscribe data ultima connessione utente con cui si conversa\n   */\n  updateLastConnectionDate: any = (uid,lastConnectionDate) => {\n    this.lastConnectionDate = lastConnectionDate;\n    this.events.publish('changeStatusUserSelected', (this.online, this.lastConnectionDate));\n    console.log('************** updateLastConnectionDate',this.lastConnectionDate);\n  }\n  /**\n   * on subcribe doScroll add message\n   */\n  goToBottom:any = (data) => {\n    this.doScroll();\n    console.log('*********** goToBottom');\n  }\n\n\n  //// UNSUBSCRIPTIONS ////\n  /**\n   * unsubscribe all subscribe events\n   */\n  unsubescribeAll(){\n    //this.events.unsubscribe('doScroll', null);\n    //this.events.unsubscribe('openInfoMessage', null);\n    this.events.unsubscribe('statusUser:online-'+this.conversationWith, null);\n    this.events.unsubscribe('statusUser:offline-'+this.conversationWith, null);\n    this.events.unsubscribe('lastConnectionDate-'+this.conversationWith, null);\n    this.events.unsubscribe('conversationEnabled', null);\n    //this.events.unsubscribe('openVideoChat', null);\n  }\n\n  //// SYSTEM FUNCTIONS ////\n\n\n  ionViewWillEnter() {\n    this.initialize();\n  }\n  /**\n   * quando ho renderizzato la pagina richiamo il metodo di inizialize\n   */\n  ionViewDidEnter(){\n    //console.log('ionViewDidEnter');\n    // this.initialize();\n  }\n  /**\n   * quando esco dalla pagina distruggo i subscribe\n   */\n  ionViewWillLeave() {\n    console.log('------------> ionViewWillLeave');\n    this.unsubescribeAll();\n  }\n\n  ngAfterViewInit() {\n    console.log('------------> ngAfterViewInit ');\n    //this.events.subscribe('conversationEnabled', this.onConversationEnabled);\n  }\n\n  //// MY FUNCTIONS ////\n  /**\n   * resetto array messaggi\n   * resetto stato online user with\n   * resetto data ultima connessione\n   * recupero currentUserDetail\n   * load stato utente con cui si conversa online/offline\n   * load data ultimo aggesso utente con cui si conversa\n   * recupero info status user conversation with\n   * carico messaggi\n   */\n  initialize(){\n    console.log('----------> initialize DettaglioConversazionePage',this.chatManager.handlers);\n    (!this.channel_type || this.channel_type == 'undefined')?this.channel_type=TYPE_DIRECT:this.channel_type;\n    this.messages = []; // list messages of conversation\n    this.isFileSelected = false; // indica se è stato selezionato un file (image da uplodare)\n    \n    this.openInfoMessage = false; // indica se è aperto il box info message\n    const innerWidth = window.innerWidth;\n    console.log('const innerWidth = ', innerWidth);\n    if (innerWidth < 991) {\n      console.log(\"sparisci!!!!!\")\n      this.openInfoMessage = false;\n      this.openInfoConversation = false;\n    }\n    else {\n      this.openInfoConversation = this.chatManager.getOpenInfoConversation();\n    }\n\n    this.online = false;\n    this.lastConnectionDate = '';\n    \n    this.tenant = this.chatManager.getTenant();\n    this.currentUserDetail = this.chatManager.getLoggedUser();\n    \n    \n    \n    this.chatPresenceHandler.userIsOnline(this.conversationWith);\n    this.chatPresenceHandler.lastOnlineForUser(this.conversationWith);\n    this.initConversationHandler();\n\n    var that = this;\n    // NUOVO MESSAGGIO!!\n   this.conversationHandler.obsAdded\n      .subscribe(newMessage => {\n        if (that.scrollMe) {\n          const divScrollMe = that.scrollMe.nativeElement;\n          const checkContentScrollPosition = that.isContentScrollEnd(divScrollMe);\n          if (checkContentScrollPosition) {\n            setTimeout(function () {\n              that.scrollBottom();\n            }, 100);\n          } else {\n            that.NUM_BADGES++;\n          }\n        }\n      });\n  }\n  /**\n   * recupero da chatManager l'handler\n   * se NON ESISTE creo un handler e mi connetto \n   * se ESISTE mi connetto\n   * carico messaggi\n   * attendo un sec se nn arrivano messaggi visualizzo msg wellcome\n   */\n  initConversationHandler() {\n    //const loggedUser = this.chatManager.getLoggedUser();\n    const that = this;\n    this.style_message_welcome = false;\n    let handler:ChatConversationHandler = this.chatManager.getConversationHandlerByConversationId(this.conversationWith);\n    console.log('initConversationHandler **************',this.chatManager, handler, this.conversationWith);\n    if (!handler) {\n      console.log('ENTRO ***',this.conversationHandler);\n      //const handler = \n      this.conversationHandler = new ChatConversationHandler(this.events, this.translateService);\n      this.conversationHandler.initWithRecipient(this.conversationWith, this.conversationWithFullname,this.currentUserDetail,this.tenant);\n      //this.chatConversationHandler.initWithRecipient(this.conversationWith, this.conversationWithFullname,this.currentUserDetail,this.tenant);\n      \n      //handler = this.chatConversationHandler;\n      //this.conversationHandler = handler;\n      //[self subscribe:handler];\n      //[self.conversationHandler restoreMessagesFromDB];\n      if (this.conversationWith) {\n        //handler.connect();\n        this.conversationHandler.connect();\n        console.log('PRIMA ***', this.chatManager.handlers);\n        this.chatManager.addConversationHandler(this.conversationHandler);\n        console.log('DOPO ***', this.chatManager.handlers);\n        this.messages = this.conversationHandler.messages;\n        this.doScroll();\n      }\n    }\n    else {\n      console.log('NON ENTRO ***',this.conversationHandler,handler);\n      //handler.connect();\n      //[self subscribe:handler];\n      this.conversationHandler = handler;\n      this.messages = this.conversationHandler.messages;\n      console.log('NON ENTRO2  ***',this.conversationHandler, this.messages );\n      this.doScroll();\n    }\n    // attendo un secondo e poi visualizzo il messaggio se nn ci sono messaggi\n    setTimeout(function() {\n      //console.log('setTimeout *** 111',that.messages);\n      if(!that.messages || that.messages.length == 0){\n        that.style_message_welcome = true;\n        console.log('setTimeout *** 111',that.style_message_welcome);\n      } else {\n        that.doScroll();\n        that.onInfoConversation();\n      }\n    }, 1000);\n  }\n  /**\n   * chiamato dal subscribe('listMessages:added')\n   * ogni volta che viene aggiunto un messaggio\n   * aggiorno la lista dei messaggi e mi posiziono sull'ultimo\n   * @param messages \n   */\n  updateMessageList(messages){\n    // if(!this.updatingMessageList){\n      this.messages = messages;\n      console.log('updateMessageList **************', this.messages.length);\n      this.doScroll();\n    // }\n    // this.updatingMessageList = true;\n  }\n\n  //// START Scroll managemant functions ////\n  /**\n   * Scroll to bottom of page after a short delay.\n   */\n  scrollBottom() {\n\n    var scrollDiv = document.getElementById(\"scroll-me\");\n    if (scrollDiv) {\n      scrollDiv.scrollTop = scrollDiv.scrollHeight;\n    }\n  }\n  /**\n   * Scroll to top of the page after a short delay.\n   */\n  scrollTop() {\n    let that = this;\n    setTimeout(function() {\n      that.content.scrollToTop();\n    }, 1);\n  }\n\n  /**\n   * Scroll depending on the direction.\n   */\n  doScroll() {\n    if (this.scrollDirection == 'bottom') {\n      this.scrollBottom();\n    } else if (this.scrollDirection == 'top') {\n      this.scrollTop();\n    }\n  }\n  //// END Scroll managemant functions ////\n\n\n  //// START FUNZIONI RICHIAMATE DA HTML ////\n  /** \n   * chiude il box di dx del info messaggio\n  */\n  onCloseInfoPage(){\n    if(this.openInfoMessage){\n      this.openInfoMessage = false;\n    } else {\n      this.onOpenCloseInfoConversation();\n    }\n  }\n\n  /** \n   * \n  */\n  onOpenCloseInfoConversation(){\n    this.chatManager.onOpenCloseInfoConversation();\n    this.openInfoConversation =  this.chatManager.openInfoConversation;\n    this.onInfoConversation();\n  }\n\n  /** */\n  onInfoConversation(){\n    // ordino array x tempo decrescente\n    // cerco messaggi non miei\n    // prendo il primo\n    let msgRicevuti;\n    let attributes = [];\n    try {\n      msgRicevuti = this.messages.find(item => item.sender !== this.currentUserDetail.uid);\n      attributes = msgRicevuti.attributes;\n    } catch (err) {\n      console.error(\"DettaglioConversazionePage::onInfoConversation:error:\", err)\n    }\n    //const msgRicevuti = this.messages.find(item => item.sender !== this.currentUserDetail.uid);\n    console.log('msgRicevuti::::: ', msgRicevuti);\n    console.log('onUidSelected::::: ', this.conversationWith,  this.openInfoConversation);\n    this.events.publish('onOpenInfoConversation', this.openInfoConversation, this.conversationWith, this.channel_type, attributes);\n    //this.events.publish('changeStatusUserSelected', (this.online, this.lastConnectionDate));\n  }\n\n  /**\n   * Check if the user is the sender of the message.\n   * @param message \n   */\n  isSender(message) {\n    const currentUser = this.chatManager.getLoggedUser();\n    return this.conversationHandler.isSender(message, currentUser);\n  }\n  /**\n   * se il messaggio non è vuoto\n   * 1 - ripristino l'altezza del box input a quella di default\n   * 2 - invio il messaggio\n   * 3 - se l'invio è andato a buon fine mi posiziono sull'ultimo messaggio\n   * @param msg \n   */\n  sendMessage(msg, type, metadata?) {\n    (metadata) ? metadata = metadata : metadata = '';\n    console.log(\"SEND MESSAGE: \", msg, this.messages);\n    // if (type == 'image'){\n    //   msg = 'Image: ' + metadata['src'];\n    // } else if(type == 'file'){\n    //   msg = 'file';\n    // }\n    //(!msg)? msg = metadata.type: msg;\n    if (msg && msg.trim() != '' || type !== TYPE_MSG_TEXT ){\n      this.messageTextArea['_elementRef'].nativeElement.getElementsByTagName('textarea')[0].style.height = MIN_HEIGHT_TEXTAREA+\"px\";\n      this.conversationHandler.sendMessage(msg, type, metadata, this.conversationWith, this.conversationWithFullname, this.channel_type);\n\n      this.chatManager.conversationsHandler.uidConvSelected = this.conversationWith;\n\n      this.doScroll();\n    }\n  }\n  /**\n   * \n   * @param metadata \n   */\n  // updateMetadataMessage(metadata) {\n  //   // recupero id nodo messaggio\n  //   const key = metadata.src.substring(metadata.src.length - 16);\n  //   const uid =  this.arrayLocalImmages[key];\n  //   console.log(\"UPDATE MESSAGE: \",key, uid);\n  //   this.conversationHandler.updateMetadataMessage(uid, metadata);\n  //   delete this.arrayLocalImmages[key];\n  // }\n  /**\n   * purifico il messaggio\n   * e lo passo al metodo di invio\n   * @param messageString \n   */\n  controlOfMessage(messageString){\n    console.log('controlOfMessage **************');\n    messageString = messageString.replace(/(\\r\\n|\\n|\\r)/gm,\"\");\n    if (messageString.trim() != ''){\n      this.sendMessage(messageString, TYPE_MSG_TEXT);\n    } \n    this.messageString = \"\";\n  }\n  /**\n   * invocata dalla pressione del tasto invio sul campo di input messaggio\n   * se il messaggio non è vuoto lo passo al metodo di controllo\n   * @param event \n   * @param messageString \n   */\n  pressedOnKeyboard(event,messageString){\n    console.log('pressedOnKeyboard ************** event:: ', event.code);\n    if (event.inputType == \"insertLineBreak\" && event.data == null){\n      this.messageString = \"\";\n      return\n    }\n    else{\n      this.controlOfMessage(messageString);\n    }\n  }\n  /**\n   * metodo chiamato dall'html quando premo sul nome utente nell'header della pagina\n   * apro la pg di dettaglio user\n   * @param uidReciver \n   */\n  goToUserDetail(uidReciver: string) {\n    console.log('goToUserDetail::: ',this.navProxy.isOn, uidReciver);\n    this.navCtrl.push(ProfilePage, {\n      uidUser: uidReciver\n    });\n  }\n  /**\n   * \n   * @param message \n   */\n  getSizeImg(message): any {\n    return getSizeImg(message, MAX_WIDTH_IMAGES);\n  }\n\n  // setUrlString(text, name): any {\n  //   return name;\n  //   // if(text) {\n  //   //   return setUrlString(text, name);\n  //   // } else {\n  //   //   return name;\n  //   // }\n  // }\n\n  /** */\n  showButtonInfo(){\n    console.log('showButtonInfo');\n  }\n  /**\n   * \n   * @param msg \n   */\n  showDetailMessage(msg){\n    console.log('showDetailMessage', msg);\n    //this.presentPopover(msg);\n  }\n  /**\n  * apro il menu delle opzioni \n  * (metodo richiamato da html) \n  * alla chiusura controllo su quale opzione ho premuto e attivo l'azione corrispondete\n  */\n presentPopover(event, msg) {\n  let popover = this.popoverCtrl.create(PopoverPage, {typePopup:TYPE_POPUP_DETAIL_MESSAGE, message:msg});\n  popover.present({\n    ev: event\n  });\n  /**\n   * \n   */\n  popover.onDidDismiss((data: string) => {\n    console.log(\" ********* data::: \", data);\n    if (data == 'logOut') {\n      //this.logOut();\n    }\n    else if (data == 'ProfilePage') {\n      if(this.chatManager.getLoggedUser()){\n        this.navCtrl.push(ProfilePage);\n      }\n    }\n  });\n}\n//// END FUNZIONI RICHIAMATE DA HTML ////\n\n\n\n\n\n\n  //// START LOAD IMAGE ////\n  /**\n   * \n   * @param event \n   */\n  detectFiles(event) {\n    console.log('event: ', event.target.files[0].name, event.target.files);\n    if (event) {\n      this.selectedFiles = event.target.files;\n      this.fileChange(event);\n    }\n  }\n\n  fileChange(event) {\n    const that = this;\n    if (event.target.files && event.target.files[0]) {\n      const nameImg = event.target.files[0].name;\n      const typeFile = event.target.files[0].type;\n      // const preview = document.querySelector('img');\n      // const file    = document.querySelector('input[type=file]').files[0];\n      const reader  = new FileReader();\n      reader.addEventListener('load', function () {\n          that.isFileSelected = true;\n    \n          if(typeFile.indexOf('image') !== -1 ){\n            const file4Load = new Image;\n            file4Load.src = reader.result;\n            file4Load.title = nameImg;\n            file4Load.onload = function() {\n              console.log('that.file4Load: ', file4Load);\n                that.arrayLocalImmages.push(file4Load);\n                const file = that.selectedFiles.item(0);\n                const uid = file4Load.src.substring(file4Load.src.length - 16);\n                const metadata = {\n                  'name': file.name,\n                  'src': file4Load.src,\n                  'width': file4Load.width,\n                  'height': file4Load.height,\n                  'type': typeFile,\n                  'uid': uid\n                };\n                const type_msg = 'image';\n                // 1 - invio messaggio\n                that.addLocalMessage(metadata, type_msg);\n                // 2 - carico immagine\n                that.uploadSingle(metadata, type_msg);\n            };\n          } else if(typeFile.indexOf('application') !== -1 ){\n            const type_msg = 'file';\n            const file = that.selectedFiles.item(0);\n            const metadata = {\n              'name': file.name,\n              'src': event.target.files[0].src,\n              'type': type_msg\n            };\n      \n            // 1 - invio messaggio\n            that.addLocalMessage(metadata, type_msg);\n            // 2 - carico immagine\n            that.uploadSingle(metadata, type_msg);\n          }\n          \n      }, false);\n      if (event.target.files[0]) {\n          reader.readAsDataURL(event.target.files[0]);\n          console.log('reader-result: ', event.target.result);\n      }\n    }\n  }\n\n  /**\n   * salvo un messaggio localmente nell'array dei msg\n   * @param metadata\n   */\n  addLocalMessage(metadata, type_msg) {\n    const now: Date = new Date();\n    const timestamp = now.valueOf();\n    const language = document.documentElement.lang; \n    let textMessage = type_msg;\n    if(type_msg === 'image'){\n      textMessage = '';\n    } \n    const message = new MessageModel(\n        metadata.uid, // uid\n        language, // language\n        this.conversationWith, // recipient\n        this.conversationWithFullname, //'Support Group', // recipient_fullname\n        this.currentUserDetail.uid, // sender\n        this.currentUserDetail.fullname, //'Ospite', // sender_fullname\n        '', // status\n        metadata, // metadata\n        textMessage, // text\n        timestamp, // timestamp\n        '', // headerDate\n        type_msg, //TYPE_MSG_IMAGE,\n        '', //attributes\n        '' // channel_type\n    );\n\n    // if(type_msg == 'file'){\n    //   message.text = metadata.src;\n    // }\n    this.messages.push(message);\n    // message.metadata.uid = message.uid;\n    console.log('addLocalMessage: ', this.messages);\n    //this.isFileSelected = true;\n    this.doScroll();\n  }\n\n  /**\n   * \n   * @param metadata \n   */\n  uploadSingle(metadata, type_msg) {\n    this.isFileSelected = false;\n    const that = this;\n    const file = this.selectedFiles.item(0);\n    console.log('Uploaded a file! ', file);\n    const currentUpload = new UploadModel(file);\n    this.upSvc.pushUploadMessage(currentUpload)\n    .then(function(snapshot) {\n      console.log('Uploaded a blob or file! ', snapshot.downloadURL);\n      // metadata.src = snapshot.downloadURL;\n      // that.sendMessage('', type_msg, metadata);\n\n\n      metadata.src = snapshot.downloadURL;\n      let type_message = TYPE_MSG_TEXT;\n      let message = 'File: ' + metadata.src;\n      if (metadata.type.startsWith('image')) {\n          type_message = TYPE_MSG_IMAGE;\n          message = 'Image: ' + metadata.src;\n      }\n      that.sendMessage(message, type_message, metadata);\n\n\n    })\n    .catch(function(error) {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log('error: ', errorCode, errorMessage);\n    });\n    console.log('reader-result: ', file);\n  }\n  /**\n   * \n   * @param metadata \n   */\n  onSendImage(metadata) {\n    console.log('onSendImage::::: ', metadata);\n    this.sendMessage('', TYPE_MSG_IMAGE, metadata);\n    this.doScroll();\n  }\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/conversation-detail/conversation-detail.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n//import { enableProdMode } from '@angular/core';\n\n\n\n//enableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\n\nimport { HttpModule, Http } from '@angular/http';\nimport { IonicStorageModule } from '@ionic/storage';\n\n\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\n\n\n//import { HelloIonicPage } from '../pages/hello-ionic/hello-ionic';\nimport { UsersPage } from '../pages/users/users';\nimport { LoginPage } from '../pages/authentication/login/login';\nimport { RegisterPage } from '../pages/authentication/register/register';\nimport { ResetpwdPage } from '../pages/authentication/resetpwd/resetpwd';\nimport { ListaConversazioniPage } from '../pages/conversation-list/conversation-list';\nimport { DettaglioConversazionePage } from '../pages/conversation-detail/conversation-detail';\nimport { ProfilePage } from '../pages/profile/profile';\nimport { InfoConversationPage } from '../pages/info-conversation/info-conversation';\nimport { InfoMessagePage } from '../pages/info-message/info-message';\n\n// import { AngularFireModule } from 'angularfire2';\nimport * as firebase from \"firebase\";\n// import { AngularFireDatabaseModule } from 'angularfire2/database';\n// import { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { AuthService } from '../providers/auth-service';\nimport { ChatPresenceHandler } from '../providers/chat-presence-handler';\nimport { UploadService } from '../providers/upload-service/upload-service';\n\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { NavProxyService } from '../providers/nav-proxy';\nimport { PlaceholderPage } from '../pages/placeholder/placeholder';\nimport { PopoverPage } from '../pages/popover/popover';\nimport { PopoverProfilePage } from '../pages/popover-profile/popover-profile';\nimport { UpdateImageProfilePage } from '../pages/update-image-profile/update-image-profile';\n\n//import { FirebaseProvider } from '../providers/firebase-provider';\n\n// SQLite\n\nimport { SQLitePorter } from '@ionic-native/sqlite-porter';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { MessagingService } from '../providers/messaging-service';\nimport { UserService } from '../providers/user/user';\nimport { GroupService } from '../providers/group/group';\nimport { AutosizeDirective } from '../directives/autosize/autosize';\nimport { DatabaseProvider } from '../providers/database/database';\nimport { ChatConversationsHandler } from '../providers/chat-conversations-handler';\nimport { ChatArchivedConversationsHandler } from '../providers/chat-archived-conversations-handler';\nimport { ChatConversationHandler } from '../providers/chat-conversation-handler';\nimport { ChatManager } from '../providers/chat-manager/chat-manager';\nimport { ChatContactsSynchronizer } from '../providers/chat-contacts-synchronizer';\n\n\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { TiledeskConversationProvider } from '../providers/tiledesk-conversation/tiledesk-conversation';\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\nimport { ArchivedConversationsPage } from '../pages/archived-conversations/archived-conversations';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    UsersPage,\n    //UserDetailsPage,\n    LoginPage,\n    RegisterPage,\n    ResetpwdPage,\n    ProfilePage,\n    ListaConversazioniPage,\n    DettaglioConversazionePage,\n    PlaceholderPage,\n    PopoverPage,\n    PopoverProfilePage,\n    UpdateImageProfilePage,\n    AutosizeDirective,\n    InfoConversationPage,\n    InfoMessagePage,\n    ArchivedConversationsPage,\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    IonicStorageModule.forRoot(),\n    IonicModule.forRoot(MyApp,{\n      firebaseConfig : {\n        apiKey: \"AIzaSyCNPFpNwq9h5oiOSxEDifxtDFWRoTcim4o\",\n        authDomain: \"chat-app-8391d.firebaseapp.com\",\n        databaseURL: \"https://chat-app-8391d.firebaseio.com\",\n        projectId: \"chat-app-8391d\",\n        storageBucket: \"chat-app-8391d.appspot.com\",\n        messagingSenderId: \"701168043320\"\n      },\n      appConfig: {\n        tenant:\"Chat App\"\n      }\n    }),\n    IonicStorageModule.forRoot({\n      name: \"Chat App\",\n      storeName: 'contacts',\n      driverOrder: ['indexeddb','sqlite', 'websql', 'indexeddb', 'localstorage']\n    })\n    // AngularFireModule.initializeApp(this.firebaseConfig)\n    // AngularFireDatabaseModule,\n    // AngularFireAuthModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    UsersPage,\n    LoginPage,\n    RegisterPage,\n    ResetpwdPage,\n    ProfilePage,\n    ListaConversazioniPage,\n    DettaglioConversazionePage,\n    PlaceholderPage,\n    PopoverPage,\n    PopoverProfilePage,\n    UpdateImageProfilePage,\n    InfoConversationPage,\n    InfoMessagePage,\n    ArchivedConversationsPage\n  ],\n  providers: [\n    //ApplicationContext,\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    DatabaseProvider,\n    SQLitePorter,\n    SQLite,\n    AuthService,\n    ChatPresenceHandler,\n    NavProxyService,\n    MessagingService,\n    UserService,\n    UploadService,\n    ChatManager,\n    ChatConversationsHandler,\n    ChatArchivedConversationsHandler,\n    ChatConversationHandler,\n    ChatContactsSynchronizer,\n    GroupService,\n    TiledeskConversationProvider,\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Nav } from 'ionic-angular';\nimport { PlaceholderPage } from '../pages/placeholder/placeholder';\nimport { _DetailPage } from '../pages/_DetailPage';\n\n\n//https://medium.com/@blewpri/master-detail-with-ionic-3-split-panes-866293608d47\n@Injectable()\nexport class NavProxyService {\n\n    _masterNav: Nav = null;\n\n    get masterNav(): Nav {\n        return this._masterNav;\n    }\n    set masterNav(value: Nav) {\n        this._masterNav = value;\n    }\n\n    _detailNav: Nav = null;\n    get detailNav(): Nav {\n        return this._detailNav;\n    }\n    set detailNav(value: Nav) {\n        this._detailNav = value;\n    }\n\n    _isOn: boolean = false;\n\n    get isOn(): boolean {\n        return this._isOn;\n    }\n    set isOn(value: boolean) {\n        this._isOn = value;\n    }\n\n\n\n    pushDetail(page: any, params: any) {\n        console.log(\"pushDetail\",this.isOn);\n        (this.isOn) ?\n            this.detailNav.setRoot(page, params,{animate:false}):\n            //this.detailNav.push(page, params);\n            this.masterNav.push(page, params,{animate:false});\n    }\n\n    pushMaster(page: any, params: any) {\n        this.masterNav.push(page, params,{animate:false});\n    }\n\n    setRootMaster(page: any, params: any) {\n        this.masterNav.setRoot(page, params,{animate:false});\n    }\n\n    /**\n     * ATTENZIONE NN SO A COSA SERVE!!!\n     * DA VERIFICARE\n     * su firefox nn scompare il placeholder screen\n     * @param isOn \n     */\n    onSplitPaneChanged(isOn) {\n        //isOn = true;\n        console.log(\"-----------> onSplitPaneChanged <----------\",this.isOn);\n        // set local 'isOn' flag...\n        this.isOn = isOn;\n        // if the nav controllers have been instantiated...\n        if (this.masterNav && this.detailNav) {\n            (isOn) ? this.activateSplitView() :\n                     this.deactivateSplitView();\n        }\n    }\n    activateSplitView() {\n        let currentView = this.masterNav.getActive();\n            if (currentView.component.prototype\n                instanceof _DetailPage) {\n                // if the current view is a 'Detail' page...\n                // - remove it from the 'master' nav stack...\n                this.masterNav.pop({animate: false, duration: 0});\n                // - and add it to the 'detail' nav stack...\n                this.detailNav.setRoot(\n                    currentView.component,\n                    currentView.data);\n            }\n     }\n    deactivateSplitView() {\n        let detailView = this.detailNav.getActive();\n        if(!detailView){\n            return;\n        }\n        this.detailNav.setRoot(PlaceholderPage);\n        if (detailView.component.prototype instanceof _DetailPage) {\n            // if the current detail view is a 'Detail' page...\n            // ...so, not the placeholder page:\n            let index = this.masterNav.getViews().length;\n            // add it to the master view...\n            this.masterNav.insert(\n                index,\n                detailView.component,\n                detailView.data\n            );\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/nav-proxy.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Config } from 'ionic-angular';\n\nimport * as firebase from 'firebase';\nimport { UploadModel } from '../../models/upload';\n\n\n@Injectable()\n/**\n * DESC PROVIDER\n */\nexport class UploadService {\n  private tenant: string;\n  private uidCurrentUser: string;\n\n  constructor(\n    //private af: AngularFire, \n    //private db: AngularFireDatabase\n    public config: Config\n  ) { \n    // recupero tenant\n    let appConfig = this.config.get(\"appConfig\");\n    this.tenant = appConfig.tenant;\n  }\n\n  private createGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n       // tslint:disable-next-line:no-bitwise\n       const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n       return v.toString(16);\n    });\n   }\n   \n   \n  pushUploadMessage(upload: UploadModel): any {\n    const uid = this.createGuid();\n    const urlImagesNodeFirebase = '/public/images/' + uid + '/';\n    console.log('pushUpload::::::::::::: ', urlImagesNodeFirebase);\n    // Create a root reference\n    const storageRef = firebase.storage().ref();\n    // Create a reference to 'mountains.jpg'\n    const mountainsRef = storageRef.child(urlImagesNodeFirebase);\n    return mountainsRef.put(upload.file);\n    // .then(function(snapshot) {\n    //   console.log('Uploaded a blob or file! ', snapshot.downloadURL);\n    //   this.observable.next(snapshot.downloadURL);\n    // });\n  }\n\n  pushUploadImage(upload: UploadModel): any {\n    const uid = this.createGuid();\n    const urlImagesNodeFirebase = '/public/images/' + uid + '/';\n    console.log('pushUpload::::::::::::: ', urlImagesNodeFirebase);\n    // Create a root reference\n    const storageRef = firebase.storage().ref();\n    // Create a reference to 'mountains.jpg'\n    const mountainsRef = storageRef.child(urlImagesNodeFirebase);\n    return mountainsRef.put(upload.file);\n  }\n\n  pushUpload(upload: UploadModel) {\n    // recupero current user id\n    this.uidCurrentUser = firebase.auth().currentUser.uid;\n    const urlImagesNodeFirebase = '/apps/'+this.tenant+'/contacts/'+this.uidCurrentUser+\"-imageProfile\";\n    var next = function(snapshot) {\n      // upload in progress\n      var snapshotRef = snapshot as firebase.storage.UploadTaskSnapshot;\n      var percent = snapshotRef.bytesTransferred / snapshotRef.totalBytes * 100;\n      console.log(\"snapshot::::::::::::: \",percent);\n      upload.progress = percent;\n    };\n    var error = function(error) {\n      // upload failed\n      console.log(error);\n    };\n    var complete = function() {\n      // upload success\n      upload.url = uploadTask.snapshot.downloadURL;\n      upload.name = upload.file.name;\n      upload.progress = 100;\n    };\n    let storageRef = firebase.storage().ref();\n    let uploadTask = storageRef.child(urlImagesNodeFirebase).put(upload.file);\n    \n    // This is equivalent to the first example.\n    var subscribe = uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED);\n    subscribe(next, error, complete);\n  }\n\n  display(uidContact, format?) {\n    console.log('display format::'+format);\n    if(uidContact && uidContact!=''){\n      var urlImagesNodeFirebase;\n      if(format == 'thumb'){\n        urlImagesNodeFirebase = '/profiles/'+uidContact+'/thumb_photo.jpg';\n      } else {\n        urlImagesNodeFirebase = '/profiles/'+uidContact+'/photo.jpg';\n      }\n      //const urlImagesNodeFirebase = '/apps/'+this.tenant+'/contacts/'+uidContact+\"-imageProfile\";\n      return firebase.storage().ref().child(urlImagesNodeFirebase).getDownloadURL()\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/upload-service/upload-service.ts","var map = {\n\t\"./af\": 193,\n\t\"./af.js\": 193,\n\t\"./ar\": 194,\n\t\"./ar-dz\": 195,\n\t\"./ar-dz.js\": 195,\n\t\"./ar-kw\": 196,\n\t\"./ar-kw.js\": 196,\n\t\"./ar-ly\": 197,\n\t\"./ar-ly.js\": 197,\n\t\"./ar-ma\": 198,\n\t\"./ar-ma.js\": 198,\n\t\"./ar-sa\": 199,\n\t\"./ar-sa.js\": 199,\n\t\"./ar-tn\": 200,\n\t\"./ar-tn.js\": 200,\n\t\"./ar.js\": 194,\n\t\"./az\": 201,\n\t\"./az.js\": 201,\n\t\"./be\": 202,\n\t\"./be.js\": 202,\n\t\"./bg\": 203,\n\t\"./bg.js\": 203,\n\t\"./bm\": 204,\n\t\"./bm.js\": 204,\n\t\"./bn\": 205,\n\t\"./bn.js\": 205,\n\t\"./bo\": 206,\n\t\"./bo.js\": 206,\n\t\"./br\": 207,\n\t\"./br.js\": 207,\n\t\"./bs\": 208,\n\t\"./bs.js\": 208,\n\t\"./ca\": 209,\n\t\"./ca.js\": 209,\n\t\"./cs\": 210,\n\t\"./cs.js\": 210,\n\t\"./cv\": 211,\n\t\"./cv.js\": 211,\n\t\"./cy\": 212,\n\t\"./cy.js\": 212,\n\t\"./da\": 213,\n\t\"./da.js\": 213,\n\t\"./de\": 214,\n\t\"./de-at\": 215,\n\t\"./de-at.js\": 215,\n\t\"./de-ch\": 216,\n\t\"./de-ch.js\": 216,\n\t\"./de.js\": 214,\n\t\"./dv\": 217,\n\t\"./dv.js\": 217,\n\t\"./el\": 218,\n\t\"./el.js\": 218,\n\t\"./en-au\": 219,\n\t\"./en-au.js\": 219,\n\t\"./en-ca\": 220,\n\t\"./en-ca.js\": 220,\n\t\"./en-gb\": 221,\n\t\"./en-gb.js\": 221,\n\t\"./en-ie\": 222,\n\t\"./en-ie.js\": 222,\n\t\"./en-il\": 223,\n\t\"./en-il.js\": 223,\n\t\"./en-nz\": 224,\n\t\"./en-nz.js\": 224,\n\t\"./eo\": 225,\n\t\"./eo.js\": 225,\n\t\"./es\": 226,\n\t\"./es-do\": 227,\n\t\"./es-do.js\": 227,\n\t\"./es-us\": 228,\n\t\"./es-us.js\": 228,\n\t\"./es.js\": 226,\n\t\"./et\": 229,\n\t\"./et.js\": 229,\n\t\"./eu\": 230,\n\t\"./eu.js\": 230,\n\t\"./fa\": 231,\n\t\"./fa.js\": 231,\n\t\"./fi\": 232,\n\t\"./fi.js\": 232,\n\t\"./fo\": 233,\n\t\"./fo.js\": 233,\n\t\"./fr\": 234,\n\t\"./fr-ca\": 235,\n\t\"./fr-ca.js\": 235,\n\t\"./fr-ch\": 236,\n\t\"./fr-ch.js\": 236,\n\t\"./fr.js\": 234,\n\t\"./fy\": 237,\n\t\"./fy.js\": 237,\n\t\"./gd\": 238,\n\t\"./gd.js\": 238,\n\t\"./gl\": 239,\n\t\"./gl.js\": 239,\n\t\"./gom-latn\": 240,\n\t\"./gom-latn.js\": 240,\n\t\"./gu\": 241,\n\t\"./gu.js\": 241,\n\t\"./he\": 242,\n\t\"./he.js\": 242,\n\t\"./hi\": 243,\n\t\"./hi.js\": 243,\n\t\"./hr\": 244,\n\t\"./hr.js\": 244,\n\t\"./hu\": 245,\n\t\"./hu.js\": 245,\n\t\"./hy-am\": 246,\n\t\"./hy-am.js\": 246,\n\t\"./id\": 247,\n\t\"./id.js\": 247,\n\t\"./is\": 248,\n\t\"./is.js\": 248,\n\t\"./it\": 103,\n\t\"./it.js\": 103,\n\t\"./ja\": 249,\n\t\"./ja.js\": 249,\n\t\"./jv\": 250,\n\t\"./jv.js\": 250,\n\t\"./ka\": 251,\n\t\"./ka.js\": 251,\n\t\"./kk\": 252,\n\t\"./kk.js\": 252,\n\t\"./km\": 253,\n\t\"./km.js\": 253,\n\t\"./kn\": 254,\n\t\"./kn.js\": 254,\n\t\"./ko\": 255,\n\t\"./ko.js\": 255,\n\t\"./ku\": 256,\n\t\"./ku.js\": 256,\n\t\"./ky\": 257,\n\t\"./ky.js\": 257,\n\t\"./lb\": 258,\n\t\"./lb.js\": 258,\n\t\"./lo\": 259,\n\t\"./lo.js\": 259,\n\t\"./lt\": 260,\n\t\"./lt.js\": 260,\n\t\"./lv\": 261,\n\t\"./lv.js\": 261,\n\t\"./me\": 262,\n\t\"./me.js\": 262,\n\t\"./mi\": 263,\n\t\"./mi.js\": 263,\n\t\"./mk\": 264,\n\t\"./mk.js\": 264,\n\t\"./ml\": 265,\n\t\"./ml.js\": 265,\n\t\"./mn\": 266,\n\t\"./mn.js\": 266,\n\t\"./mr\": 267,\n\t\"./mr.js\": 267,\n\t\"./ms\": 268,\n\t\"./ms-my\": 269,\n\t\"./ms-my.js\": 269,\n\t\"./ms.js\": 268,\n\t\"./mt\": 270,\n\t\"./mt.js\": 270,\n\t\"./my\": 271,\n\t\"./my.js\": 271,\n\t\"./nb\": 272,\n\t\"./nb.js\": 272,\n\t\"./ne\": 273,\n\t\"./ne.js\": 273,\n\t\"./nl\": 274,\n\t\"./nl-be\": 275,\n\t\"./nl-be.js\": 275,\n\t\"./nl.js\": 274,\n\t\"./nn\": 276,\n\t\"./nn.js\": 276,\n\t\"./pa-in\": 277,\n\t\"./pa-in.js\": 277,\n\t\"./pl\": 278,\n\t\"./pl.js\": 278,\n\t\"./pt\": 279,\n\t\"./pt-br\": 280,\n\t\"./pt-br.js\": 280,\n\t\"./pt.js\": 279,\n\t\"./ro\": 281,\n\t\"./ro.js\": 281,\n\t\"./ru\": 282,\n\t\"./ru.js\": 282,\n\t\"./sd\": 283,\n\t\"./sd.js\": 283,\n\t\"./se\": 284,\n\t\"./se.js\": 284,\n\t\"./si\": 285,\n\t\"./si.js\": 285,\n\t\"./sk\": 286,\n\t\"./sk.js\": 286,\n\t\"./sl\": 287,\n\t\"./sl.js\": 287,\n\t\"./sq\": 288,\n\t\"./sq.js\": 288,\n\t\"./sr\": 289,\n\t\"./sr-cyrl\": 290,\n\t\"./sr-cyrl.js\": 290,\n\t\"./sr.js\": 289,\n\t\"./ss\": 291,\n\t\"./ss.js\": 291,\n\t\"./sv\": 292,\n\t\"./sv.js\": 292,\n\t\"./sw\": 293,\n\t\"./sw.js\": 293,\n\t\"./ta\": 294,\n\t\"./ta.js\": 294,\n\t\"./te\": 295,\n\t\"./te.js\": 295,\n\t\"./tet\": 296,\n\t\"./tet.js\": 296,\n\t\"./tg\": 297,\n\t\"./tg.js\": 297,\n\t\"./th\": 298,\n\t\"./th.js\": 298,\n\t\"./tl-ph\": 299,\n\t\"./tl-ph.js\": 299,\n\t\"./tlh\": 300,\n\t\"./tlh.js\": 300,\n\t\"./tr\": 301,\n\t\"./tr.js\": 301,\n\t\"./tzl\": 302,\n\t\"./tzl.js\": 302,\n\t\"./tzm\": 303,\n\t\"./tzm-latn\": 304,\n\t\"./tzm-latn.js\": 304,\n\t\"./tzm.js\": 303,\n\t\"./ug-cn\": 305,\n\t\"./ug-cn.js\": 305,\n\t\"./uk\": 306,\n\t\"./uk.js\": 306,\n\t\"./ur\": 307,\n\t\"./ur.js\": 307,\n\t\"./uz\": 308,\n\t\"./uz-latn\": 309,\n\t\"./uz-latn.js\": 309,\n\t\"./uz.js\": 308,\n\t\"./vi\": 310,\n\t\"./vi.js\": 310,\n\t\"./x-pseudo\": 311,\n\t\"./x-pseudo.js\": 311,\n\t\"./yo\": 312,\n\t\"./yo.js\": 312,\n\t\"./zh-cn\": 313,\n\t\"./zh-cn.js\": 313,\n\t\"./zh-hk\": 314,\n\t\"./zh-hk.js\": 314,\n\t\"./zh-tw\": 315,\n\t\"./zh-tw.js\": 315\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 421;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 421\n// module chunks = 9","//https://devdactic.com/ionic-sqlite-queries-database/\n//http://ionicframework.com/docs/native/sqlite/\n//https://stackoverflow.com/questions/42840951/uncaught-in-promise-cordova-not-available-in-ionic-2\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport 'rxjs/add/operator/map';\n// firebase\nimport * as firebase from 'firebase/app';\n//utils\nimport { getNowTimestamp } from '../../utils/utils';\n\n/**\n * GESTIONE SALVATAGGIO IMMAGINI IN FIREBASE\n */\n@Injectable()\nexport class DatabaseProvider {\n  private storageSettings: Storage;\n\n  constructor(\n    private storage: Storage\n  ) {}\n\n  /**\n   * inizializzo databaseprovider \n   * creo un nuovo storage\n   * chiamato nell'init di chat-manager\n   * @param tenant \n   */\n  initialize(tenant){\n    let configStorage = {\n      name: tenant,\n      storeName: 'settings',\n      driverOrder: ['indexeddb','sqlite', 'websql', 'indexeddb', 'localstorage']\n    };\n    this.storageSettings = new Storage(configStorage);\n  }\n  /**\n   * ritorno data ultimo aggiornamento salvata nel DB locale\n   */\n  getTimestamp(){\n    return this.storageSettings.get('lastUpdate')\n    .then(function(lastUpdate) { \n      return lastUpdate;\n    });\n  }\n  /**\n   * salvo data ultimo aggiornamento nel DB locale\n   */\n  setTimestamp(){\n    let lastUpdate = getNowTimestamp();\n    //console.log(\"SALVO NEL DB DATA UPDATE:\", lastUpdate);\n    this.storageSettings.set('lastUpdate',lastUpdate);\n  }\n  /**\n   * ritorno uid ultima conversazione aperta salvata nel DB locale\n   */\n  getUidLastOpenConversation() {\n    //console.log(\"getUidLastOpenConversation\");\n    return this.storageSettings.get('uidLastOpenConversation')\n  }\n  /**\n   * salvo uid ultima conversazione aperta nel DB\n   * @param uid \n   */\n  setUidLastOpenConversation(uid){\n    //console.log(\"SALVO NEL DB UID ULTIMA CHAT APERTA:\", uid);\n    this.storageSettings.set('uidLastOpenConversation',uid);\n  }\n  /**\n   * ritorno contatti salvati nel DB locale\n   * da verificare!!!\n   * @param limit \n   */\n  getContactsLimit(limit?) {\n    let idCurrentUser = firebase.auth().currentUser.uid;\n    let contacts = [];\n    return this.storage.forEach( (data, key, index) => {\n      limit>0?limit:null;\n      //console.log(\"INDEX::\", index, limit);\n      if (index<limit || !limit){\n        console.log(\"This is the value ------> \", data);\n        if(data.uid != idCurrentUser){\n          contacts.push({ uid: data.uid, firstname: data.firstname, lastname: data.lastname, fullname: data.fullname, imageurl: data.imageurl });\n        }\n      } else {\n        // NON FUNZIONA!!! \n        //contacts.sort(compareValues('name', 'asc'));\n        return Promise.resolve(contacts);\n      }\n    })\n    .then(function() { \n      //console.log(\"contacts:\", contacts); \n      //contacts.sort(compareValues('name', 'asc'));\n      return contacts;\n    });\n  }\n  /**\n   * aggiungo un nuovo contatto o sovrascrivo uno già esistente al DB locale\n   * @param uid \n   * @param email \n   * @param firstname \n   * @param lastname \n   * @param fullname \n   * @param imageurl \n   */\n  addContact(uid, email, firstname, lastname, fullname, imageurl) {\n    //let data = [uid, email, firstname, lastname, fullname, imageurl];\n    //this.storage.ready().then(() => {\n      //INSERT OR REPLACE\n      let value = {\n        \"imageurl\" : (imageurl && imageurl!='undefined')?imageurl:'',\n        \"email\" : (email && email!='undefined')?email:'',\n        \"firstname\" : (firstname && firstname!='undefined')?firstname:'',\n        \"lastname\" : (lastname && lastname!='undefined')?lastname:'',\n        \"fullname\" : (fullname && fullname!='undefined')?fullname:'',\n        \"uid\" : uid\n      }\n      //this.storage.set(`contacts:${ uid }`,value);\n      this.storage.set(uid,value);\n    // })\n    // .catch((error) => {\n    //   console.log(\"error::\", error);\n    //   //return contacts;\n    // });\n  }\n  /**\n   * rimuovo un contatto dal DB locale\n   * @param uid \n   */\n  removeContact(uid){\n    //this.storage.ready().then(() => {\n      this.storage.remove(uid);\n    // })\n    // .catch((error) => {\n    //   console.log(\"error::\", error);\n    //   //return contacts;\n    // });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/database/database.ts","export abstract class _MasterPage { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/_MasterPage.ts","import { Component, ViewChild, NgZone } from '@angular/core';\nimport { Platform, MenuController, Nav, AlertController } from 'ionic-angular';\nimport * as firebase from 'firebase/app';\nimport { ListaConversazioniPage } from '../pages/conversation-list/conversation-list';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { Config } from 'ionic-angular';\nimport {NavProxyService} from '../providers/nav-proxy';\n//import {PlaceholderPage} from '../pages/placeholder/placeholder';\nimport { MessagingService } from '../providers/messaging-service';\nimport { ChatManager } from '../providers/chat-manager/chat-manager';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  // Grab References to our 2 NavControllers...\n  @ViewChild('detailNav') detailNav: Nav;\n  @ViewChild('masterNav') masterNav: Nav;\n  // Empty placeholders for the 'master/detail' pages...\n  masterPage: any = null;\n  detailPage: any = null;\n  public zone: NgZone;\n  public user:any;\n  pages: Array<{title: string, component: any}>;\n  isNavBar: string;\n  /**\n   * 1 - init firebase\n   * 2 - quando\n   * @param platform \n   * @param menu \n   * @param statusBar \n   * @param splashScreen \n   * @param config \n   * @param navProxy \n   * @param alertCtrl \n   * @param msgService \n   * @param chatManager \n   */\n  constructor(\n    public platform: Platform,\n    public menu: MenuController,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen,\n    public config: Config,\n    private navProxy: NavProxyService,\n    public alertCtrl: AlertController,\n    public msgService: MessagingService,\n    public chatManager: ChatManager,\n    public translate: TranslateService\n  ) {\n    this.zone = new NgZone({});\n    //this.isNavBar = (location.search.split('navBar=')[1]).split('&')[0];\n    let TEMP = location.search.split('navBar=')[1];\n    if (TEMP) { this.isNavBar = TEMP.split('&')[0]; }\n    //console.log('isNavBar: ', this.isNavBar);\n    //this.isNavBar = 'http://support.chat21.org/dashboard/';\n\n    // this language will be used as a fallback when a translation isn't found in the current language\n    //translate.setDefaultLang('it');\n\n    firebase.initializeApp(config.get(\"firebaseConfig\"));\n    platform.ready().then(() => {\n      \n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n\n      // alert(\"  navProxy.masterNav: \");\n      // Add our nav controllers to\n      // the nav proxy service...\n      navProxy.masterNav = this.masterNav;\n      navProxy.detailNav = this.detailNav;\n      this.masterNav.setRoot(ListaConversazioniPage, { detailNavCtrl: this.detailNav });\n      // this.detailNav.setRoot(PlaceholderPage);\n      this.msgService.initMessage();\n      this.msgService.getPermission();\n      // set tenant\n      let appConfig = config.get(\"appConfig\");\n      const tenant = appConfig.tenant;\n      // init chat manager\n      this.chatManager.configureWithAppId(tenant);\n\n      // const language = document.documentElement.lang;\n      // let language = window.navigator.language; // detect browser language\n      // if (language == null || language == undefined) {\n      //   language = \"en\";\n      // }\n      // console.log('language: ', language);\n      this.translate.setDefaultLang('en');\n      this.translate.use('en');\n\n      console.log('navigator.language: ', navigator.language);\n      var language;\n      if(navigator.language.indexOf('-') != -1){\n        language = navigator.language.substring(0, navigator.language.indexOf('-'));\n      } else if(navigator.language.indexOf('_') != -1){\n        language = navigator.language.substring(0, navigator.language.indexOf('_'));\n      } else {\n        language = navigator.language;\n      }\n      //let language = (navigator.language.indexOf('-') != -1) ? navigator.language.substring(0, navigator.language.indexOf('-')) : navigator.language;\n      this.translate.use(language);\n      console.log('language: ', language);\n    });\n\n    // // solve the issue : \"Cannot read property 'myID' of undefined\"\n    // // source :\n    // // https://github.com/firebase/angularfire/issues/970\n    // if (getLocalStorage()) {\n    //   getLocalStorage().removeItem('firebase:previous_websocket_failure');\n    // }\n\n    localStorage.removeItem('firebase:previous_websocket_failure');\n  }\n\n}\n\n// export function getLocalStorage() {\n//   return (typeof window !== \"undefined\") ? window.localStorage : null;\n// }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component, NgZone } from '@angular/core';\nimport { AlertController, Events, LoadingController} from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\n\n// models\nimport { UserModel } from '../../models/user';\nimport { GroupModel } from '../../models/group';\n\n// services\nimport { UploadService } from '../../providers/upload-service/upload-service';\nimport { UserService } from '../../providers/user/user';\nimport { GroupService } from '../../providers/group/group';\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\nimport { ChatPresenceHandler } from '../../providers/chat-presence-handler';\n\n// utils\nimport { URL_TICKET_CHAT, URL_SEND_BY_EMAIL, URL_VIDEO_CHAT, TYPE_SUPPORT_GROUP, TYPE_GROUP, SYSTEM, URL_NO_IMAGE, LABEL_NOICON } from '../../utils/constants';\nimport { getFormatData, createConfirm, urlify, isExistInArray, createLoading } from '../../utils/utils';\nimport { PlaceholderPage } from '../placeholder/placeholder';\nimport { ChatConversationsHandler } from '../../providers/chat-conversations-handler';\nimport { TiledeskConversationProvider } from '../../providers/tiledesk-conversation/tiledesk-conversation';\nimport { ConversationModel } from '../../models/conversation';\n\nimport { NavProxyService } from '../../providers/nav-proxy';\n\n\n@Component({\n  selector: 'page-info-conversation',\n  templateUrl: 'info-conversation.html',\n})\nexport class InfoConversationPage {\n\n  public uidSelected: string;\n  public channel_type: string;\n  public userDetail: UserModel;\n  public groupDetail: GroupModel;\n  public members: UserModel[];\n  public currentUserDetail: UserModel;\n  public profileYourself: boolean;\n  public attributes: any = {};\n  private customAttributes = []; \n  public attributesClient: string = '';\n  public attributesSourcePage: string = '';\n  public attributesDepartments: string = '';\n  public online: boolean;\n  public lastConnectionDate: string;\n  public conversationEnabled: boolean;\n\n  public TYPE_GROUP = TYPE_GROUP;\n  public URL_SEND_BY_EMAIL = URL_SEND_BY_EMAIL;\n  public URL_VIDEO_CHAT = URL_VIDEO_CHAT;\n\n  private loadingDialog : any;\n  private confirmDialog : any;\n\n  private isLoggedUserGroupMember : boolean;\n\n  arrayUsersStatus = [];\n\n  constructor(\n    public events: Events,\n    public chatManager: ChatManager,\n    public userService: UserService,\n    public groupService: GroupService,\n    public upSvc: UploadService,\n    public zone: NgZone,\n    private conversationsHandler : ChatConversationsHandler,\n    private tiledeskConversationProvider : TiledeskConversationProvider,\n    public alertCtrl: AlertController,\n    public translate: TranslateService,\n    private loadingCtrl: LoadingController,\n    private navProxy: NavProxyService,\n    public chatPresenceHandler: ChatPresenceHandler\n  ) {\n    this.profileYourself = false;\n    this.online = false; \n    this.isLoggedUserGroupMember = false;\n    this.events.subscribe('closeDetailConversation', this.closeDetailConversation);\n  }\n\n  ngOnInit() {\n    console.log('InfoConversationPage::ngOnInit');\n    this.initialize();\n  }\n\n  ionViewWillLeave() {\n    console.log('------------> ionViewWillLeave');\n    this.unsubescribeAll();\n  }\n\n  // /**\n  //  * quando esco dalla pagina distruggo i subscribe\n  //  */\n  // ionViewWillLeave() {\n  //   // nn passa mai di qui!!!!\n  //   console.log('InfoConversationPage ionViewWillLeave');\n  //   //this.unsubscribeInfoConversation();\n\n  // }\n\n\n  initialize(){\n    console.log('InfoConversationPage::initialize');\n    this.arrayUsersStatus = [];\n    this.profileYourself = false;\n    this.currentUserDetail = this.chatManager.getLoggedUser();\n    this.userDetail = new UserModel('', '', '', '', '', '');\n    this.groupDetail = new GroupModel('', 0, '', [], '', '');\n    this.setSubscriptions();\n  }\n\n  //// SUBSCRIBTIONS ////\n  /** \n   * subscriptions list \n  */\n initSubscriptions(uid){\n  console.log('initSubscriptions.', uid);\n  //this.arrayUsersStatus['7CzGOPMbDrXq3Im7APVq5K3advl2'] = true; \n  // subscribe stato utente con cui si conversa ONLINE\n  this.events.subscribe('statusUser:online-'+uid, this.statusUserOnline);\n  // subscribe stato utente con cui si conversa ONLINE\n  this.events.subscribe('statusUser:offline-'+uid, this.statusUserOffline);\n}\n\n  /**\n   * on subscribe stato utente con cui si conversa ONLINE\n   */\n  statusUserOnline: any = (uid) => {\n    //if(uid !== this.conversationWith){return;}\n    this.arrayUsersStatus[uid] = true;\n    console.log('************** ONLINE',this.arrayUsersStatus);\n  }\n  /**\n   * on subscribe stato utente con cui si conversa OFFLINE\n   */\n  statusUserOffline: any = (uid) => {\n    this.arrayUsersStatus[uid] = false;\n    console.log('************** OFFLINE', this.arrayUsersStatus);\n  }\n  //// UNSUBSCRIPTIONS ////\n  /**\n   * unsubscribe all subscribe events\n   */\n  unsubescribeAll(){\n    this.arrayUsersStatus.forEach((value, key) => {\n      console.log(\"unsubscribe key\", key)\n      this.events.unsubscribe('statusUser:online-'+key, null);\n      this.events.unsubscribe('statusUser:offline-'+key, null);\n    });\n    \n  }\n\n\n  /** SUBSCRIPTIONS */\n  setSubscriptions(){\n    console.log('InfoConversationPage::setSubscriptions');\n    this.events.subscribe('onOpenInfoConversation', this.subcribeOnOpenInfoConversation);\n    this.events.subscribe('changeStatusUserSelected', this.subcribeChangeStatusUserSelected);\n    // this.events.subscribe('loadUserDetail:complete', this.subcribeLoadUserDetail);\n    // this.events.subscribe('loadGroupDetail:complete', this.subcribeLoadGroupDetail);\n    this.events.subscribe('PopupConfirmation', this.subcribePopupConfirmation);\n  }\n\n  /**  */\n  subcribePopupConfirmation: any = (resp, action) => {\n    \n    var LABEL_ANNULLA = this.translate.get('CLOSE_ALERT_CANCEL_LABEL')['value'];\n    if(resp === LABEL_ANNULLA) { return; }\n\n    var that = this;\n\n    if(action === 'leave') {\n      // // dismiss the confirm dialog\n      // this.dismissConfirmDialog();\n\n      // create and show loading dialog\n      var spinnerMessage;\n      this.translate.get('LEAVING_GROUP_SPINNER_MSG').subscribe(\n        value => {\n          spinnerMessage = value;\n        }\n      )\n      this.createLoadingDialog(spinnerMessage);\n\n      this.leaveGroup(function callback(result) {\n        if (result == 'success') {\n          // dismiss the loading dialog\n          that.dismissLoadingDialog();\n          that.openPopupConfirmation('group-left');\n        } else if (result == 'error') {\n          // dismiss the loading dialog\n          that.dismissLoadingDialog();\n          that.openPopupConfirmation('cannot-leave-group');\n        }\n      });\n    } else if (action === 'close') {\n      this.closeConversation(this.uidSelected);\n    }\n  }\n\n  /** */\n  subcribeOnOpenInfoConversation: any = (openInfoConversation, uidUserSelected, channel_type, attributes)  => {\n    console.log('InfoConversationPage::subcribeOnOpenInfoConversation');\n\n    // se openInfoConversation === false il pannello è chiuso!\n    if(!openInfoConversation){ return; } \n    this.uidSelected = uidUserSelected;\n    this.channel_type = channel_type;\n    this.attributes = attributes;\n\n    this.updateAttributes(this.attributes);\n    \n    this.populateDetail();\n  };\n\n  private updateAttributes(attributes) {\n    console.log('InfoConversationPage::updateAttributes');\n\n    if (attributes) {\n\n      // console.log(\"InfoConversationPage::subcribeOnOpenInfoConversation::attributes\", attributes)\n\n      this.attributesClient = (attributes.client) ? attributes.client : '';\n      this.attributesSourcePage = (attributes.sourcePage) ? urlify(attributes.sourcePage) : '';\n      //this.attributesDepartments = (attributes.departments)?this.arrayDepartments(attributes.departments).join(\", \"):'';\n\n      this.createCustomAttributesMap(attributes);\n      // console.log(\"InfoConversationPage::subcribeOnOpenInfoConversation::attributes\", attributes);\n      // console.log(\"InfoConversationPage::subcribeOnOpenInfoConversation::customAttributes\", this.customAttributes);\n    }\n  }\n\n  // create a new attributes map without 'client', 'departmentId', 'departmentName', 'sourcePage', 'userEmail', 'userFullname'\n  private createCustomAttributesMap(attributes) {\n    var tempMap = []; \n\n    // perform a deep copy of the attributes item.\n    // it prevents the privacy leak issue\n    var temp = JSON.parse(JSON.stringify(attributes));\n    // remove 'client'\n    if (temp && temp['client']) delete temp['client'];\n    // remove 'departmentId'\n    if (temp && temp['departmentId']) delete temp['departmentId'];\n    // remove 'departmentName'\n    if (temp && temp['departmentName']) delete temp['departmentName'];\n    // remove 'sourcePage'\n    if (temp && temp['sourcePage']) delete temp['sourcePage'];\n    // remove 'userEmail'\n    if (temp && temp['userEmail']) delete temp['userEmail'];\n    // remove 'userFullname'\n    if (temp && temp['userFullname']) delete temp['userFullname'];\n\n    // add the remaining keys to the customAttributes array\n    for (var key in temp) {\n      if (temp.hasOwnProperty(key)) {\n        var val = temp[key];\n\n        // create the array item\n        var item = {\n          \"key\": key, \n          \"value\" : val\n        }\n\n        // add the item to the custom attributes array\n        tempMap.push(item);\n      }\n    }\n\n    this.customAttributes = tempMap;\n  }\n\n  /** */\n  subcribeChangeStatusUserSelected: any = (lastConnectionDate, online) => {\n    this.online = online;\n    this.lastConnectionDate = lastConnectionDate;\n  };\n\n\n  /**\n   * unsubscribe all subscribe events\n   */\n  closeDetailConversation: any = e => {\n    // console.log('UNSUBSCRIBE -> unsubescribeAll', this.events);\n    this.events.unsubscribe('onOpenInfoConversation', null);\n    this.events.unsubscribe('changeStatusUserSelected', null);\n    // this.events.unsubscribe('loadUserDetail:complete', null);\n    // this.events.unsubscribe('loadGroupDetail:complete', null);\n    this.events.unsubscribe('PopupConfirmation', null);\n\n    this.events.unsubscribe(this.uidSelected + '-details', null);\n    this.events.unsubscribe(this.uidSelected + '-listener', null);\n  }\n  // ----------------------------------------- //\n\n\n  /** selectUserDetail\n   * se uid conversazione esiste popolo:\n   * 1 - dettaglio current user\n   * 2 - dettaglio gruppo\n   * 3 - dettaglio user\n  */\n  populateDetail(){\n    console.log('InfoConversationPage::populateDetail');\n\n    // debugger;\n    const that = this;\n    if(!this.uidSelected){\n      return;\n    } else if(this.uidSelected === this.currentUserDetail.uid){\n      this.profileYourself = true;\n      this.userDetail = this.currentUserDetail;\n    } else if(this.channel_type === TYPE_GROUP) {\n      this.profileYourself = false;\n      this.members = [];\n      // //this.groupDetail = new GroupModel(this.uidSelected, 0, '', [], '', '');\n      // this.groupService.loadGroupDetail(this.currentUserDetail.uid, this.uidSelected)\n      // .then(function(snapshot) { \n      //   //this.groupDetail = new GroupModel(snapshot.key, 0, '', [], '', '');        \n      //   if (snapshot.val()){\n      //     that.setDetailGroup(snapshot);\n      //   }\n      // })\n      // .catch(function(err) {\n      //   console.log('Unable to get permission to notify.', err);\n      // });\n\n      // init conversation subscription (close btn)\n      this.events.subscribe(this.uidSelected + '-listener', this.subscribeConversationListener);\n      this.conversationsHandler.addConversationListener(this.currentUserDetail.uid, this.uidSelected);\n      \n      // init group details subscription\n      this.events.subscribe(this.uidSelected + '-details', this.subscribeGroupDetails);\n      this.groupService.loadGroupDetail(this.currentUserDetail.uid, this.uidSelected);\n\n    } else {\n      this.profileYourself = false;\n      //this.userDetail = new UserModel(this.uidSelected, '', '', '', '', '');\n      this.userService.loadUserDetail(this.uidSelected)\n      .then(function(snapshot) { \n        // console.log('snapshot:: ', snapshot.val());\n        if (snapshot.val()){\n          that.setDetailUser(snapshot);\n        }\n      })\n      .catch(function(err) {\n        console.error('Unable to get permission to notify.', err);\n      });\n    } \n  }\n\n  // subscriptio on conversation changes\n  subscribeConversationListener: any = (snapshot) => {\n    console.log('InfoConversationPage::subscribeConversationListener');\n\n    var that = this;\n\n    console.log(\"InfoConversationPage::subscribeConversationListener::snapshot:\", snapshot.ref.toString());\n\n    if (snapshot.val()) {\n      console.log(\"InfoConversationPage::subscribeConversationListener::snapshotVal:\", snapshot.val())\n      // conversation exists within conversation list\n      that.conversationEnabled = true;\n    } else {\n      // conversation not exists within conversation list\n      that.conversationEnabled = false;\n    }\n\n    console.log(\"InfoConversationPage::subscribeConversationListener::conversationEnabled:\", this.conversationEnabled);\n\n  }\n\n  // subscriptiuo on group changes\n  subscribeGroupDetails: any = (snapshot) => {\n    console.log('InfoConversationPage::subscribeGroupDetails');\n\n    var that = this;  \n    \n    // console.log(\"InfoConversationPage::subscribeGroupDetails::snapshot:\", snapshot.val())\n\n    if (snapshot.val()){\n      if (snapshot.val().attributes) {\n        // update the local attributes variable\n        that.attributes = snapshot.val().attributes; \n        that.updateAttributes(snapshot.val().attributes);\n      }\n      // render layout\n      that.setDetailGroup(snapshot);\n    }\n  }\n\n\n  setDetailUser(snapshot){\n    //let userDetail = new UserModel(snapshot.key, '', '', snapshot.key, '', '');        \n    const user = snapshot.val();\n    const fullname = user.firstname+\" \"+user.lastname;  \n    this.userDetail = new UserModel(\n      snapshot.key, \n      user.email, \n      user.firstname, \n      user.lastname, \n      fullname.trim(), \n      user.imageurl\n    );        \n  }\n\n\n  setDetailGroup(snapshot){\n    console.log(\"InfoConversationPage::setDetailGroup::snapshot\", snapshot.val());\n\n    const group = snapshot.val();\n    this.groupDetail = new GroupModel(\n      snapshot.key, \n      getFormatData(group.createdOn), \n      group.iconURL,\n      this.groupService.getUidMembers(group.members), \n      group.name, \n      group.owner\n    );    \n    if(!this.groupDetail.iconURL || this.groupDetail.iconURL === LABEL_NOICON){\n      this.groupDetail.iconURL = URL_NO_IMAGE;\n    }\n    this.members = this.getListMembers(this.groupDetail.members);\n    // console.log(this.groupDetail.members.length);\n    // console.log(\"InfoConversationPage::setDetailGroup::members\", this.members);\n\n\n    // console.log(\"setDetailGroup.groupDetail.members\", this.groupDetail.members);\n    // console.log(\"setDetailGroup.groupDetail.members.length\", this.members.length);\n\n    if (!isExistInArray(this.groupDetail.members, this.currentUserDetail.uid) || this.groupDetail.members.length <= 1 ){\n      this.isLoggedUserGroupMember = false;\n    } else {\n      this.isLoggedUserGroupMember = true;\n    }\n\n    // debugger\n  }\n\n\n\n  /** */\n  getListMembers(members): UserModel[]{ \n    // console.log(\"InfoConversationPage::getListMembers::members\", members);\n    let arrayMembers = [];\n    // var membersSize = 0;\n    let that = this;\n    members.forEach(member => {\n      // console.log(\"InfoConversationPage::getListMembers::member\", member);\n      let userDetail = new UserModel(member, '', '', member, '', URL_NO_IMAGE);\n      if (member.trim() !== '' && member.trim() !== SYSTEM) {\n        this.userService.getUserDetail(member)\n        .then(function(snapshot) { \n          // console.log(\"InfoConversationPage::getListMembers::snapshot\", snapshot);\n          if (snapshot.val()){\n            const user = snapshot.val();\n            const fullname = user.firstname+\" \"+user.lastname;  \n            let imageUrl =  URL_NO_IMAGE;\n            if(user.imageurl && user.imageurl !== LABEL_NOICON){\n              imageUrl = user.imageurl;\n            }\n            userDetail = new UserModel(\n              snapshot.key, \n              user.email, \n              user.firstname, \n              user.lastname, \n              fullname.trim(), \n              imageUrl\n            );  \n            // console.log(\"InfoConversationPage::getListMembers::userDetail\", userDetail);\n          }\n          // console.log(\"---------------> : \", member);\n          arrayMembers.push(userDetail);\n          // membersSize++;\n\n          that.initSubscriptions(userDetail.uid);\n          that.chatPresenceHandler.userIsOnline(userDetail.uid);\n          \n        })\n        .catch(function(err) {\n          console.error('Unable to get permission to notify.', err);\n        });\n      }\n    });\n\n    // arrayMembers.length = membersSize; // fix the array size\n    // console.log(\"InfoConversationPage::getListMembers::arrayMembers\", arrayMembers);\n    return arrayMembers;\n  }\n\n  /** */\n  arrayDepartments(departments): any[] {\n    // console.log('departments:::: ', departments);\n    let arrayDepartments = [];\n    const departmentsStr = JSON.stringify(departments);\n    JSON.parse(departmentsStr, (key, value) => {\n      arrayDepartments.push(value);\n    });\n    return arrayDepartments.slice(0, -1);\n  }\n\n\n\n\n  //// ACTIONS ////\n  /** */\n  leaveGroup(callback){\n    // var spinnerMessage;\n    // this.translate.get('LEAVING_GROUP_SPINNER_MSG').subscribe(\n    //   value => {\n    //     spinnerMessage = value;\n    //   }\n    // );\n\n    // this.loadingDialog = createLoading(this.loadingCtrl, spinnerMessage);\n    // this.loadingDialog.present();\n\n    const uidUser = this.chatManager.getLoggedUser().uid; //'U4HL3GWjBsd8zLX4Vva0s7W2FN92';\n    const uidGroup = this.uidSelected;//'support-group-L5Kb42X1MaM71fGgL66';\n    this.groupService.leaveAGroup(uidGroup, uidUser)\n    .subscribe(\n      response => {\n        // console.log('leaveGroup OK sender ::::', response);\n        this.dismissLoadingDialog();\n        callback('success');\n      },\n      errMsg => {\n        this.dismissLoadingDialog();\n        console.log('leaveGroup ERROR MESSAGE', errMsg);\n        callback('error');\n      },\n      () => {\n        // console.log('leaveGroup API ERROR NESSUNO');\n      }\n    );\n  }\n\n  /** */\n  closeGroup(callback) {\n    const uidGroup = this.uidSelected;//'support-group-L5Kb42X1MaM71fGgL66';\n    var that = this;\n    this.groupService.closeGroup(uidGroup, function(response, error) {\n      if (error) {\n        console.error('closeGroup ERROR MESSAGE', error);\n        callback('error', error);\n      }\n      else {\n        callback('success', response);\n      }\n    });\n    // this.groupService.closeGroup(uidGroup)\n    // .subscribe(\n    //   response => {\n    //     // console.log('OK closeGroup ::::', response);\n    //     // this.loading.dismiss();\n    //     // this.dismissLoading();\n    //     callback('success');\n    //   },\n    //   errMsg => {\n    //     // this.dismissLoading();\n    //     console.error('closeGroup ERROR MESSAGE', errMsg);\n    //     // this.loading.dismiss();\n    //     callback('error');\n    //   },\n    //   () => {\n    //     // console.log('closeGroup API ERROR NESSUNO');\n    //   }\n    // );\n  }\n\n  /** */\n  setVideoChat(){\n    // setto url \n    const url = this.URL_VIDEO_CHAT+'?groupId='+this.groupDetail.uid+'&popup=true';\n    this.events.publish('openVideoChat', url);\n  }\n\n  getUrlCreaTicket(){\n    // setto url \n    return URL_TICKET_CHAT;\n    //const url = URL_TICKET_CHAT + '&popup=true';\n    //this.events.publish('openVideoChat', url);\n  }\n\n\n  /**\n   * \n   * @param action \n   */\n  openPopupConfirmation(action){\n    // console.log(\"openPopupConfirmation\");\n\n    //debugger;\n    let alertTitle = '';\n    let alertMessage = '';\n    this.translate.get('ALERT_TITLE').subscribe(\n      value => {\n        alertTitle = value;\n      }\n    )\n\n    var onlyOkButton = false;\n\n    if(action === 'leave'){\n      this.translate.get('LEAVE_ALERT_MSG').subscribe(\n        value => {\n          alertMessage = value;\n        }\n      )\n      onlyOkButton = false;\n    } else if (action === 'group-left') {\n      this.translate.get('CONVERSATION_LEFT_ALERT_MSG').subscribe(\n        value => {\n          alertMessage = value;\n        }\n      )\n      onlyOkButton = true;\n    } else if (action === 'cannot-leave-group') {\n      this.translate.get('CANNOT_LEAVE_GROUP_ALERT_MSG').subscribe(\n        value => {\n          alertMessage = value;\n        }\n      )\n      onlyOkButton = false;\n    } else if (action === 'close') {\n      this.translate.get('CLOSE_ALERT_MSG').subscribe(\n        value => {\n          alertMessage = value;\n        }\n      )\n      onlyOkButton = false;\n    }\n\n    // console.log(\"onlyOkButton\", onlyOkButton);\n\n    this.confirmDialog = createConfirm(this.translate, this.alertCtrl, this.events, alertTitle, alertMessage, action, onlyOkButton);\n    this.confirmDialog.present();\n  }\n\n  /** */\n  isSupportGroup(){\n    //debugger;\n    return this.groupService.isSupportGroup(this.groupDetail.uid);\n    // let uid = this.groupDetail.uid;\n    // if(uid.indexOf(TYPE_SUPPORT_GROUP) === 0 ){\n    //   return true;\n    // }\n    // return false;\n  }\n\n  private createLoadingDialog(message) {\n    this.loadingDialog = createLoading(this.loadingCtrl, message);\n    this.loadingDialog.present();\n  }\n\n  private dismissLoadingDialog() {\n    if (this.loadingDialog) {\n      this.loadingDialog.dismiss();\n      this.loadingDialog = null;\n    }\n  }\n\n  private dismissConfirmDialog() {\n    if (this.confirmDialog) {\n      this.confirmDialog.dismiss();\n      this.confirmDialog = null;\n    }\n  }\n\n  private closeConversation(conversationId) {\n    // console.log(\"InfoConversationPage::closeConversation::conversationId\", conversationId);\n\n    var isSupportConversation = conversationId.startsWith(\"support-group\");\n\n    if (!isSupportConversation) {\n      // console.log(\"InfoConversationPage::closeConversation:: is not a support group\");\n\n      this.deleteConversation(conversationId, function (result, data) {\n        if (result === 'success') {\n          // console.log(\"InfoConversationPage::closeConversation::deleteConversation::response\", data);\n        } else if (result === 'error') {\n          console.log(\"InfoConversationPage::closeConversation::deleteConversation::error\", data);\n        }\n      });\n\n      // https://github.com/chat21/chat21-cloud-functions/blob/master/docs/api.md#delete-a-conversation\n    } else {\n      // console.log(\"InfoConversationPage::closeConversation::closeConversation:: is a support group\");\n\n      // the conversationId is:\n      // - the recipientId if it is a direct conversation;\n      // - the groupId if it is a group conversation;\n      // the groupId can reference:\n      // - a normal group;\n      // - a support  group if it starts with \"support-group\"\n      this.closeSupportGroup(conversationId, function (result, data) {\n        if (result === 'success') {\n          // console.log(\"InfoConversationPage::closeConversation::closeSupportGroup::response\", data);\n        } else if (result === 'error') {\n          console.log(\"InfoConversationPage::closeConversation::closeSupportGroup::error\", data);\n        }\n      });\n    }\n  }\n\n  // close the support group\n  // more details availables at \n  // https://github.com/chat21/chat21-cloud-functions/blob/master/docs/api.md#close-support-group\n  private closeSupportGroup(groupId, callback) {\n\n    var that = this;\n\n    // BEGIN -  REMOVE FROM LOCAL MEMORY \n    // console.log(\"performClosingConversation::conversations::BEFORE\", JSON.stringify(this.conversationsHandler.conversations) )\n    this.conversationsHandler.removeByUid(groupId); // remove the item \n    // this.conversations = this.conversationsHandler.conversations; // update conversations\n    // console.log(\"performClosingConversation::conversations::AFTER\", JSON.stringify(this.conversationsHandler.conversations))\n    // END -  REMOVE FROM LOCAL MEMORY \n\n    // BEGIN - REMOVE FROM REMOTE \n    //set the conversation from the isConversationClosingMap that is waiting to be closed\n    this.tiledeskConversationProvider.setClosingConversation(groupId, true);\n\n    this.groupService.closeGroup(groupId, function(response, error) {\n      if (error) {\n        // the conversation closing failed: restore the conversation with \n        // conversationId status to false within the isConversationClosingMap\n        that.tiledeskConversationProvider.setClosingConversation(groupId, false);\n        callback('error', error);\n      }\n      else {\n        callback('success', response);\n      }\n    });\n\n    // this.groupService.closeGroup(groupId)\n    //   .subscribe(response => {\n    //     callback('success', response);\n    //   }, errMsg => {\n    //     // the conversation closing failed: restore the conversation with \n    //     // conversationId status to false within the isConversationClosingMap\n    //     that.tiledeskConversationProvider.setClosingConversation(groupId, false);\n\n    //     callback('error', errMsg);\n    //   }, () => {\n    //     // console.log(\"InfoConversationPage::closeSupportGroup::completition\");\n    //   });\n    // // END - REMOVE FROM REMOTE \n\n    // when a conversations is closed shows a placeholder background\n    if (groupId === that.uidSelected) {\n      that.navProxy.pushDetail(PlaceholderPage, {});\n    }\n  }\n\n  // delete a conversation form the personal timeline\n  // more details availables at \n  // https://github.com/chat21/chat21-cloud-functions/blob/master/docs/api.md#delete-a-conversation\n  private deleteConversation(conversationId, callback) {\n    // console.log(\"InfoConversationPage::deleteConversation::conversationId\", conversationId);\n\n    var that = this;\n\n    // END - REMOVE FROM LOCAL MEMORY \n    // console.log(\"deleteConversation::conversations::BEFORE\", JSON.stringify(this.conversationsHandler.conversations))\n    this.conversationsHandler.removeByUid(conversationId); // remove the item \n    // this.conversations = this.conversationsHandler.conversations; // update conversations\n    // console.log(\"deleteConversation::conversations::AFTER\", JSON.stringify(this.conversationsHandler.conversations))\n    // END - REMOVE FROM LOCAL MEMORY \n\n    // BEGIN - REMOVE FROM REMOTE \n    //set the conversation from the isConversationClosingMap that is waiting to be closed\n    this.tiledeskConversationProvider.setClosingConversation(conversationId, true);\n\n    this.tiledeskConversationProvider.deleteConversation(conversationId, function(response, error) {\n      if (error) {\n        that.tiledeskConversationProvider.setClosingConversation(conversationId, false);\n        callback('error', error);\n      }\n      else {\n        callback('success', response);\n      }\n    });\n\n    // this.tiledeskConversationProvider.deleteConversation(conversationId)\n    //   .subscribe(response => {\n    //     callback('success', response);\n    //   }, errMsg => {\n    //     // the conversation closing failed: restore the conversation with\n    //     // conversationId status to false within the isConversationClosingMap\n    //     that.tiledeskConversationProvider.setClosingConversation(conversationId, false);\n    //     callback('error', errMsg);\n    //   }, () => {\n    //     // console.log(\"InfoConversationPage::deleteConversation::completition\");\n    //   });\n    // // END - REMOVE FROM REMOTE \n\n    // when a conversations is closed shows a placeholder background\n    if (conversationId === that.uidSelected) {\n      that.navProxy.pushDetail(PlaceholderPage, {});\n    }\n  }\n\n   private existsInArray(array: ConversationModel[], uid) : boolean{\n     var index = array.map(function (o) { return o.uid; }).indexOf(uid);\n\n    //  console.log('echouid', uid);\n    //  console.log('echoindex', index);\n\n     return index > -1;\n\n    }\n\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/info-conversation/info-conversation.ts","export class GroupModel{\n    constructor(\n        public uid: string,\n        public createdOn: any,\n        public iconURL: string,\n        public members: any[],\n        public name: string, \n        public owner: string\n    ){ }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/group.ts","import { Component } from '@angular/core';\nimport { Events } from 'ionic-angular';\nimport { MessageModel } from '../../models/message';\n\nimport { ChatConversationHandler } from '../../providers/chat-conversation-handler';\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\n\nimport { searchIndexInArrayForUid, getSizeImg } from '../../utils/utils';\n\n/**\n * Generated class for the InfoMessagePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-info-message',\n  templateUrl: 'info-message.html',\n})\nexport class InfoMessagePage {\n\n  public message: MessageModel;\n\n  constructor(\n    public events: Events,\n    public conversationHandler: ChatConversationHandler,\n    public chatManager: ChatManager\n  ) {\n    this.initialize();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad InfoMessagePage');\n  }\n\n  initialize() {\n    console.log('initialize InfoMessagePage');\n    this.events.subscribe('openInfoMessage', this.openInfoMessage);\n    this.events.subscribe('closeInfoMessage', this.openInfoMessage);\n  }\n\n  openInfoMessage: any = (message) => {\n    this.message = message;\n    console.log('**************** OPEN MESSAGE **************', message);\n  }\n\n\n  //// START FUNZIONI RICHIAMATE DA HTML ////\n  /**\n   * Check if the user is the sender of the message.\n   * @param message \n   */\n  isSender(message) {\n    const currentUser = this.chatManager.getLoggedUser();\n    return this.conversationHandler.isSender(message, currentUser);\n  }\n\n  getSizeImg(message): any {\n    return getSizeImg(message, 280);\n  }\n\n  // setUrlString(text, name): any {\n  //   return name;\n  //   // if(text) {\n  //   //   return setUrlString(text, name);\n  //   // } else {\n  //   //   return name;\n  //   // }\n  // }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/info-message/info-message.ts","import {ElementRef, HostListener, Directive, OnInit} from '@angular/core';\nimport { MAX_HEIGHT_TEXTAREA, MIN_HEIGHT_TEXTAREA } from '../../utils/constants';\n\n/**\n * Generated class for the AutosizeDirective directive.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/DirectiveMetadata-class.html\n * for more info on Angular Directives.\n */\n\n@Directive({\n  selector: 'ion-textarea[autosize]'\n})\n\nexport class AutosizeDirective implements OnInit {\n  // @HostListener('blur',['$event.target']) \n  // onBlur(textArea:HTMLTextAreaElement){\n  //   //console.log('blur XXXXXXXXXXXXXXXXX');\n  //   textArea = this.element.nativeElement.getElementsByTagName('textarea')[0];\n  //   console.log('************ blur VALUE **************', textArea);\n  //   // if ( textArea.value ){\n  //   //   this.reset();\n  //   // } \n  // }\n  @HostListener('input', ['$event','$event.rangeParent','$event.target','$event.data', '$event.inputType'] )\n  onInput(event, rangeParent, textArea:HTMLTextAreaElement, data:string, inputType:string):void { //textArea:HTMLTextAreaElement\n    //let messageString = textArea.attributes.getNamedItem('ng-reflect-model').value.trim();\n    let messageString = this.element.nativeElement.getElementsByTagName('textarea')[0].value;\n    // console.log('************ $messageString2', messageString.trim());\n    if(messageString == ''){\n      this.element.nativeElement.getElementsByTagName('textarea')[0].value = '';\n      //textArea.attributes.getNamedItem('ng-reflect-model').value = '';\n      // console.log('************ messageString ----->',this.element.nativeElement.getElementsByTagName('textarea')[0].value,'<-----');\n      return;\n    }    \n    if (event.inputType == \"insertLineBreak\" && messageString == null){\n      // console.log('************ insertLineBreak');\n      return;\n    }\n    // se messageString contiene \\n non dimensiono!!!\n    var match = /\\r|\\n/.exec(messageString);\n    if (!match) {\n      this.adjust();\n    }\n    \n  }\n  \n  constructor(public element:ElementRef) {\n  }\n\n  ngOnInit():void {\n    setTimeout(() => this.adjust(), 0);\n  }\n\n  adjust():void {\n    let textArea = this.element.nativeElement.getElementsByTagName('textarea')[0];\n    textArea.style.overflow = 'hidden';\n    textArea.style.height = 'auto';  \n    // console.log('************ adjust **************', textArea.value);\n    if (textArea.scrollHeight <=  MIN_HEIGHT_TEXTAREA ){\n      // console.log('************ OK H **************');\n      return;\n    }\n    else if (textArea.scrollHeight <=  MAX_HEIGHT_TEXTAREA){\n      // console.log('************ SET NW H **************');\n      textArea.style.height = textArea.scrollHeight + \"px\";\n    }\n    else {\n      // console.log('************ SET H MAX **************');\n      textArea.style.height = MAX_HEIGHT_TEXTAREA + \"px\";\n    }\n  }\n\n  reset():void{\n    //console.log('************ SET H MIN **************');\n    let textArea = this.element.nativeElement.getElementsByTagName('textarea')[0];\n    // console.log('************ SET H MIN **************', textArea.value);\n    textArea.value = \"\";\n    textArea.style.height = MIN_HEIGHT_TEXTAREA + \"px\";\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/autosize/autosize.ts","import { Component } from '@angular/core';\nimport {\n    IonicPage,\n    NavController,\n    NavParams \n} from 'ionic-angular';\n\n@IonicPage()\n@Component({\n    selector: 'page-placeholder',\n    templateUrl: 'placeholder.html',\n})\nexport class PlaceholderPage {\n    constructor(\n        public navCtrl: NavController, \n        public navParams: NavParams\n    ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/placeholder/placeholder.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Events } from 'ionic-angular';\n\n// firebase\nimport * as firebase from 'firebase/app';\n\n// services\nimport { ChatManager } from './chat-manager/chat-manager';\n\n// utils\nimport { setLastDate } from '../utils/utils';\n\nimport { TranslateService } from '@ngx-translate/core';\n\n//import { ApplicationContext } from './application-context/application-context';\n\n/*\n  Generated class for the AuthService provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\nexport class ChatPresenceHandler {\n  public tenant: string;\n  public urlNodeFirebase: string;\n  //public deviceConnectionRef;\n  public myConnectionsRef; //: firebase.database.Reference;\n  public lastOnlineRef; //: firebase.database.Reference;\n\n  constructor(\n    public events: Events,\n    public chatManager: ChatManager,\n    public translate: TranslateService\n  ) {\n    this.tenant = chatManager.getTenant();\n    this.urlNodeFirebase = '/apps/'+this.tenant;\n  }\n\n  /**\n   * controlla se esiste una connessione per l'utente analizzato,\n   * verificando se esiste un nodo in presence/uid/connections\n   * mi sottosrivo al nodo\n   * se non esiste pubblico utente offline \n   * se esiste pubblico utente online \n   * @param userid \n   */\n  userIsOnline(userid){\n    //this.lastOnlineForUser(userid);\n    const that = this;\n    let myConnectionsRefURL = this.urlNodeFirebase+\"/presence/\"+userid+\"/connections\";\n    console.log('-----> REF: ',myConnectionsRefURL);\n    const connectionsRef = firebase.database().ref().child(myConnectionsRefURL);\n    connectionsRef.on(\"value\", (child) => {\n      if(child.val()){\n        that.events.publish('statusUser:online-'+userid, userid,'online');\n      }\n      else {\n        that.events.publish('statusUser:offline-'+userid, userid,'offline');\n      }\n    })\n  }\n  /**\n   * mi sottoscrivo al nodo presence/uid/lastOnline\n   * e recupero la data dell'ultimo stato online\n   * pubblico lastConnectionDate \n   * @param userid \n   */\n  lastOnlineForUser(userid){\n    const that = this;\n    let lastOnlineRefURL = this.urlNodeFirebase+\"/presence/\"+userid+\"/lastOnline\";\n    const lastOnlineRef = firebase.database().ref().child(lastOnlineRefURL);\n    lastOnlineRef.on(\"value\", (child) => {\n      if(child.val()){\n        const lastConnectionDate = that.getTimeLastConnection(child.val());\n        that.events.publish('lastConnectionDate-'+userid, userid,lastConnectionDate);\n      }\n    });\n  }\n\n  /**\n   * calcolo tempo trascorso tra ora e timestamp passato\n   * @param timestamp \n   */\n  getTimeLastConnection(timestamp:string){\n    //let timestampNumber = parseInt(timestamp)/1000;\n    let time = setLastDate(this.translate, timestamp);\n    return time;\n  }\n\n  /**\n   * recupero la reference di lastOnline del currentUser\n   * usata in setupMyPresence\n   * @param userid \n   */\n  lastOnlineRefForUser(userid){\n    let lastOnlineRefURL = this.urlNodeFirebase+\"/presence/\"+userid+\"/lastOnline\";\n    const lastOnlineRef = firebase.database().ref().child(lastOnlineRefURL);\n    return lastOnlineRef;\n  }\n\n  /**\n   * recupero la reference di connections (online/offline) del currentUser\n   * usata in setupMyPresence\n   * @param userid \n   */\n  onlineRefForUser(userid){\n    let myConnectionsRefURL = this.urlNodeFirebase+\"/presence/\"+userid+\"/connections\";\n    const connectionsRef = firebase.database().ref().child(myConnectionsRefURL);\n    return connectionsRef;\n  }\n\n  /**\n   * 1 - imposto reference online/offline\n   * 2 - imposto reference lastConnection\n   * 3 - mi sincronizzo con /.info/connected\n   * 4 - se il valore esiste l'utente è online\n   * 5 - aggiungo nodo a connection (true)\n   * 6 - aggiungo job su onDisconnect di deviceConnectionRef che rimuove nodo connection \n   * 7 - aggiungo job su onDisconnect di lastOnlineRef che imposta timestamp\n   * 8 - salvo reference connected nel singlelton !!!!! DA FARE\n   * @param userid \n   */\n  setupMyPresence(userid){\n    let that = this;\n    this.myConnectionsRef = this.onlineRefForUser(userid);\n    this.lastOnlineRef = this.lastOnlineRefForUser(userid);\n    let connectedRefURL = \"/.info/connected\";\n    let conn = firebase.database().ref(connectedRefURL);\n    conn.on('value', function(dataSnapshot) {\n      //console.log(\"KEY: \",dataSnapshot,that.deviceConnectionRef);\n      if(dataSnapshot.val()){\n        console.log(\"self.deviceConnectionRef: \", that.myConnectionsRef);\n        //if (!that.myConnectionsRef || that.myConnectionsRef==='undefined') {\n        if (that.myConnectionsRef) {\n          //this.deviceConnectionRef = myConnectionsRef.set(true);\n          let conection = true;\n          //that.deviceConnectionRef = \n          that.myConnectionsRef.push(conection);\n          //!!! quando faccio logout devo disconnettermi\n          that.myConnectionsRef.onDisconnect().remove();\n          // when I disconnect, update the last time I was seen online\n          let now: Date = new Date();\n          let timestamp = now.valueOf();\n          that.lastOnlineRef.onDisconnect().set(timestamp);\n        } else {\n          console.log(\"This is an error. self.deviceConnectionRef already set. Cannot be set again.\");\n        }\n      }\n    });\n  }\n    \n  /**\n   * rimuovo la references su lastOnline\n   * rimuovo la references su connection\n   */\n  goOffline() {\n    console.log(\"goOffline.\", this.myConnectionsRef)\n    this.removeConnectionReference();\n    this.removeLastOnlineReference();\n  }\n\n  removeConnectionReference(){\n    if(this.myConnectionsRef){\n      this.myConnectionsRef.off();\n      console.log(\"goOffline 1\", this.myConnectionsRef)\n      this.myConnectionsRef.remove();\n      console.log(\"goOffline 2\", this.myConnectionsRef)\n    }\n    this.myConnectionsRef = null;\n  }\n\n  removeLastOnlineReference(){\n    if(this.lastOnlineRef){\n      this.lastOnlineRef.off();\n      this.lastOnlineRef.remove();\n    }\n    this.lastOnlineRef = null;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chat-presence-handler.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Events } from 'ionic-angular';\n// firebase\nimport * as firebase from 'firebase/app';\n// models\nimport { MessageModel } from '../models/message';\nimport { UserModel } from '../models/user';\n// services\n//import { ChatManager } from './chat-manager/chat-manager';\n// utils\nimport { TYPE_MSG_IMAGE, MSG_STATUS_RECEIVED, CLIENT_BROWSER } from '../utils/constants';\nimport { compareValues, urlify, searchIndexInArrayForUid, setHeaderDate, conversationMessagesRef } from '../utils/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject } from '../../node_modules/rxjs/BehaviorSubject';\n\n\n//import { TranslateModule } from '@ngx-translate/core';\n//import { TranslateService } from '@ngx-translate/core';\n//import { CustomTranslateService } from './translate-service';\n\n\n@Injectable()\nexport class ChatConversationHandler {\n  private urlNodeFirebase: string;\n  private recipientId: string;\n  private recipientFullname: string;\n  private tenant: string;\n  private loggedUser: UserModel;\n  private senderId: string;\n  public conversationWith: string;\n  public messages: any[];\n  public messagesRef: firebase.database.Query;\n  public listSubsriptions: any[];\n  public attributes: any;\n  public CLIENT_BROWSER: string;\n  //public events: Events;\n\n  obsAdded: BehaviorSubject<MessageModel>;\n\n  constructor(\n    public events: Events,\n    public translate: TranslateService\n  ) {\n    // console.log(\"CONSTRUCTOR ChatConversationHandlerProvider\");\n    console.log(\"CONSTRUCTOR ChatConversationHandlerProvider\", translate);\n    //this.tenant = this.chatManager.getTenant();\n    //this.loggedUser = this.chatManager.getLoggedUser();\n    //this.events = new Events();\n    this.listSubsriptions = [];\n    this.CLIENT_BROWSER = navigator.userAgent;\n    this.obsAdded = new BehaviorSubject<MessageModel>(null);\n  }\n  /**\n   * inizializzo conversation handler\n   * @param recipientId \n   * @param recipientFullName \n   */\n  initWithRecipient(recipientId,recipientFullName, loggedUser, tenant) {\n    this.loggedUser = loggedUser;\n    this.tenant = tenant;\n    this.recipientId = recipientId;\n    this.recipientFullname = recipientFullName;\n    this.senderId = this.loggedUser.uid;\n    this.conversationWith = recipientId;\n    this.messages = [];\n    this.attributes = this.setAttributes();\n    \n  }\n\n  setAttributes(): any {\n    let attributes: any = JSON.parse(sessionStorage.getItem('attributes'));\n    if (!attributes || attributes === 'undefined') {\n        attributes = {\n            client: this.CLIENT_BROWSER,\n            sourcePage: location.href,\n            userEmail: this.loggedUser.email,\n            userFullname: this.loggedUser.fullname\n        };\n        console.log('>>>>>>>>>>>>>> setAttributes: ', JSON.stringify(attributes));\n        sessionStorage.setItem('attributes', JSON.stringify(attributes));\n    }\n    return attributes;\n}\n  /**\n   * mi connetto al nodo messages\n   * recupero gli ultimi 100 messaggi\n   * creo la reference\n   * mi sottoscrivo a change, removed, added\n   */\n  connect() {\n    var lastDate: string = \"\";\n    const that = this;\n    this.urlNodeFirebase = conversationMessagesRef(this.tenant, this.loggedUser.uid);\n    this.urlNodeFirebase = this.urlNodeFirebase+this.conversationWith;\n    const firebaseMessages = firebase.database().ref(this.urlNodeFirebase);\n    this.messagesRef = firebaseMessages.orderByChild('timestamp').limitToLast(100);\n    console.log(\"this.translate *****\", this.translate);\n\n    //// AGGIUNTA MESSAGGIO ////\n    this.messagesRef.on(\"child_added\", function (childSnapshot) {\n      \n      const itemMsg = childSnapshot.val();\n      // imposto il giorno del messaggio per visualizzare o nascondere l'header data\n      console.log(\"that.translate *****\", that.translate);\n      let calcolaData = setHeaderDate(that.translate, itemMsg['timestamp'], lastDate);\n      if (calcolaData != null) {\n        lastDate = calcolaData;\n      }\n      // controllo fatto per i gruppi da rifattorizzare\n      (!itemMsg.sender_fullname || itemMsg.sender_fullname == 'undefined') ? itemMsg.sender_fullname = itemMsg.sender : itemMsg.sender_fullname;\n      // bonifico messaggio da url\n      let messageText = itemMsg['text'];\n      if (itemMsg['type'] == 'text') {\n        //messageText = urlify(itemMsg['text']);\n      }\n\n      if (itemMsg['metadata']) {\n        const index = searchIndexInArrayForUid(that.messages, itemMsg['metadata'].uid);\n        if (index > -1) {\n          that.messages.splice(index, 1);\n        }\n      }\n\n      // creo oggetto messaggio e lo aggiungo all'array dei messaggi\n      const msg = new MessageModel(childSnapshot.key, itemMsg['language'], itemMsg['recipient'], itemMsg['recipient_fullname'], itemMsg['sender'], itemMsg['sender_fullname'], itemMsg['status'], itemMsg['metadata'], messageText, itemMsg['timestamp'], calcolaData, itemMsg['type'], itemMsg['attributes'], itemMsg['channel_type']);\n      console.log(\"child_added *****\", itemMsg['timestamp'], that.messages, msg);\n\n      if (msg.attributes && msg.attributes.subtype && (msg.attributes.subtype === 'info' || msg.attributes.subtype === 'info/support')) {\n        that.translateInfoSupportMessages(msg);\n      }\n\n      that.messages.push(msg);\n      that.messages.sort(compareValues('timestamp', 'asc'));\n\n      // aggiorno stato messaggio\n      // questo stato indica che è stato consegnato al client e NON che è stato letto\n      that.setStatusMessage(childSnapshot, that.conversationWith);\n\n      console.log(\"msg.sender ***** \" + msg.sender + \" that.loggedUser.uid:::\" + that.loggedUser.uid);\n      if (msg.sender === that.loggedUser.uid) {\n        that.events.publish('doScroll');\n      }\n\n      that.obsAdded.next(msg);\n      // pubblico messaggio - sottoscritto in dettaglio conversazione\n      //console.log(\"publish:: \", 'listMessages:added-'+that.conversationWith, that.events);\n      //that.events.publish('listMessages:added-'+that.conversationWith, that.conversationWith, msg);\n    })\n\n    //// SUBSRIBE CHANGE ////\n    this.messagesRef.on(\"child_changed\", function(childSnapshot) {\n      const itemMsg = childSnapshot.val();\n      // imposto il giorno del messaggio per visualizzare o nascondere l'header data\n      const calcolaData = setHeaderDate(that.translate, itemMsg['timestamp'], lastDate);\n      if (calcolaData != null) {\n        lastDate = calcolaData;\n      }\n      // controllo fatto per i gruppi da rifattorizzare\n      (!itemMsg.sender_fullname || itemMsg.sender_fullname == 'undefined') ? itemMsg.sender_fullname = itemMsg.sender : itemMsg.sender_fullname;\n      // bonifico messaggio da url\n      let messageText = itemMsg['text'];\n      if (itemMsg['type'] == 'text') {\n        //messageText = urlify(itemMsg['text']);\n      }\n      // creo oggetto messaggio e lo aggiungo all'array dei messaggi\n      const msg = new MessageModel(childSnapshot.key, itemMsg['language'], itemMsg['recipient'], itemMsg['recipient_fullname'], itemMsg['sender'], itemMsg['sender_fullname'], itemMsg['status'], itemMsg['metadata'], messageText, itemMsg['timestamp'], calcolaData, itemMsg['type'], itemMsg['attributes'], itemMsg['channel_type']);\n      const index = searchIndexInArrayForUid(that.messages, childSnapshot.key);\n\n      if (msg.attributes && msg.attributes.subtype && (msg.attributes.subtype === 'info' || msg.attributes.subtype === 'info/support')) {\n        that.translateInfoSupportMessages(msg);\n      }\n      \n      that.messages.splice(index, 1, msg);\n      // aggiorno stato messaggio\n      // questo stato indica che è stato consegnato al client e NON che è stato letto\n      that.setStatusMessage(childSnapshot, that.conversationWith);\n\n      if (that.isSender(msg, that.loggedUser)) {\n        that.events.publish('doScroll');\n      }\n      // pubblico messaggio - sottoscritto in dettaglio conversazione\n      //that.events.publish('listMessages:changed-'+that.conversationWith, that.conversationWith, that.messages);\n      //that.events.publish('listMessages:changed-'+that.conversationWith, that.conversationWith, msg);\n    });\n\n    this.messagesRef.on(\"child_removed\", function(childSnapshot) {\n      // al momento non previsto!!!\n      const index = searchIndexInArrayForUid(that.messages, childSnapshot.key);\n      // controllo superfluo sarà sempre maggiore\n      if (index > -1) {\n        that.messages.splice(index, 1);\n        //this.events.publish('conversations:update-'+that.conversationWith, that.messages);\n      }\n\n      // if(!this.isSender(msg)){\n      //   that.events.publish('doScroll');\n      // }\n    });\n  } \n   \n  private translateInfoSupportMessages(message: MessageModel) {\n    // console.log(\"ChatConversationHandler::translateInfoSupportMessages::message:\", message);\n\n    // check if the message has attributes, attributes.subtype and these values\n    if (message.attributes && message.attributes.subtype && (message.attributes.subtype === 'info' || message.attributes.subtype === 'info/support')) {\n      \n      // check if the message attributes has parameters and it is of the \"MEMBER_JOINED_GROUP\" type\n      // [BEGIN MEMBER_JOINED_GROUP]\n      if ((message.attributes.messagelabel && message.attributes.messagelabel.parameters && message.attributes.messagelabel.key === 'MEMBER_JOINED_GROUP')) {\n        \n        var subject;\n        var verb;\n        var complement;\n        \n        if (message.attributes.messagelabel.parameters.member_id === this.loggedUser.uid) {\n          // logged user has been added to the group\n          subject = this.translate.get('INFO_SUPPORT_USER_ADDED_SUBJECT')['value'];\n          verb = this.translate.get('INFO_SUPPORT_USER_ADDED_YOU_VERB')['value'];\n          complement = this.translate.get('INFO_SUPPORT_USER_ADDED_COMPLEMENT')['value'];\n        } else {\n          if (message.attributes.messagelabel.parameters.fullname) {\n            // other user has been added to the group (and he has a fullname)\n            subject = message.attributes.messagelabel.parameters.fullname;\n            verb = this.translate.get('INFO_SUPPORT_USER_ADDED_VERB')['value'];\n            complement = this.translate.get('INFO_SUPPORT_USER_ADDED_COMPLEMENT')['value'];\n          } else {\n            // other user has been added to the group (and he has not a fullname, so use hes useruid)\n            subject = message.attributes.messagelabel.parameters.member_id;\n            verb = this.translate.get('INFO_SUPPORT_USER_ADDED_VERB')['value'];\n            complement = this.translate.get('INFO_SUPPORT_USER_ADDED_COMPLEMENT')['value'];\n          }\n        }\n\n        // perform translation\n        this.translate.get('INFO_SUPPORT_USER_ADDED_MESSAGE', {\n          'subject': subject,\n          'verb': verb,\n          'complement': complement\n        }).subscribe((res: string) => {\n          message.text = res;\n        });\n\n      } // [END MEMBER_JOINED_GROUP]\n\n      // [END CHAT_REOPENED]\n      else if ((message.attributes.messagelabel && message.attributes.messagelabel.key === 'CHAT_REOPENED')) {\n        message.text = this.translate.get('INFO_SUPPORT_CHAT_REOPENED')['value'];\n      }\n      // [END CHAT_REOPENED]\n\n      // [END CHAT_CLOSED]\n      else if ((message.attributes.messagelabel && message.attributes.messagelabel.key === 'CHAT_CLOSED')) {\n        message.text = this.translate.get('INFO_SUPPORT_CHAT_CLOSED')['value'];\n      }\n      // [END CHAT_CLOSED]\n    }\n   \n\n  }\n\n\n  /**\n   * arriorno lo stato del messaggio\n   * questo stato indica che è stato consegnato al client e NON che è stato letto\n   * se il messaggio NON è stato inviato da loggedUser AGGIORNO stato a 200\n   * @param item \n   * @param conversationWith \n   */\n  setStatusMessage(item,conversationWith){\n    if(item.val()['status'] < MSG_STATUS_RECEIVED){\n      //const tenant = this.chatManager.getTenant();\n      //const loggedUser = this.chatManager.getLoggedUser();\n      let msg = item.val();\n      if (msg.sender != this.loggedUser.uid && msg.status < MSG_STATUS_RECEIVED){\n        const urlNodeMessagesUpdate  = '/apps/'+this.tenant+'/users/'+this.loggedUser.uid+'/messages/'+conversationWith+\"/\"+item.key;\n        console.log(\"AGGIORNO STATO MESSAGGIO\", urlNodeMessagesUpdate);\n        firebase.database().ref(urlNodeMessagesUpdate).update({ status: MSG_STATUS_RECEIVED });\n      }\n    }\n  }\n  /**\n   * controllo se il messaggio è stato inviato da loggerUser\n   * richiamato dalla pagina elenco messaggi della conversazione\n   * @param message \n   */\n  isSender(message, currentUser) {\n    //const currentUser = this.loggedUser;//this.chatManager.getLoggedUser();\n    //console.log(\"isSender::::: \", message.sender, currentUser.uid);\n    if (currentUser){\n      if (message.sender == currentUser.uid) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * bonifico url in testo messaggio\n   * recupero time attuale\n   * recupero lingua app\n   * recupero sender_fullname e recipient_fullname\n   * aggiungo messaggio alla reference\n   * @param msg \n   * @param conversationWith \n   * @param conversationWithDetailFullname \n   */\n  sendMessage(msg, type, metadata, conversationWith, conversationWithDetailFullname, channel_type) {\n    const that = this;\n    (!channel_type || channel_type == 'undefined')?channel_type='direct':channel_type;\n    console.log('messages: ',  this.messages);\n    console.log(\"SEND MESSAGE: \", msg, channel_type);\n    // console.log(\"messageTextArea:: \",this.messageTextArea['_elementRef'].nativeElement.getElementsByTagName('textarea')[0].style);\n    // const messageString = urlify(msg);\n    const now: Date = new Date();\n    const timestamp = now.valueOf();\n    const language = document.documentElement.lang;\n    const sender_fullname = this.loggedUser.fullname;\n    const recipient_fullname = conversationWithDetailFullname;\n    const dateSendingMessage = setHeaderDate(this.translate, timestamp);\n    let firebaseMessagesCustomUid = firebase.database().ref(this.urlNodeFirebase);\n    const message = new MessageModel(\n      '',\n      language,\n      conversationWith,\n      recipient_fullname,\n      this.loggedUser.uid,\n      sender_fullname,\n      '',\n      metadata,\n      msg,\n      timestamp,\n      dateSendingMessage,\n      type,\n      this.attributes,\n      channel_type\n    ); \n\n    console.log('messaggio **************',message);\n    //firebaseMessages.push(message);\n    const messageRef = firebaseMessagesCustomUid.push();\n    const key = messageRef.key;\n    message.uid = key;\n    console.log('messageRef: ', messageRef, key);\n    messageRef.set(message, function( error ){\n      // Callback comes here\n      if (error) {\n        // cambio lo stato in rosso: invio nn riuscito!!!\n        message.status = '-100';\n        console.log('ERRORE', error);\n      } else {\n        //that.checkWritingMessages();\n        message.status = '150';\n        console.log('OK MSG INVIATO CON SUCCESSO AL SERVER', message);\n      }\n      console.log('****** changed *****', that.messages);\n    });\n\n  }\n\n\n  updateMetadataMessage(uid, metadata){\n    metadata.status = true;\n    const message = {\n      metadata: metadata\n    };\n    let firebaseMessages = firebase.database().ref(this.urlNodeFirebase+uid);\n    firebaseMessages.set(message);\n  }\n\n\n  // // se è una immagine e la ha inviata l'utente corrente\n  // if (type == TYPE_MSG_IMAGE) {\n  //   const index = this.messages.findIndex(i => i.uid === metadata.uid);\n  //   console.log(\"trovato mesg\", this.messages[index].uid, metadata.uid);\n  //   if(index>-1){\n  //     this.messages.splice(index, 1);\n  //   }\n  // } \n\n  /**\n   * dispose reference della conversazione\n   */\n  dispose() {\n    this.messagesRef.off();\n  }\n\n\n  unsubscribe(key){\n    console.log(\"unsubscribe: \", key);\n    this.listSubsriptions.forEach(sub => {\n      console.log(\"unsubscribe: \", sub.uid, key);\n      if(sub.uid === key){\n        console.log(\"unsubscribe: \", sub.uid, key);\n        sub.unsubscribe(key, null);\n        return;\n      }\n      \n    });\n    \n  }\n\n  \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/chat-conversation-handler.ts","import { Injectable } from '@angular/core';\nimport { Config } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport 'rxjs/add/operator/map';\n\nimport * as firebase from 'firebase/app';\n\n\n// singlenton\nimport { UserService } from '../providers/user/user';\n\n/*\n  Generated class for the AuthService provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular 2 DI.\n*/\n@Injectable()\n/**\n * DESC PROVIDER\n */\nexport class AuthService {\n\n  tenant: string;\n  public token: any;\n  public fireAuth: firebase.auth.Auth;\n  public userProfile: firebase.database.Reference;\n  public urlNodeFirebase: string;\n\n  constructor(\n    //private afAuth: AngularFireAuth, \n    private config: Config, \n    private storage: Storage,\n    private userService:UserService\n  ) {\n    console.log('Hello AuthService Provider');\n    // recupero tenant\n    // console.log('ionViewDidLoad First');\n    // this.userProvider.log(); // log First singleton data\n    // this.userProvider.set(\"First singleton data\")\n\n    let appConfig = config.get(\"appConfig\");\n    this.tenant = appConfig.tenant;\n\n    this.fireAuth = firebase.auth();\n    this.urlNodeFirebase = '/apps/'+this.tenant+'/contacts/';\n    this.userProfile = firebase.database().ref(this.urlNodeFirebase);\n    //this.afAuth.authState.subscribe();\n\n    // this.afAuth.authState.subscribe((user: firebase.User) => {\n    //   this.currentUser = user;\n    // });\n  }\n  \n  //Start Firebase Auth//\n\n  // GetUser\n  getUser(): firebase.User {\n    return this.fireAuth.currentUser;\n  }\n \n\n  // Create User Anonymous\n  // createAnonymousUser(): firebase.Promise<any> {\n  //   return this.fireAuth.signInAnonymously();\n  // }\n\n  // Login with Email\n  doLoginFirebase(email: string, password: string): any {\n    return this.fireAuth.signInWithEmailAndPassword(email, password)\n    // .then(res => {\n    //   console.log(\"signInWithEmailAndPassword::: \",res);\n    // });\n  }\n\n\n  // Signin with Facebook\n  // signInWithFacebook(): any {\n  //   return this.afAuth.auth.signInWithPopup(new firebase.auth.FacebookAuthProvider())\n  //   .then(res => console.log(res));\n  // }\n\n\n  // Register User with Email\n  register(email: string, password: string, firstname: string, lastname: string): any {\n    return this.fireAuth.createUserWithEmailAndPassword(email, password); \n  }\n\n  // delete account\n  delete(){\n    var user = firebase.auth().currentUser;\n    user.delete().then(function() {\n      // User deleted.\n      console.log(\"delete OK \");\n    }).catch(function(error) {\n      // An error happened.\n      console.log(\"delete with error: \",error);\n    });\n  }\n\n  // Reset Password\n  resetPassword(email: string): any {\n    return this.fireAuth.sendPasswordResetEmail(email);\n  }\n  \n  logoutUser() {\n    console.log(\"AuthService::logoutUser\")\n\n    return firebase.auth().signOut()\n    //return this.afAuth.auth.signOut();\n    // .then((res) => {\n    //   console.log(\"logout1\",res);\n    //   console.log(\"logout2\", this.getUser());\n    // })\n    // .catch(function(error) {\n    //   console.log(\"logout failed: \" + error.message)\n    // });\n  }\n  //End Firebase Auth//\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service.ts","import { Http, Headers, RequestOptions, Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n// firebase\nimport * as firebase from 'firebase/app';\n// ====== [BEGIN chat21]\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\nimport { UserService } from '../../providers/user/user';\n// ====== [END chat21]\n\n\n@Injectable()\nexport class TiledeskConversationProvider {\n\n  private BASE_URL: string;\n\n  private appId : string;\n\n  /**\n   * Contains the status of the conversation closing.\n   * \n   * When a new conversation is added from firebase, it will be added to the isConversationClosingMap with a false value.\n   * \n   * When an existing conversation is removed from firebase, it will be removed from the isConversationClosingMap.\n   * \n   * When an user clicks on a conversation to close it,\n   * the conversation with conversationID will be set to true within the isConversationClosingMap.\n   * \n   * If an error occurs the conversation with conversationID will be set to false.\n   * \n   */\n  private isConversationClosingMap: Map<string, boolean>; \n\n  constructor(\n    public http: Http,\n    private chatManager: ChatManager,\n    private userService: UserService\n  ) {\n    this.init();\n    this.isConversationClosingMap = new Map(); \n  }\n\n  private init() {\n    this.BASE_URL = \"https://us-central1-chat-v2-dev.cloudfunctions.net\";\n    // console.log(\"TiledeskConversationProvider::init::BASE_URL::url\", this.BASE_URL);\n\n    // retrieve the appId from the chat21 sdk\n    this.appId = this.chatManager.getTenant();\n    // console.log(\"TiledeskConversationProvider::init::appId::url\", this.appId);\n  }\n\n  // public test() : void {\n  //   console.log(\"TiledeskConversationProvider::test::\", \"ALL OK!\");\n  // }\n\n\n  // Service available at https://github.com/chat21/chat21-cloud-functions/blob/master/docs/api.md#delete-a-conversation\n  // Syntax: \n  // curl  -X DELETE \\\n  //       -H 'Content-Type: application/json' \\\n  //       -H \"Authorization: Bearer <FIREBASE_ID_TOKEN>\" \\\n  //       https://us-central1-<FIREBASE_PROJECT_ID>.cloudfunctions.net/api/<APP_ID>/conversations/<RECIPIENT_ID>\n\n  public deleteConversation(recipientId, callback) {\n\n    // const token = this.userService.returnToken(); // retrieve the user auth token\n    const appId = this.chatManager.getTenant();\n    var that = this;\n    firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\n    .then(function(token) {\n      console.log('idToken.', token);\n      // create the header of the request\n      const headers = new Headers();\n      headers.append('Accept', 'application/json');\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', 'Bearer ' + token);\n      const url = that.BASE_URL + '/api/' + appId + '/conversations/' + recipientId;\n      const options = new RequestOptions({ headers: headers });\n      that.http\n        .delete(url, options)\n        .map((response: Response) => {\n          callback(response, null);\n        }).subscribe();\n    }).catch(function(error) {\n      // Handle error\n      console.log('idToken error: ', error);\n      callback(null, error);\n    });\n  }\n\n  /**\n   * Returns the status of the conversations with conversationId from isConversationClosingMap\n   * \n   * @param conversationId the conversation id\n   * @returns true if the conversation is waiting to be closed, false otherwise\n   */\n  public getClosingConversation(conversationId) {\n    return this.isConversationClosingMap[conversationId];\n  }\n\n  /**\n   * Add the conversation with conversationId to the isConversationClosingMap\n   * \n   * @param conversationId the id of the conversation of which it wants to save the state\n   * @param status true if the conversation is waiting to be closed, false otherwise\n   */\n  public setClosingConversation(conversationId, status) {\n    this.isConversationClosingMap[conversationId] = status;\n  }\n\n  /**\n   * Delete the conversation with conversationId from the isConversationClosingMap\n   * \n   * @param conversationId the id of the conversation of which is wants to delete\n   */\n  public deleteClosingConversation(conversationId) {\n    this.isConversationClosingMap.delete(conversationId);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tiledesk-conversation/tiledesk-conversation.ts","import { Component, NgZone } from '@angular/core';\nimport { PopoverController, IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Events } from 'ionic-angular';\n// models\nimport { UserModel } from '../../models/user';\n// services\nimport { UploadService } from '../../providers/upload-service/upload-service';\nimport { UserService } from '../../providers/user/user';\nimport { ChatManager } from '../../providers/chat-manager/chat-manager';\n// pages\nimport { PopoverProfilePage } from '../popover-profile/popover-profile';\n\n/**\n * Generated class for the ProfilePage page.\n */\n@IonicPage()\n@Component({\n  selector: 'page-profile',\n  templateUrl: 'profile.html',\n})\nexport class ProfilePage {\n  public userDetail: UserModel;\n  public currentUserDetail: UserModel;\n  public uidUser: string;\n\n  public profileYourself: boolean;\n  //public selectedFiles: FileList;\n  //public currentUpload: UploadModel;\n  \n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public userService: UserService,\n    //public navProxy: NavProxyService,\n    public upSvc: UploadService,\n    public popoverCtrl: PopoverController,\n    public zone: NgZone,\n    public chatManager: ChatManager,\n    public events: Events\n  ) {\n    this.uidUser = navParams.get('uidUser');\n  }\n  /**\n   * \n   */\n  ngOnInit() {\n    this.initialize();\n  }\n  /**\n   * imposto subsribe dettaglio utente\n   * controllo se sono nel profilo currentuser oppure usercon cui converso\n   * carico dettaglio user\n   */\n  initialize(){\n    this.events.subscribe('loadUserDetail:complete', userDetail => {\n      this.userDetail = userDetail;\n    });\n    if (!this.uidUser){ // || this.userDetail.uid == this.uidUser\n      this.profileYourself = true;\n      this.currentUserDetail = this.chatManager.getLoggedUser();\n      this.displayImage(this.currentUserDetail.uid);\n    }\n    else {\n      this.profileYourself = false;\n      console.log('this.uidUser',this.uidUser);\n      this.userDetail = new UserModel(this.uidUser, '', '', this.uidUser, '', '');\n      this.userService.loadUserDetail(this.uidUser);\n      this.displayImage(this.uidUser);\n    }\n  }\n  /**\n   * metodo richiamato dalla pg html del current user \n   * alla pressione sul pulsante modifica della foto profillo\n   * apro PopoverProfilePage passando id current user\n   * @param myEvent \n   */\n  presentPopover(myEvent) {\n    let popover = this.popoverCtrl.create(PopoverProfilePage,{uidContact:this.currentUserDetail.uid});\n    popover.present({\n      ev: myEvent\n    });\n    popover.onDidDismiss((data: string) => {\n      //alert(\"popover.onDidDismiss: \"+data);\n      console.log(\" ********* data::: \", data);\n    });\n  }\n  /**\n   * carico url immagine profilo passando id utente\n   */\n  displayImage(uidContact){\n    const that = this;\n    console.log(\" ********* displayImage::: \");\n    this.upSvc.display(uidContact, 'thumb')\n    .then((url) => {\n      that.zone.run(() => {\n        if(that.profileYourself){\n          that.currentUserDetail.imageurl = url;\n        }else{\n          that.userDetail.imageurl = url;\n        }\n      });\n    })\n    .catch((error)=>{\n      console.log(\"displayImage error::: \",error);\n    });\n  }\n  /**\n   * chiudo il popup profilo utente\n   */\n  goBack(){\n    this.navCtrl.pop({animate: false, duration: 0});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/profile/profile.ts","import { Component } from '@angular/core';\nimport { Events, ViewController, IonicPage, NavParams } from 'ionic-angular';\n// models\nimport { MessageModel } from '../../models/message';\n// utils\nimport { TYPE_POPUP_LIST_CONVERSATIONS, TYPE_POPUP_DETAIL_MESSAGE, CURR_VER_DEV, CURR_VER_PROD } from '../../utils/constants';\nimport { ArchivedConversationsPage } from '../archived-conversations/archived-conversations';\nimport { AlertController } from 'ionic-angular';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-popover',\n  templateUrl: 'popover.html'\n})\n\n\n\nexport class PopoverPage {\n\n  public type: string;\n  public message: MessageModel;\n\n  TYPE_POPUP_LIST_CONVERSATIONS = TYPE_POPUP_LIST_CONVERSATIONS;\n  TYPE_POPUP_DETAIL_MESSAGE = TYPE_POPUP_DETAIL_MESSAGE;\n\n  constructor(\n    public viewCtrl: ViewController,\n    public navParams: NavParams,\n    public events: Events,\n    private alertCtrl: AlertController\n  ) {\n    this.type = navParams.get('typePopup');\n    this.message = navParams.get('message');\n    console.log(\" PopoverPage ********* data::: \", this.message);\n  }\n  /**\n   * chiudo il popover menu\n   */\n  close() {\n    this.viewCtrl.dismiss();\n  }\n  /**\n   * chiudo il popover passando 'ProfilePage' al chiamante (lista conversazioni)\n   */\n  goToProfilePage(){\n    this.viewCtrl.dismiss(\"ProfilePage\");\n  }\n\n  goToInfoMessage(){\n   // pubblico open info message passando il messaggio\n   this.viewCtrl.dismiss();\n   this.events.publish('openInfoMessage', (this.message));\n   console.log('goToInfoMessage **************');\n  }\n  /**\n   * chiudo il popover passando 'logOut' al chiamante (lista conversazioni)\n   */\n  logOut() {\n    this.viewCtrl.dismiss(\"logOut\");\n  }\n\n  /**\n   * returns the result of the dismiss\n   * @returns a string that identify the closed page\n   */\n  openArchivedConversationsPage() {\n    this.viewCtrl.dismiss(\"ArchivedConversationsPage\");\n  }\n\n\n  openInfo(){\n    var BUILD_VERSION = '<p style=\"text-align: center;\">version ' + CURR_VER_PROD + ' build ' + CURR_VER_DEV+'</p>'; // 'b.0.5';\n    var that = this;\n    let alert = this.alertCtrl.create({\n      title: '',\n      subTitle: BUILD_VERSION,\n      buttons: [\n      {\n          text: 'OK',\n          role: 'ok',\n          handler: data => {\n            that.viewCtrl.dismiss();\n          }\n      }]\n    });\n    alert.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/popover/popover.ts"],"sourceRoot":""}